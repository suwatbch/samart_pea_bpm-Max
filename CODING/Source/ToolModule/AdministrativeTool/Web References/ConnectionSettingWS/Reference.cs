//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace AdministrativeTool.ConnectionSettingWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConnectionSettingWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ConnectionSettingWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetConnectionSettingDisplayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionSettingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConnectionSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateConnectionSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteConnectionSettingByBranchIdListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ConnectionSettingWebService() {
            this.Url = global::AdministrativeTool.Properties.Settings.Default.AdministrativeTool_ConnectionSettingWS_ConnectionSettingWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetConnectionSettingDisplayCompletedEventHandler GetConnectionSettingDisplayCompleted;
        
        /// <remarks/>
        public event GetConnectionSettingInfoCompletedEventHandler GetConnectionSettingInfoCompleted;
        
        /// <remarks/>
        public event AddConnectionSettingCompletedEventHandler AddConnectionSettingCompleted;
        
        /// <remarks/>
        public event UpdateConnectionSettingCompletedEventHandler UpdateConnectionSettingCompleted;
        
        /// <remarks/>
        public event DeleteConnectionSettingByBranchIdListCompletedEventHandler DeleteConnectionSettingByBranchIdListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConnectionSettingDisplay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConnectionSettingDisplay(string branchId, string active) {
            object[] results = this.Invoke("GetConnectionSettingDisplay", new object[] {
                        branchId,
                        active});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionSettingDisplayAsync(string branchId, string active) {
            this.GetConnectionSettingDisplayAsync(branchId, active, null);
        }
        
        /// <remarks/>
        public void GetConnectionSettingDisplayAsync(string branchId, string active, object userState) {
            if ((this.GetConnectionSettingDisplayOperationCompleted == null)) {
                this.GetConnectionSettingDisplayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionSettingDisplayOperationCompleted);
            }
            this.InvokeAsync("GetConnectionSettingDisplay", new object[] {
                        branchId,
                        active}, this.GetConnectionSettingDisplayOperationCompleted, userState);
        }
        
        private void OnGetConnectionSettingDisplayOperationCompleted(object arg) {
            if ((this.GetConnectionSettingDisplayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionSettingDisplayCompleted(this, new GetConnectionSettingDisplayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConnectionSettingInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionSettingInfo GetConnectionSettingInfo(string branchId) {
            object[] results = this.Invoke("GetConnectionSettingInfo", new object[] {
                        branchId});
            return ((ConnectionSettingInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionSettingInfoAsync(string branchId) {
            this.GetConnectionSettingInfoAsync(branchId, null);
        }
        
        /// <remarks/>
        public void GetConnectionSettingInfoAsync(string branchId, object userState) {
            if ((this.GetConnectionSettingInfoOperationCompleted == null)) {
                this.GetConnectionSettingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionSettingInfoOperationCompleted);
            }
            this.InvokeAsync("GetConnectionSettingInfo", new object[] {
                        branchId}, this.GetConnectionSettingInfoOperationCompleted, userState);
        }
        
        private void OnGetConnectionSettingInfoOperationCompleted(object arg) {
            if ((this.GetConnectionSettingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionSettingInfoCompleted(this, new GetConnectionSettingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConnectionSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddConnectionSetting(ConnectionSettingInfo connectionSettingInfo) {
            object[] results = this.Invoke("AddConnectionSetting", new object[] {
                        connectionSettingInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddConnectionSettingAsync(ConnectionSettingInfo connectionSettingInfo) {
            this.AddConnectionSettingAsync(connectionSettingInfo, null);
        }
        
        /// <remarks/>
        public void AddConnectionSettingAsync(ConnectionSettingInfo connectionSettingInfo, object userState) {
            if ((this.AddConnectionSettingOperationCompleted == null)) {
                this.AddConnectionSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConnectionSettingOperationCompleted);
            }
            this.InvokeAsync("AddConnectionSetting", new object[] {
                        connectionSettingInfo}, this.AddConnectionSettingOperationCompleted, userState);
        }
        
        private void OnAddConnectionSettingOperationCompleted(object arg) {
            if ((this.AddConnectionSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConnectionSettingCompleted(this, new AddConnectionSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateConnectionSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateConnectionSetting(string targetBranchId, ConnectionSettingInfo connectionSettingInfo) {
            object[] results = this.Invoke("UpdateConnectionSetting", new object[] {
                        targetBranchId,
                        connectionSettingInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateConnectionSettingAsync(string targetBranchId, ConnectionSettingInfo connectionSettingInfo) {
            this.UpdateConnectionSettingAsync(targetBranchId, connectionSettingInfo, null);
        }
        
        /// <remarks/>
        public void UpdateConnectionSettingAsync(string targetBranchId, ConnectionSettingInfo connectionSettingInfo, object userState) {
            if ((this.UpdateConnectionSettingOperationCompleted == null)) {
                this.UpdateConnectionSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateConnectionSettingOperationCompleted);
            }
            this.InvokeAsync("UpdateConnectionSetting", new object[] {
                        targetBranchId,
                        connectionSettingInfo}, this.UpdateConnectionSettingOperationCompleted, userState);
        }
        
        private void OnUpdateConnectionSettingOperationCompleted(object arg) {
            if ((this.UpdateConnectionSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateConnectionSettingCompleted(this, new UpdateConnectionSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteConnectionSettingByBranchIdList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteConnectionSettingByBranchIdList(string branchIdList) {
            object[] results = this.Invoke("DeleteConnectionSettingByBranchIdList", new object[] {
                        branchIdList});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteConnectionSettingByBranchIdListAsync(string branchIdList) {
            this.DeleteConnectionSettingByBranchIdListAsync(branchIdList, null);
        }
        
        /// <remarks/>
        public void DeleteConnectionSettingByBranchIdListAsync(string branchIdList, object userState) {
            if ((this.DeleteConnectionSettingByBranchIdListOperationCompleted == null)) {
                this.DeleteConnectionSettingByBranchIdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteConnectionSettingByBranchIdListOperationCompleted);
            }
            this.InvokeAsync("DeleteConnectionSettingByBranchIdList", new object[] {
                        branchIdList}, this.DeleteConnectionSettingByBranchIdListOperationCompleted, userState);
        }
        
        private void OnDeleteConnectionSettingByBranchIdListOperationCompleted(object arg) {
            if ((this.DeleteConnectionSettingByBranchIdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteConnectionSettingByBranchIdListCompleted(this, new DeleteConnectionSettingByBranchIdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConnectionSettingInfo {
        
        private string branchIdField;
        
        private string onlineField;
        
        private string branchField;
        
        private string heartbeatField;
        
        private System.Nullable<System.DateTime> modifiedDtField;
        
        private string modifiedByField;
        
        private string activeField;
        
        /// <remarks/>
        public string BranchId {
            get {
                return this.branchIdField;
            }
            set {
                this.branchIdField = value;
            }
        }
        
        /// <remarks/>
        public string Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public string Branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        /// <remarks/>
        public string Heartbeat {
            get {
                return this.heartbeatField;
            }
            set {
                this.heartbeatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ModifiedDt {
            get {
                return this.modifiedDtField;
            }
            set {
                this.modifiedDtField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public string Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetConnectionSettingDisplayCompletedEventHandler(object sender, GetConnectionSettingDisplayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionSettingDisplayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionSettingDisplayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetConnectionSettingInfoCompletedEventHandler(object sender, GetConnectionSettingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionSettingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionSettingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConnectionSettingInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionSettingInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void AddConnectionSettingCompletedEventHandler(object sender, AddConnectionSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConnectionSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConnectionSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void UpdateConnectionSettingCompletedEventHandler(object sender, UpdateConnectionSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateConnectionSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateConnectionSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteConnectionSettingByBranchIdListCompletedEventHandler(object sender, DeleteConnectionSettingByBranchIdListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteConnectionSettingByBranchIdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteConnectionSettingByBranchIdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591