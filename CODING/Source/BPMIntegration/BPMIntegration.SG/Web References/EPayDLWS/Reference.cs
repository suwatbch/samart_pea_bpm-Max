//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.EPayDLWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EPaymentWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class EPaymentWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback GetUpdateEPayClarifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateEPayUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateEPayUploadItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateRTEPayUploadPaymentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EPaymentWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_EPayDLWS_EPaymentWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUpdateEPayClarifyCompletedEventHandler GetUpdateEPayClarifyCompleted;
        
        /// <remarks/>
        public event GetUpdateEPayUploadCompletedEventHandler GetUpdateEPayUploadCompleted;
        
        /// <remarks/>
        public event GetUpdateEPayUploadItemCompletedEventHandler GetUpdateEPayUploadItemCompleted;
        
        /// <remarks/>
        public event GetUpdateRTEPayUploadPaymentCompletedEventHandler GetUpdateRTEPayUploadPaymentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateEPayClarify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateEPayClarify(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateEPayClarify", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateEPayClarifyAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateEPayClarifyAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateEPayClarifyAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateEPayClarifyOperationCompleted == null)) {
                this.GetUpdateEPayClarifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateEPayClarifyOperationCompleted);
            }
            this.InvokeAsync("GetUpdateEPayClarify", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateEPayClarifyOperationCompleted, userState);
        }
        
        private void OnGetUpdateEPayClarifyOperationCompleted(object arg) {
            if ((this.GetUpdateEPayClarifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateEPayClarifyCompleted(this, new GetUpdateEPayClarifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateEPayUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateEPayUpload(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateEPayUpload", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateEPayUploadAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateEPayUploadAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateEPayUploadAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateEPayUploadOperationCompleted == null)) {
                this.GetUpdateEPayUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateEPayUploadOperationCompleted);
            }
            this.InvokeAsync("GetUpdateEPayUpload", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateEPayUploadOperationCompleted, userState);
        }
        
        private void OnGetUpdateEPayUploadOperationCompleted(object arg) {
            if ((this.GetUpdateEPayUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateEPayUploadCompleted(this, new GetUpdateEPayUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateEPayUploadItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateEPayUploadItem(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateEPayUploadItem", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateEPayUploadItemAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateEPayUploadItemAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateEPayUploadItemAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateEPayUploadItemOperationCompleted == null)) {
                this.GetUpdateEPayUploadItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateEPayUploadItemOperationCompleted);
            }
            this.InvokeAsync("GetUpdateEPayUploadItem", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateEPayUploadItemOperationCompleted, userState);
        }
        
        private void OnGetUpdateEPayUploadItemOperationCompleted(object arg) {
            if ((this.GetUpdateEPayUploadItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateEPayUploadItemCompleted(this, new GetUpdateEPayUploadItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateRTEPayUploadPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateRTEPayUploadPayment(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateRTEPayUploadPayment", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateRTEPayUploadPaymentAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateRTEPayUploadPaymentAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateRTEPayUploadPaymentAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateRTEPayUploadPaymentOperationCompleted == null)) {
                this.GetUpdateRTEPayUploadPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateRTEPayUploadPaymentOperationCompleted);
            }
            this.InvokeAsync("GetUpdateRTEPayUploadPayment", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateRTEPayUploadPaymentOperationCompleted, userState);
        }
        
        private void OnGetUpdateRTEPayUploadPaymentOperationCompleted(object arg) {
            if ((this.GetUpdateRTEPayUploadPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateRTEPayUploadPaymentCompleted(this, new GetUpdateRTEPayUploadPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateEPayClarifyCompletedEventHandler(object sender, GetUpdateEPayClarifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateEPayClarifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateEPayClarifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateEPayUploadCompletedEventHandler(object sender, GetUpdateEPayUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateEPayUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateEPayUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateEPayUploadItemCompletedEventHandler(object sender, GetUpdateEPayUploadItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateEPayUploadItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateEPayUploadItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateRTEPayUploadPaymentCompletedEventHandler(object sender, GetUpdateRTEPayUploadPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateRTEPayUploadPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateRTEPayUploadPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591