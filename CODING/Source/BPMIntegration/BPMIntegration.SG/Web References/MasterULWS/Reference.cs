//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.MasterULWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MasterIntegrationWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MasterIntegrationWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback GetUpdateBusinessPartnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateMRUOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateMRUPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateContractAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDebtTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMRUPlanOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MasterIntegrationWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_MasterULWS_MasterIntegrationWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUpdateBusinessPartnerCompletedEventHandler GetUpdateBusinessPartnerCompleted;
        
        /// <remarks/>
        public event GetUpdateBranchCompletedEventHandler GetUpdateBranchCompleted;
        
        /// <remarks/>
        public event GetUpdateMRUCompletedEventHandler GetUpdateMRUCompleted;
        
        /// <remarks/>
        public event GetUpdateMRUPlanCompletedEventHandler GetUpdateMRUPlanCompleted;
        
        /// <remarks/>
        public event GetUpdateContractAccountCompletedEventHandler GetUpdateContractAccountCompleted;
        
        /// <remarks/>
        public event GetUpdateEmployeeCompletedEventHandler GetUpdateEmployeeCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyAssetCompletedEventHandler GetUpdateAgencyAssetCompleted;
        
        /// <remarks/>
        public event GetUpdateBankCompletedEventHandler GetUpdateBankCompleted;
        
        /// <remarks/>
        public event GetUpdateBankAccountCompletedEventHandler GetUpdateBankAccountCompleted;
        
        /// <remarks/>
        public event GetUpdateDebtTypeCompletedEventHandler GetUpdateDebtTypeCompleted;
        
        /// <remarks/>
        public event UploadMRUPlanCompletedEventHandler UploadMRUPlanCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBusinessPartner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBusinessPartner(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBusinessPartner", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBusinessPartnerAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBusinessPartnerOperationCompleted == null)) {
                this.GetUpdateBusinessPartnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBusinessPartnerOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBusinessPartner", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBusinessPartnerOperationCompleted, userState);
        }
        
        private void OnGetUpdateBusinessPartnerOperationCompleted(object arg) {
            if ((this.GetUpdateBusinessPartnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBusinessPartnerCompleted(this, new GetUpdateBusinessPartnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBranch(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBranch", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBranchAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBranchAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBranchAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBranchOperationCompleted == null)) {
                this.GetUpdateBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBranchOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBranch", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBranchOperationCompleted, userState);
        }
        
        private void OnGetUpdateBranchOperationCompleted(object arg) {
            if ((this.GetUpdateBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBranchCompleted(this, new GetUpdateBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMRU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateMRU(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateMRU", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateMRUAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateMRUAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateMRUAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateMRUOperationCompleted == null)) {
                this.GetUpdateMRUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateMRUOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMRU", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateMRUOperationCompleted, userState);
        }
        
        private void OnGetUpdateMRUOperationCompleted(object arg) {
            if ((this.GetUpdateMRUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateMRUCompleted(this, new GetUpdateMRUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMRUPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateMRUPlan(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateMRUPlan", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateMRUPlanAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateMRUPlanAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateMRUPlanAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateMRUPlanOperationCompleted == null)) {
                this.GetUpdateMRUPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateMRUPlanOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMRUPlan", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateMRUPlanOperationCompleted, userState);
        }
        
        private void OnGetUpdateMRUPlanOperationCompleted(object arg) {
            if ((this.GetUpdateMRUPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateMRUPlanCompleted(this, new GetUpdateMRUPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateContractAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateContractAccount(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateContractAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateContractAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateContractAccountAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateContractAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateContractAccountOperationCompleted == null)) {
                this.GetUpdateContractAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateContractAccountOperationCompleted);
            }
            this.InvokeAsync("GetUpdateContractAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateContractAccountOperationCompleted, userState);
        }
        
        private void OnGetUpdateContractAccountOperationCompleted(object arg) {
            if ((this.GetUpdateContractAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateContractAccountCompleted(this, new GetUpdateContractAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateEmployee(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateEmployee", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateEmployeeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateEmployeeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateEmployeeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateEmployeeOperationCompleted == null)) {
                this.GetUpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateEmployee", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnGetUpdateEmployeeOperationCompleted(object arg) {
            if ((this.GetUpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateEmployeeCompleted(this, new GetUpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyAsset(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyAsset", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyAssetAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyAssetAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyAssetAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyAssetOperationCompleted == null)) {
                this.GetUpdateAgencyAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyAssetOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyAsset", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyAssetOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyAssetOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyAssetCompleted(this, new GetUpdateAgencyAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBank(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBankAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBankOperationCompleted == null)) {
                this.GetUpdateBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBankOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBankOperationCompleted, userState);
        }
        
        private void OnGetUpdateBankOperationCompleted(object arg) {
            if ((this.GetUpdateBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBankCompleted(this, new GetUpdateBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBankAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBankAccount(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBankAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBankAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBankAccountAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBankAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBankAccountOperationCompleted == null)) {
                this.GetUpdateBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBankAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBankAccountOperationCompleted, userState);
        }
        
        private void OnGetUpdateBankAccountOperationCompleted(object arg) {
            if ((this.GetUpdateBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBankAccountCompleted(this, new GetUpdateBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateDebtType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateDebtType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateDebtType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDebtTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateDebtTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateDebtTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateDebtTypeOperationCompleted == null)) {
                this.GetUpdateDebtTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDebtTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateDebtType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateDebtTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateDebtTypeOperationCompleted(object arg) {
            if ((this.GetUpdateDebtTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDebtTypeCompleted(this, new GetUpdateDebtTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMRUPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadMRUPlan(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadMRUPlan", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMRUPlanAsync(CompressData cds, string branchId) {
            this.UploadMRUPlanAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadMRUPlanAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadMRUPlanOperationCompleted == null)) {
                this.UploadMRUPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMRUPlanOperationCompleted);
            }
            this.InvokeAsync("UploadMRUPlan", new object[] {
                        cds,
                        branchId}, this.UploadMRUPlanOperationCompleted, userState);
        }
        
        private void OnUploadMRUPlanOperationCompleted(object arg) {
            if ((this.UploadMRUPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMRUPlanCompleted(this, new UploadMRUPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBusinessPartnerCompletedEventHandler(object sender, GetUpdateBusinessPartnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBusinessPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBusinessPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBranchCompletedEventHandler(object sender, GetUpdateBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateMRUCompletedEventHandler(object sender, GetUpdateMRUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateMRUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateMRUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateMRUPlanCompletedEventHandler(object sender, GetUpdateMRUPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateMRUPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateMRUPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateContractAccountCompletedEventHandler(object sender, GetUpdateContractAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateContractAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateContractAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateEmployeeCompletedEventHandler(object sender, GetUpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyAssetCompletedEventHandler(object sender, GetUpdateAgencyAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBankCompletedEventHandler(object sender, GetUpdateBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBankAccountCompletedEventHandler(object sender, GetUpdateBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateDebtTypeCompletedEventHandler(object sender, GetUpdateDebtTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateDebtTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateDebtTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadMRUPlanCompletedEventHandler(object sender, UploadMRUPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMRUPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMRUPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591