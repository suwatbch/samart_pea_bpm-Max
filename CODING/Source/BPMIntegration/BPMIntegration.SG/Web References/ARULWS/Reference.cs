//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.ARULWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ARWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ARWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback UploadAROperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadARPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadARPaymentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRTARPaymentTypeARPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadReceiptItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPaymentLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAPChequePaymentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ARWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_ARULWS_ARWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadARCompletedEventHandler UploadARCompleted;
        
        /// <remarks/>
        public event UploadARPaymentCompletedEventHandler UploadARPaymentCompleted;
        
        /// <remarks/>
        public event UploadPaymentCompletedEventHandler UploadPaymentCompleted;
        
        /// <remarks/>
        public event UploadARPaymentTypeCompletedEventHandler UploadARPaymentTypeCompleted;
        
        /// <remarks/>
        public event UploadRTARPaymentTypeARPaymentCompletedEventHandler UploadRTARPaymentTypeARPaymentCompleted;
        
        /// <remarks/>
        public event UploadReceiptCompletedEventHandler UploadReceiptCompleted;
        
        /// <remarks/>
        public event UploadReceiptItemCompletedEventHandler UploadReceiptItemCompleted;
        
        /// <remarks/>
        public event UploadPaymentLogCompletedEventHandler UploadPaymentLogCompleted;
        
        /// <remarks/>
        public event UploadAPCompletedEventHandler UploadAPCompleted;
        
        /// <remarks/>
        public event UploadAPChequePaymentCompletedEventHandler UploadAPChequePaymentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadAR(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadAR", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadARAsync(CompressData cds, string branchId) {
            this.UploadARAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadARAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadAROperationCompleted == null)) {
                this.UploadAROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAROperationCompleted);
            }
            this.InvokeAsync("UploadAR", new object[] {
                        cds,
                        branchId}, this.UploadAROperationCompleted, userState);
        }
        
        private void OnUploadAROperationCompleted(object arg) {
            if ((this.UploadARCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadARCompleted(this, new UploadARCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadARPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadARPayment(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadARPayment", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadARPaymentAsync(CompressData cds, string branchId) {
            this.UploadARPaymentAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadARPaymentAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadARPaymentOperationCompleted == null)) {
                this.UploadARPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadARPaymentOperationCompleted);
            }
            this.InvokeAsync("UploadARPayment", new object[] {
                        cds,
                        branchId}, this.UploadARPaymentOperationCompleted, userState);
        }
        
        private void OnUploadARPaymentOperationCompleted(object arg) {
            if ((this.UploadARPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadARPaymentCompleted(this, new UploadARPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadPayment(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadPayment", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPaymentAsync(CompressData cds, string branchId) {
            this.UploadPaymentAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadPaymentAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadPaymentOperationCompleted == null)) {
                this.UploadPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPaymentOperationCompleted);
            }
            this.InvokeAsync("UploadPayment", new object[] {
                        cds,
                        branchId}, this.UploadPaymentOperationCompleted, userState);
        }
        
        private void OnUploadPaymentOperationCompleted(object arg) {
            if ((this.UploadPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPaymentCompleted(this, new UploadPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadARPaymentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadARPaymentType(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadARPaymentType", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadARPaymentTypeAsync(CompressData cds, string branchId) {
            this.UploadARPaymentTypeAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadARPaymentTypeAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadARPaymentTypeOperationCompleted == null)) {
                this.UploadARPaymentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadARPaymentTypeOperationCompleted);
            }
            this.InvokeAsync("UploadARPaymentType", new object[] {
                        cds,
                        branchId}, this.UploadARPaymentTypeOperationCompleted, userState);
        }
        
        private void OnUploadARPaymentTypeOperationCompleted(object arg) {
            if ((this.UploadARPaymentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadARPaymentTypeCompleted(this, new UploadARPaymentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadRTARPaymentTypeARPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadRTARPaymentTypeARPayment(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadRTARPaymentTypeARPayment", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRTARPaymentTypeARPaymentAsync(CompressData cds, string branchId) {
            this.UploadRTARPaymentTypeARPaymentAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadRTARPaymentTypeARPaymentAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadRTARPaymentTypeARPaymentOperationCompleted == null)) {
                this.UploadRTARPaymentTypeARPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRTARPaymentTypeARPaymentOperationCompleted);
            }
            this.InvokeAsync("UploadRTARPaymentTypeARPayment", new object[] {
                        cds,
                        branchId}, this.UploadRTARPaymentTypeARPaymentOperationCompleted, userState);
        }
        
        private void OnUploadRTARPaymentTypeARPaymentOperationCompleted(object arg) {
            if ((this.UploadRTARPaymentTypeARPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRTARPaymentTypeARPaymentCompleted(this, new UploadRTARPaymentTypeARPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadReceipt(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadReceipt", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadReceiptAsync(CompressData cds, string branchId) {
            this.UploadReceiptAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadReceiptAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadReceiptOperationCompleted == null)) {
                this.UploadReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadReceiptOperationCompleted);
            }
            this.InvokeAsync("UploadReceipt", new object[] {
                        cds,
                        branchId}, this.UploadReceiptOperationCompleted, userState);
        }
        
        private void OnUploadReceiptOperationCompleted(object arg) {
            if ((this.UploadReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadReceiptCompleted(this, new UploadReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadReceiptItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadReceiptItem(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadReceiptItem", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadReceiptItemAsync(CompressData cds, string branchId) {
            this.UploadReceiptItemAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadReceiptItemAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadReceiptItemOperationCompleted == null)) {
                this.UploadReceiptItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadReceiptItemOperationCompleted);
            }
            this.InvokeAsync("UploadReceiptItem", new object[] {
                        cds,
                        branchId}, this.UploadReceiptItemOperationCompleted, userState);
        }
        
        private void OnUploadReceiptItemOperationCompleted(object arg) {
            if ((this.UploadReceiptItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadReceiptItemCompleted(this, new UploadReceiptItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadPaymentLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadPaymentLog(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadPaymentLog", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPaymentLogAsync(CompressData cds, string branchId) {
            this.UploadPaymentLogAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadPaymentLogAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadPaymentLogOperationCompleted == null)) {
                this.UploadPaymentLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPaymentLogOperationCompleted);
            }
            this.InvokeAsync("UploadPaymentLog", new object[] {
                        cds,
                        branchId}, this.UploadPaymentLogOperationCompleted, userState);
        }
        
        private void OnUploadPaymentLogOperationCompleted(object arg) {
            if ((this.UploadPaymentLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPaymentLogCompleted(this, new UploadPaymentLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadAP(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadAP", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAPAsync(CompressData cds, string branchId) {
            this.UploadAPAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadAPAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadAPOperationCompleted == null)) {
                this.UploadAPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAPOperationCompleted);
            }
            this.InvokeAsync("UploadAP", new object[] {
                        cds,
                        branchId}, this.UploadAPOperationCompleted, userState);
        }
        
        private void OnUploadAPOperationCompleted(object arg) {
            if ((this.UploadAPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAPCompleted(this, new UploadAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadAPChequePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadAPChequePayment(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadAPChequePayment", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAPChequePaymentAsync(CompressData cds, string branchId) {
            this.UploadAPChequePaymentAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadAPChequePaymentAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadAPChequePaymentOperationCompleted == null)) {
                this.UploadAPChequePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAPChequePaymentOperationCompleted);
            }
            this.InvokeAsync("UploadAPChequePayment", new object[] {
                        cds,
                        branchId}, this.UploadAPChequePaymentOperationCompleted, userState);
        }
        
        private void OnUploadAPChequePaymentOperationCompleted(object arg) {
            if ((this.UploadAPChequePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAPChequePaymentCompleted(this, new UploadAPChequePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadARCompletedEventHandler(object sender, UploadARCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadARCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadARCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadARPaymentCompletedEventHandler(object sender, UploadARPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadARPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadARPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadPaymentCompletedEventHandler(object sender, UploadPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadARPaymentTypeCompletedEventHandler(object sender, UploadARPaymentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadARPaymentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadARPaymentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadRTARPaymentTypeARPaymentCompletedEventHandler(object sender, UploadRTARPaymentTypeARPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRTARPaymentTypeARPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRTARPaymentTypeARPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadReceiptCompletedEventHandler(object sender, UploadReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadReceiptItemCompletedEventHandler(object sender, UploadReceiptItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadReceiptItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadReceiptItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadPaymentLogCompletedEventHandler(object sender, UploadPaymentLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPaymentLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPaymentLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadAPCompletedEventHandler(object sender, UploadAPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadAPChequePaymentCompletedEventHandler(object sender, UploadAPChequePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAPChequePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAPChequePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591