//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.MasterDLWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MasterIntegrationWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MasterIntegrationWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback GetUpdateNonWorkingDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAccountClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateContractTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateMeterSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatePaymentMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateTaxCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateUnitTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBusinessPartnerTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatePaymentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateInterestKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyBillCollectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyBillOutStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyCommissionRateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBillBookStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyCollectAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDisconnectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateCashierMoneyFlowTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateOwnBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBusinessPartnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateMRUOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateMRUPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateContractAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateAgencyAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateBankAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDebtTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatePaymentSequenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateOldCaMappingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MasterIntegrationWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_MasterDLWS_MasterIntegrationWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUpdateNonWorkingDayCompletedEventHandler GetUpdateNonWorkingDayCompleted;
        
        /// <remarks/>
        public event GetUpdateAccountClassCompletedEventHandler GetUpdateAccountClassCompleted;
        
        /// <remarks/>
        public event GetUpdateContractTypeCompletedEventHandler GetUpdateContractTypeCompleted;
        
        /// <remarks/>
        public event GetUpdateMeterSizeCompletedEventHandler GetUpdateMeterSizeCompleted;
        
        /// <remarks/>
        public event GetUpdatePaymentMethodCompletedEventHandler GetUpdatePaymentMethodCompleted;
        
        /// <remarks/>
        public event GetUpdateTaxCodeCompletedEventHandler GetUpdateTaxCodeCompleted;
        
        /// <remarks/>
        public event GetUpdateUnitTypeCompletedEventHandler GetUpdateUnitTypeCompleted;
        
        /// <remarks/>
        public event GetUpdateBusinessPartnerTypeCompletedEventHandler GetUpdateBusinessPartnerTypeCompleted;
        
        /// <remarks/>
        public event GetUpdateCalendarCompletedEventHandler GetUpdateCalendarCompleted;
        
        /// <remarks/>
        public event GetUpdatePaymentTypeCompletedEventHandler GetUpdatePaymentTypeCompleted;
        
        /// <remarks/>
        public event GetUpdateInterestKeyCompletedEventHandler GetUpdateInterestKeyCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyBillCollectionStatusCompletedEventHandler GetUpdateAgencyBillCollectionStatusCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyBillOutStatusCompletedEventHandler GetUpdateAgencyBillOutStatusCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyCommissionRateCompletedEventHandler GetUpdateAgencyCommissionRateCompleted;
        
        /// <remarks/>
        public event GetUpdateBillBookStatusCompletedEventHandler GetUpdateBillBookStatusCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyCollectAreaCompletedEventHandler GetUpdateAgencyCollectAreaCompleted;
        
        /// <remarks/>
        public event GetUpdateDisconnectionStatusCompletedEventHandler GetUpdateDisconnectionStatusCompleted;
        
        /// <remarks/>
        public event GetUpdateCashierMoneyFlowTypeCompletedEventHandler GetUpdateCashierMoneyFlowTypeCompleted;
        
        /// <remarks/>
        public event GetUpdateOwnBankCompletedEventHandler GetUpdateOwnBankCompleted;
        
        /// <remarks/>
        public event GetUpdateBusinessPartnerCompletedEventHandler GetUpdateBusinessPartnerCompleted;
        
        /// <remarks/>
        public event GetUpdateBranchCompletedEventHandler GetUpdateBranchCompleted;
        
        /// <remarks/>
        public event GetUpdateMRUCompletedEventHandler GetUpdateMRUCompleted;
        
        /// <remarks/>
        public event GetUpdateMRUPlanCompletedEventHandler GetUpdateMRUPlanCompleted;
        
        /// <remarks/>
        public event GetUpdateContractAccountCompletedEventHandler GetUpdateContractAccountCompleted;
        
        /// <remarks/>
        public event GetUpdateEmployeeCompletedEventHandler GetUpdateEmployeeCompleted;
        
        /// <remarks/>
        public event GetUpdateAgencyAssetCompletedEventHandler GetUpdateAgencyAssetCompleted;
        
        /// <remarks/>
        public event GetUpdateBankCompletedEventHandler GetUpdateBankCompleted;
        
        /// <remarks/>
        public event GetUpdateBankAccountCompletedEventHandler GetUpdateBankAccountCompleted;
        
        /// <remarks/>
        public event GetUpdateDebtTypeCompletedEventHandler GetUpdateDebtTypeCompleted;
        
        /// <remarks/>
        public event GetUpdatePaymentSequenceCompletedEventHandler GetUpdatePaymentSequenceCompleted;
        
        /// <remarks/>
        public event GetUpdateOldCaMappingCompletedEventHandler GetUpdateOldCaMappingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateNonWorkingDay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateNonWorkingDay(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateNonWorkingDay", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateNonWorkingDayAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateNonWorkingDayAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateNonWorkingDayAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateNonWorkingDayOperationCompleted == null)) {
                this.GetUpdateNonWorkingDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateNonWorkingDayOperationCompleted);
            }
            this.InvokeAsync("GetUpdateNonWorkingDay", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateNonWorkingDayOperationCompleted, userState);
        }
        
        private void OnGetUpdateNonWorkingDayOperationCompleted(object arg) {
            if ((this.GetUpdateNonWorkingDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateNonWorkingDayCompleted(this, new GetUpdateNonWorkingDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAccountClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAccountClass(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAccountClass", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAccountClassAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAccountClassAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAccountClassAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAccountClassOperationCompleted == null)) {
                this.GetUpdateAccountClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAccountClassOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAccountClass", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAccountClassOperationCompleted, userState);
        }
        
        private void OnGetUpdateAccountClassOperationCompleted(object arg) {
            if ((this.GetUpdateAccountClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAccountClassCompleted(this, new GetUpdateAccountClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateContractType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateContractType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateContractType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateContractTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateContractTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateContractTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateContractTypeOperationCompleted == null)) {
                this.GetUpdateContractTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateContractTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateContractType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateContractTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateContractTypeOperationCompleted(object arg) {
            if ((this.GetUpdateContractTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateContractTypeCompleted(this, new GetUpdateContractTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMeterSize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateMeterSize(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateMeterSize", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateMeterSizeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateMeterSizeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateMeterSizeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateMeterSizeOperationCompleted == null)) {
                this.GetUpdateMeterSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateMeterSizeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMeterSize", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateMeterSizeOperationCompleted, userState);
        }
        
        private void OnGetUpdateMeterSizeOperationCompleted(object arg) {
            if ((this.GetUpdateMeterSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateMeterSizeCompleted(this, new GetUpdateMeterSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdatePaymentMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdatePaymentMethod(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdatePaymentMethod", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatePaymentMethodAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdatePaymentMethodAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdatePaymentMethodAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdatePaymentMethodOperationCompleted == null)) {
                this.GetUpdatePaymentMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatePaymentMethodOperationCompleted);
            }
            this.InvokeAsync("GetUpdatePaymentMethod", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdatePaymentMethodOperationCompleted, userState);
        }
        
        private void OnGetUpdatePaymentMethodOperationCompleted(object arg) {
            if ((this.GetUpdatePaymentMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatePaymentMethodCompleted(this, new GetUpdatePaymentMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateTaxCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateTaxCode(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateTaxCode", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateTaxCodeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateTaxCodeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateTaxCodeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateTaxCodeOperationCompleted == null)) {
                this.GetUpdateTaxCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateTaxCodeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateTaxCode", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateTaxCodeOperationCompleted, userState);
        }
        
        private void OnGetUpdateTaxCodeOperationCompleted(object arg) {
            if ((this.GetUpdateTaxCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateTaxCodeCompleted(this, new GetUpdateTaxCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateUnitType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateUnitType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateUnitType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateUnitTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateUnitTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateUnitTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateUnitTypeOperationCompleted == null)) {
                this.GetUpdateUnitTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateUnitTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateUnitType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateUnitTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateUnitTypeOperationCompleted(object arg) {
            if ((this.GetUpdateUnitTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateUnitTypeCompleted(this, new GetUpdateUnitTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBusinessPartnerType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBusinessPartnerType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBusinessPartnerType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBusinessPartnerTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBusinessPartnerTypeOperationCompleted == null)) {
                this.GetUpdateBusinessPartnerTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBusinessPartnerTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBusinessPartnerType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBusinessPartnerTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateBusinessPartnerTypeOperationCompleted(object arg) {
            if ((this.GetUpdateBusinessPartnerTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBusinessPartnerTypeCompleted(this, new GetUpdateBusinessPartnerTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateCalendar(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateCalendar", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateCalendarAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateCalendarAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateCalendarAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateCalendarOperationCompleted == null)) {
                this.GetUpdateCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateCalendarOperationCompleted);
            }
            this.InvokeAsync("GetUpdateCalendar", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateCalendarOperationCompleted, userState);
        }
        
        private void OnGetUpdateCalendarOperationCompleted(object arg) {
            if ((this.GetUpdateCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateCalendarCompleted(this, new GetUpdateCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdatePaymentType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdatePaymentType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdatePaymentType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatePaymentTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdatePaymentTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdatePaymentTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdatePaymentTypeOperationCompleted == null)) {
                this.GetUpdatePaymentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatePaymentTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdatePaymentType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdatePaymentTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdatePaymentTypeOperationCompleted(object arg) {
            if ((this.GetUpdatePaymentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatePaymentTypeCompleted(this, new GetUpdatePaymentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateInterestKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateInterestKey(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateInterestKey", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateInterestKeyAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateInterestKeyAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateInterestKeyAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateInterestKeyOperationCompleted == null)) {
                this.GetUpdateInterestKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateInterestKeyOperationCompleted);
            }
            this.InvokeAsync("GetUpdateInterestKey", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateInterestKeyOperationCompleted, userState);
        }
        
        private void OnGetUpdateInterestKeyOperationCompleted(object arg) {
            if ((this.GetUpdateInterestKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateInterestKeyCompleted(this, new GetUpdateInterestKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyBillCollectionStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyBillCollectionStatus(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyBillCollectionStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyBillCollectionStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyBillCollectionStatusAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyBillCollectionStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyBillCollectionStatusOperationCompleted == null)) {
                this.GetUpdateAgencyBillCollectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyBillCollectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyBillCollectionStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyBillCollectionStatusOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyBillCollectionStatusOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyBillCollectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyBillCollectionStatusCompleted(this, new GetUpdateAgencyBillCollectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyBillOutStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyBillOutStatus(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyBillOutStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyBillOutStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyBillOutStatusAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyBillOutStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyBillOutStatusOperationCompleted == null)) {
                this.GetUpdateAgencyBillOutStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyBillOutStatusOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyBillOutStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyBillOutStatusOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyBillOutStatusOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyBillOutStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyBillOutStatusCompleted(this, new GetUpdateAgencyBillOutStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyCommissionRate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyCommissionRate(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyCommissionRate", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyCommissionRateAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyCommissionRateAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyCommissionRateAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyCommissionRateOperationCompleted == null)) {
                this.GetUpdateAgencyCommissionRateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyCommissionRateOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyCommissionRate", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyCommissionRateOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyCommissionRateOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyCommissionRateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyCommissionRateCompleted(this, new GetUpdateAgencyCommissionRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBillBookStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBillBookStatus(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBillBookStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBillBookStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBillBookStatusAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBillBookStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBillBookStatusOperationCompleted == null)) {
                this.GetUpdateBillBookStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBillBookStatusOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBillBookStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBillBookStatusOperationCompleted, userState);
        }
        
        private void OnGetUpdateBillBookStatusOperationCompleted(object arg) {
            if ((this.GetUpdateBillBookStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBillBookStatusCompleted(this, new GetUpdateBillBookStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyCollectArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyCollectArea(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyCollectArea", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyCollectAreaAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyCollectAreaAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyCollectAreaAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyCollectAreaOperationCompleted == null)) {
                this.GetUpdateAgencyCollectAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyCollectAreaOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyCollectArea", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyCollectAreaOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyCollectAreaOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyCollectAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyCollectAreaCompleted(this, new GetUpdateAgencyCollectAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateDisconnectionStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateDisconnectionStatus(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateDisconnectionStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDisconnectionStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateDisconnectionStatusAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateDisconnectionStatusAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateDisconnectionStatusOperationCompleted == null)) {
                this.GetUpdateDisconnectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDisconnectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetUpdateDisconnectionStatus", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateDisconnectionStatusOperationCompleted, userState);
        }
        
        private void OnGetUpdateDisconnectionStatusOperationCompleted(object arg) {
            if ((this.GetUpdateDisconnectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDisconnectionStatusCompleted(this, new GetUpdateDisconnectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateCashierMoneyFlowType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateCashierMoneyFlowType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateCashierMoneyFlowType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateCashierMoneyFlowTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateCashierMoneyFlowTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateCashierMoneyFlowTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateCashierMoneyFlowTypeOperationCompleted == null)) {
                this.GetUpdateCashierMoneyFlowTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateCashierMoneyFlowTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateCashierMoneyFlowType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateCashierMoneyFlowTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateCashierMoneyFlowTypeOperationCompleted(object arg) {
            if ((this.GetUpdateCashierMoneyFlowTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateCashierMoneyFlowTypeCompleted(this, new GetUpdateCashierMoneyFlowTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateOwnBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateOwnBank(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateOwnBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateOwnBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateOwnBankAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateOwnBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateOwnBankOperationCompleted == null)) {
                this.GetUpdateOwnBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateOwnBankOperationCompleted);
            }
            this.InvokeAsync("GetUpdateOwnBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateOwnBankOperationCompleted, userState);
        }
        
        private void OnGetUpdateOwnBankOperationCompleted(object arg) {
            if ((this.GetUpdateOwnBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateOwnBankCompleted(this, new GetUpdateOwnBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBusinessPartner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBusinessPartner(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBusinessPartner", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBusinessPartnerAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBusinessPartnerAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBusinessPartnerOperationCompleted == null)) {
                this.GetUpdateBusinessPartnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBusinessPartnerOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBusinessPartner", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBusinessPartnerOperationCompleted, userState);
        }
        
        private void OnGetUpdateBusinessPartnerOperationCompleted(object arg) {
            if ((this.GetUpdateBusinessPartnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBusinessPartnerCompleted(this, new GetUpdateBusinessPartnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBranch(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBranch", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBranchAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBranchAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBranchAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBranchOperationCompleted == null)) {
                this.GetUpdateBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBranchOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBranch", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBranchOperationCompleted, userState);
        }
        
        private void OnGetUpdateBranchOperationCompleted(object arg) {
            if ((this.GetUpdateBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBranchCompleted(this, new GetUpdateBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMRU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateMRU(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateMRU", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateMRUAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateMRUAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateMRUAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateMRUOperationCompleted == null)) {
                this.GetUpdateMRUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateMRUOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMRU", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateMRUOperationCompleted, userState);
        }
        
        private void OnGetUpdateMRUOperationCompleted(object arg) {
            if ((this.GetUpdateMRUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateMRUCompleted(this, new GetUpdateMRUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateMRUPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateMRUPlan(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateMRUPlan", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateMRUPlanAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateMRUPlanAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateMRUPlanAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateMRUPlanOperationCompleted == null)) {
                this.GetUpdateMRUPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateMRUPlanOperationCompleted);
            }
            this.InvokeAsync("GetUpdateMRUPlan", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateMRUPlanOperationCompleted, userState);
        }
        
        private void OnGetUpdateMRUPlanOperationCompleted(object arg) {
            if ((this.GetUpdateMRUPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateMRUPlanCompleted(this, new GetUpdateMRUPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateContractAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateContractAccount(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateContractAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateContractAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateContractAccountAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateContractAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateContractAccountOperationCompleted == null)) {
                this.GetUpdateContractAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateContractAccountOperationCompleted);
            }
            this.InvokeAsync("GetUpdateContractAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateContractAccountOperationCompleted, userState);
        }
        
        private void OnGetUpdateContractAccountOperationCompleted(object arg) {
            if ((this.GetUpdateContractAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateContractAccountCompleted(this, new GetUpdateContractAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateEmployee(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateEmployee", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateEmployeeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateEmployeeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateEmployeeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateEmployeeOperationCompleted == null)) {
                this.GetUpdateEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateEmployee", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateEmployeeOperationCompleted, userState);
        }
        
        private void OnGetUpdateEmployeeOperationCompleted(object arg) {
            if ((this.GetUpdateEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateEmployeeCompleted(this, new GetUpdateEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateAgencyAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateAgencyAsset(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateAgencyAsset", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateAgencyAssetAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateAgencyAssetAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateAgencyAssetAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateAgencyAssetOperationCompleted == null)) {
                this.GetUpdateAgencyAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateAgencyAssetOperationCompleted);
            }
            this.InvokeAsync("GetUpdateAgencyAsset", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateAgencyAssetOperationCompleted, userState);
        }
        
        private void OnGetUpdateAgencyAssetOperationCompleted(object arg) {
            if ((this.GetUpdateAgencyAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateAgencyAssetCompleted(this, new GetUpdateAgencyAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBank(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBankAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBankAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBankOperationCompleted == null)) {
                this.GetUpdateBankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBankOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBank", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBankOperationCompleted, userState);
        }
        
        private void OnGetUpdateBankOperationCompleted(object arg) {
            if ((this.GetUpdateBankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBankCompleted(this, new GetUpdateBankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateBankAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateBankAccount(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateBankAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateBankAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateBankAccountAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateBankAccountAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateBankAccountOperationCompleted == null)) {
                this.GetUpdateBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateBankAccountOperationCompleted);
            }
            this.InvokeAsync("GetUpdateBankAccount", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateBankAccountOperationCompleted, userState);
        }
        
        private void OnGetUpdateBankAccountOperationCompleted(object arg) {
            if ((this.GetUpdateBankAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateBankAccountCompleted(this, new GetUpdateBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateDebtType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateDebtType(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateDebtType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDebtTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateDebtTypeAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateDebtTypeAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateDebtTypeOperationCompleted == null)) {
                this.GetUpdateDebtTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDebtTypeOperationCompleted);
            }
            this.InvokeAsync("GetUpdateDebtType", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateDebtTypeOperationCompleted, userState);
        }
        
        private void OnGetUpdateDebtTypeOperationCompleted(object arg) {
            if ((this.GetUpdateDebtTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDebtTypeCompleted(this, new GetUpdateDebtTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdatePaymentSequence", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdatePaymentSequence(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdatePaymentSequence", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatePaymentSequenceAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdatePaymentSequenceAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdatePaymentSequenceAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdatePaymentSequenceOperationCompleted == null)) {
                this.GetUpdatePaymentSequenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatePaymentSequenceOperationCompleted);
            }
            this.InvokeAsync("GetUpdatePaymentSequence", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdatePaymentSequenceOperationCompleted, userState);
        }
        
        private void OnGetUpdatePaymentSequenceOperationCompleted(object arg) {
            if ((this.GetUpdatePaymentSequenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatePaymentSequenceCompleted(this, new GetUpdatePaymentSequenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateOldCaMapping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData GetUpdateOldCaMapping(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            object[] results = this.Invoke("GetUpdateOldCaMapping", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateOldCaMappingAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate) {
            this.GetUpdateOldCaMappingAsync(branchId, lastModifiedDate, serverDate, null);
        }
        
        /// <remarks/>
        public void GetUpdateOldCaMappingAsync(string branchId, System.DateTime lastModifiedDate, System.DateTime serverDate, object userState) {
            if ((this.GetUpdateOldCaMappingOperationCompleted == null)) {
                this.GetUpdateOldCaMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateOldCaMappingOperationCompleted);
            }
            this.InvokeAsync("GetUpdateOldCaMapping", new object[] {
                        branchId,
                        lastModifiedDate,
                        serverDate}, this.GetUpdateOldCaMappingOperationCompleted, userState);
        }
        
        private void OnGetUpdateOldCaMappingOperationCompleted(object arg) {
            if ((this.GetUpdateOldCaMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateOldCaMappingCompleted(this, new GetUpdateOldCaMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateNonWorkingDayCompletedEventHandler(object sender, GetUpdateNonWorkingDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateNonWorkingDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateNonWorkingDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAccountClassCompletedEventHandler(object sender, GetUpdateAccountClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAccountClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAccountClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateContractTypeCompletedEventHandler(object sender, GetUpdateContractTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateContractTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateContractTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateMeterSizeCompletedEventHandler(object sender, GetUpdateMeterSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateMeterSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateMeterSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdatePaymentMethodCompletedEventHandler(object sender, GetUpdatePaymentMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatePaymentMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatePaymentMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateTaxCodeCompletedEventHandler(object sender, GetUpdateTaxCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateTaxCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateTaxCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateUnitTypeCompletedEventHandler(object sender, GetUpdateUnitTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateUnitTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateUnitTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBusinessPartnerTypeCompletedEventHandler(object sender, GetUpdateBusinessPartnerTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBusinessPartnerTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBusinessPartnerTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateCalendarCompletedEventHandler(object sender, GetUpdateCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdatePaymentTypeCompletedEventHandler(object sender, GetUpdatePaymentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatePaymentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatePaymentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateInterestKeyCompletedEventHandler(object sender, GetUpdateInterestKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateInterestKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateInterestKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyBillCollectionStatusCompletedEventHandler(object sender, GetUpdateAgencyBillCollectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyBillCollectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyBillCollectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyBillOutStatusCompletedEventHandler(object sender, GetUpdateAgencyBillOutStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyBillOutStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyBillOutStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyCommissionRateCompletedEventHandler(object sender, GetUpdateAgencyCommissionRateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyCommissionRateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyCommissionRateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBillBookStatusCompletedEventHandler(object sender, GetUpdateBillBookStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBillBookStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBillBookStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyCollectAreaCompletedEventHandler(object sender, GetUpdateAgencyCollectAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyCollectAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyCollectAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateDisconnectionStatusCompletedEventHandler(object sender, GetUpdateDisconnectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateDisconnectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateDisconnectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateCashierMoneyFlowTypeCompletedEventHandler(object sender, GetUpdateCashierMoneyFlowTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateCashierMoneyFlowTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateCashierMoneyFlowTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateOwnBankCompletedEventHandler(object sender, GetUpdateOwnBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateOwnBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateOwnBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBusinessPartnerCompletedEventHandler(object sender, GetUpdateBusinessPartnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBusinessPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBusinessPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBranchCompletedEventHandler(object sender, GetUpdateBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateMRUCompletedEventHandler(object sender, GetUpdateMRUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateMRUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateMRUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateMRUPlanCompletedEventHandler(object sender, GetUpdateMRUPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateMRUPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateMRUPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateContractAccountCompletedEventHandler(object sender, GetUpdateContractAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateContractAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateContractAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateEmployeeCompletedEventHandler(object sender, GetUpdateEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateAgencyAssetCompletedEventHandler(object sender, GetUpdateAgencyAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateAgencyAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateAgencyAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBankCompletedEventHandler(object sender, GetUpdateBankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateBankAccountCompletedEventHandler(object sender, GetUpdateBankAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateDebtTypeCompletedEventHandler(object sender, GetUpdateDebtTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateDebtTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateDebtTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdatePaymentSequenceCompletedEventHandler(object sender, GetUpdatePaymentSequenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatePaymentSequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatePaymentSequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUpdateOldCaMappingCompletedEventHandler(object sender, GetUpdateOldCaMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateOldCaMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateOldCaMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591