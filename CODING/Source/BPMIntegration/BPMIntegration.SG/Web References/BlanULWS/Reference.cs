//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.BlanULWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BLANIntegrationWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class BLANIntegrationWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback UploadPrintPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadGrpPrintPoolOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadGreenReceiptDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadMaxBillSeqNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadPrintHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDeliveryHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadApproverOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadDeliveryPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBarcodeMRUOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBillStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BLANIntegrationWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_BlanULWS_BLANIntegrationWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadPrintPoolCompletedEventHandler UploadPrintPoolCompleted;
        
        /// <remarks/>
        public event UploadGrpPrintPoolCompletedEventHandler UploadGrpPrintPoolCompleted;
        
        /// <remarks/>
        public event UploadGreenReceiptDetailCompletedEventHandler UploadGreenReceiptDetailCompleted;
        
        /// <remarks/>
        public event UploadMaxBillSeqNoCompletedEventHandler UploadMaxBillSeqNoCompleted;
        
        /// <remarks/>
        public event UploadPrintHistoryCompletedEventHandler UploadPrintHistoryCompleted;
        
        /// <remarks/>
        public event UploadDeliveryHistoryCompletedEventHandler UploadDeliveryHistoryCompleted;
        
        /// <remarks/>
        public event UploadApproverCompletedEventHandler UploadApproverCompleted;
        
        /// <remarks/>
        public event UploadDeliveryPlaceCompletedEventHandler UploadDeliveryPlaceCompleted;
        
        /// <remarks/>
        public event UploadBarcodeMRUCompletedEventHandler UploadBarcodeMRUCompleted;
        
        /// <remarks/>
        public event UploadBillStatusCompletedEventHandler UploadBillStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadPrintPool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadPrintPool(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadPrintPool", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPrintPoolAsync(CompressData cds, string branchId) {
            this.UploadPrintPoolAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadPrintPoolAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadPrintPoolOperationCompleted == null)) {
                this.UploadPrintPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPrintPoolOperationCompleted);
            }
            this.InvokeAsync("UploadPrintPool", new object[] {
                        cds,
                        branchId}, this.UploadPrintPoolOperationCompleted, userState);
        }
        
        private void OnUploadPrintPoolOperationCompleted(object arg) {
            if ((this.UploadPrintPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPrintPoolCompleted(this, new UploadPrintPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadGrpPrintPool", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadGrpPrintPool(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadGrpPrintPool", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadGrpPrintPoolAsync(CompressData cds, string branchId) {
            this.UploadGrpPrintPoolAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadGrpPrintPoolAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadGrpPrintPoolOperationCompleted == null)) {
                this.UploadGrpPrintPoolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadGrpPrintPoolOperationCompleted);
            }
            this.InvokeAsync("UploadGrpPrintPool", new object[] {
                        cds,
                        branchId}, this.UploadGrpPrintPoolOperationCompleted, userState);
        }
        
        private void OnUploadGrpPrintPoolOperationCompleted(object arg) {
            if ((this.UploadGrpPrintPoolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadGrpPrintPoolCompleted(this, new UploadGrpPrintPoolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadGreenReceiptDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadGreenReceiptDetail(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadGreenReceiptDetail", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadGreenReceiptDetailAsync(CompressData cds, string branchId) {
            this.UploadGreenReceiptDetailAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadGreenReceiptDetailAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadGreenReceiptDetailOperationCompleted == null)) {
                this.UploadGreenReceiptDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadGreenReceiptDetailOperationCompleted);
            }
            this.InvokeAsync("UploadGreenReceiptDetail", new object[] {
                        cds,
                        branchId}, this.UploadGreenReceiptDetailOperationCompleted, userState);
        }
        
        private void OnUploadGreenReceiptDetailOperationCompleted(object arg) {
            if ((this.UploadGreenReceiptDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadGreenReceiptDetailCompleted(this, new UploadGreenReceiptDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMaxBillSeqNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadMaxBillSeqNo(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadMaxBillSeqNo", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadMaxBillSeqNoAsync(CompressData cds, string branchId) {
            this.UploadMaxBillSeqNoAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadMaxBillSeqNoAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadMaxBillSeqNoOperationCompleted == null)) {
                this.UploadMaxBillSeqNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadMaxBillSeqNoOperationCompleted);
            }
            this.InvokeAsync("UploadMaxBillSeqNo", new object[] {
                        cds,
                        branchId}, this.UploadMaxBillSeqNoOperationCompleted, userState);
        }
        
        private void OnUploadMaxBillSeqNoOperationCompleted(object arg) {
            if ((this.UploadMaxBillSeqNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadMaxBillSeqNoCompleted(this, new UploadMaxBillSeqNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadPrintHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadPrintHistory(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadPrintHistory", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadPrintHistoryAsync(CompressData cds, string branchId) {
            this.UploadPrintHistoryAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadPrintHistoryAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadPrintHistoryOperationCompleted == null)) {
                this.UploadPrintHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadPrintHistoryOperationCompleted);
            }
            this.InvokeAsync("UploadPrintHistory", new object[] {
                        cds,
                        branchId}, this.UploadPrintHistoryOperationCompleted, userState);
        }
        
        private void OnUploadPrintHistoryOperationCompleted(object arg) {
            if ((this.UploadPrintHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadPrintHistoryCompleted(this, new UploadPrintHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDeliveryHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadDeliveryHistory(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadDeliveryHistory", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDeliveryHistoryAsync(CompressData cds, string branchId) {
            this.UploadDeliveryHistoryAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadDeliveryHistoryAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadDeliveryHistoryOperationCompleted == null)) {
                this.UploadDeliveryHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDeliveryHistoryOperationCompleted);
            }
            this.InvokeAsync("UploadDeliveryHistory", new object[] {
                        cds,
                        branchId}, this.UploadDeliveryHistoryOperationCompleted, userState);
        }
        
        private void OnUploadDeliveryHistoryOperationCompleted(object arg) {
            if ((this.UploadDeliveryHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDeliveryHistoryCompleted(this, new UploadDeliveryHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadApprover", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadApprover(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadApprover", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadApproverAsync(CompressData cds, string branchId) {
            this.UploadApproverAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadApproverAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadApproverOperationCompleted == null)) {
                this.UploadApproverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadApproverOperationCompleted);
            }
            this.InvokeAsync("UploadApprover", new object[] {
                        cds,
                        branchId}, this.UploadApproverOperationCompleted, userState);
        }
        
        private void OnUploadApproverOperationCompleted(object arg) {
            if ((this.UploadApproverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadApproverCompleted(this, new UploadApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadDeliveryPlace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadDeliveryPlace(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadDeliveryPlace", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadDeliveryPlaceAsync(CompressData cds, string branchId) {
            this.UploadDeliveryPlaceAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadDeliveryPlaceAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadDeliveryPlaceOperationCompleted == null)) {
                this.UploadDeliveryPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadDeliveryPlaceOperationCompleted);
            }
            this.InvokeAsync("UploadDeliveryPlace", new object[] {
                        cds,
                        branchId}, this.UploadDeliveryPlaceOperationCompleted, userState);
        }
        
        private void OnUploadDeliveryPlaceOperationCompleted(object arg) {
            if ((this.UploadDeliveryPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadDeliveryPlaceCompleted(this, new UploadDeliveryPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBarcodeMRU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadBarcodeMRU(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadBarcodeMRU", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBarcodeMRUAsync(CompressData cds, string branchId) {
            this.UploadBarcodeMRUAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadBarcodeMRUAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadBarcodeMRUOperationCompleted == null)) {
                this.UploadBarcodeMRUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBarcodeMRUOperationCompleted);
            }
            this.InvokeAsync("UploadBarcodeMRU", new object[] {
                        cds,
                        branchId}, this.UploadBarcodeMRUOperationCompleted, userState);
        }
        
        private void OnUploadBarcodeMRUOperationCompleted(object arg) {
            if ((this.UploadBarcodeMRUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBarcodeMRUCompleted(this, new UploadBarcodeMRUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadBillStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UploadBillStatus(CompressData cds, string branchId) {
            object[] results = this.Invoke("UploadBillStatus", new object[] {
                        cds,
                        branchId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBillStatusAsync(CompressData cds, string branchId) {
            this.UploadBillStatusAsync(cds, branchId, null);
        }
        
        /// <remarks/>
        public void UploadBillStatusAsync(CompressData cds, string branchId, object userState) {
            if ((this.UploadBillStatusOperationCompleted == null)) {
                this.UploadBillStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBillStatusOperationCompleted);
            }
            this.InvokeAsync("UploadBillStatus", new object[] {
                        cds,
                        branchId}, this.UploadBillStatusOperationCompleted, userState);
        }
        
        private void OnUploadBillStatusOperationCompleted(object arg) {
            if ((this.UploadBillStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBillStatusCompleted(this, new UploadBillStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadPrintPoolCompletedEventHandler(object sender, UploadPrintPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPrintPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPrintPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadGrpPrintPoolCompletedEventHandler(object sender, UploadGrpPrintPoolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadGrpPrintPoolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadGrpPrintPoolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadGreenReceiptDetailCompletedEventHandler(object sender, UploadGreenReceiptDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadGreenReceiptDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadGreenReceiptDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadMaxBillSeqNoCompletedEventHandler(object sender, UploadMaxBillSeqNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadMaxBillSeqNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadMaxBillSeqNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadPrintHistoryCompletedEventHandler(object sender, UploadPrintHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadPrintHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadPrintHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadDeliveryHistoryCompletedEventHandler(object sender, UploadDeliveryHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDeliveryHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDeliveryHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadApproverCompletedEventHandler(object sender, UploadApproverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadApproverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadApproverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadDeliveryPlaceCompletedEventHandler(object sender, UploadDeliveryPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadDeliveryPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadDeliveryPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadBarcodeMRUCompletedEventHandler(object sender, UploadBarcodeMRUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBarcodeMRUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBarcodeMRUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UploadBillStatusCompletedEventHandler(object sender, UploadBillStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBillStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBillStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591