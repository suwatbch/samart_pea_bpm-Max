//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace PEA.BPM.Integration.BPMIntegration.SG.UtilDLWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using PEA.BPM.Architecture.CommonUtilities;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UtilitiesIntegrationWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class UtilitiesIntegrationWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetServerTimeOperationCompleted;
        
        private AuthenInfo authenInfoValueField;
        
        private System.Threading.SendOrPostCallback DownloadAppSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadTerminalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadUnlockLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadRoleUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadRoleFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFunctionServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadUnlockRemarkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UtilitiesIntegrationWebService() {
            this.Url = global::PEA.BPM.Integration.BPMIntegration.SG.Properties.Settings.Default.PEA_BPM_Integration_BPMIntegration_SG_UtilDLWS_UtilitiesIntegrationWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenInfo AuthenInfoValue {
            get {
                return this.authenInfoValueField;
            }
            set {
                this.authenInfoValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetServerTimeCompletedEventHandler GetServerTimeCompleted;
        
        /// <remarks/>
        public event DownloadAppSettingCompletedEventHandler DownloadAppSettingCompleted;
        
        /// <remarks/>
        public event DownloadTerminalCompletedEventHandler DownloadTerminalCompleted;
        
        /// <remarks/>
        public event DownloadUnlockLogCompletedEventHandler DownloadUnlockLogCompleted;
        
        /// <remarks/>
        public event DownloadUserCompletedEventHandler DownloadUserCompleted;
        
        /// <remarks/>
        public event DownloadRoleCompletedEventHandler DownloadRoleCompleted;
        
        /// <remarks/>
        public event DownloadFunctionCompletedEventHandler DownloadFunctionCompleted;
        
        /// <remarks/>
        public event DownloadServiceCompletedEventHandler DownloadServiceCompleted;
        
        /// <remarks/>
        public event DownloadRoleUserCompletedEventHandler DownloadRoleUserCompleted;
        
        /// <remarks/>
        public event DownloadRoleFunctionCompletedEventHandler DownloadRoleFunctionCompleted;
        
        /// <remarks/>
        public event DownloadFunctionServiceCompletedEventHandler DownloadFunctionServiceCompleted;
        
        /// <remarks/>
        public event DownloadUnlockRemarkCompletedEventHandler DownloadUnlockRemarkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServerTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetServerTime() {
            object[] results = this.Invoke("GetServerTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerTimeAsync() {
            this.GetServerTimeAsync(null);
        }
        
        /// <remarks/>
        public void GetServerTimeAsync(object userState) {
            if ((this.GetServerTimeOperationCompleted == null)) {
                this.GetServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerTimeOperationCompleted);
            }
            this.InvokeAsync("GetServerTime", new object[0], this.GetServerTimeOperationCompleted, userState);
        }
        
        private void OnGetServerTimeOperationCompleted(object arg) {
            if ((this.GetServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadAppSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadAppSetting(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadAppSetting", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadAppSettingAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadAppSettingAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadAppSettingAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadAppSettingOperationCompleted == null)) {
                this.DownloadAppSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadAppSettingOperationCompleted);
            }
            this.InvokeAsync("DownloadAppSetting", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadAppSettingOperationCompleted, userState);
        }
        
        private void OnDownloadAppSettingOperationCompleted(object arg) {
            if ((this.DownloadAppSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadAppSettingCompleted(this, new DownloadAppSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadTerminal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadTerminal(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadTerminal", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadTerminalAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadTerminalAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadTerminalAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadTerminalOperationCompleted == null)) {
                this.DownloadTerminalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadTerminalOperationCompleted);
            }
            this.InvokeAsync("DownloadTerminal", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadTerminalOperationCompleted, userState);
        }
        
        private void OnDownloadTerminalOperationCompleted(object arg) {
            if ((this.DownloadTerminalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadTerminalCompleted(this, new DownloadTerminalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadUnlockLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadUnlockLog(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadUnlockLog", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadUnlockLogAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadUnlockLogAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadUnlockLogAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadUnlockLogOperationCompleted == null)) {
                this.DownloadUnlockLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadUnlockLogOperationCompleted);
            }
            this.InvokeAsync("DownloadUnlockLog", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadUnlockLogOperationCompleted, userState);
        }
        
        private void OnDownloadUnlockLogOperationCompleted(object arg) {
            if ((this.DownloadUnlockLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadUnlockLogCompleted(this, new DownloadUnlockLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadUser(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadUser", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadUserAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadUserAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadUserAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadUserOperationCompleted == null)) {
                this.DownloadUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadUserOperationCompleted);
            }
            this.InvokeAsync("DownloadUser", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadUserOperationCompleted, userState);
        }
        
        private void OnDownloadUserOperationCompleted(object arg) {
            if ((this.DownloadUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadUserCompleted(this, new DownloadUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadRole(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadRole", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadRoleAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadRoleAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadRoleAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadRoleOperationCompleted == null)) {
                this.DownloadRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadRoleOperationCompleted);
            }
            this.InvokeAsync("DownloadRole", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadRoleOperationCompleted, userState);
        }
        
        private void OnDownloadRoleOperationCompleted(object arg) {
            if ((this.DownloadRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadRoleCompleted(this, new DownloadRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadFunction(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadFunction", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFunctionAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadFunctionAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadFunctionAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadFunctionOperationCompleted == null)) {
                this.DownloadFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFunctionOperationCompleted);
            }
            this.InvokeAsync("DownloadFunction", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadFunctionOperationCompleted, userState);
        }
        
        private void OnDownloadFunctionOperationCompleted(object arg) {
            if ((this.DownloadFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFunctionCompleted(this, new DownloadFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadService(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadService", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadServiceAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadServiceAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadServiceAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadServiceOperationCompleted == null)) {
                this.DownloadServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadServiceOperationCompleted);
            }
            this.InvokeAsync("DownloadService", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadServiceOperationCompleted, userState);
        }
        
        private void OnDownloadServiceOperationCompleted(object arg) {
            if ((this.DownloadServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadServiceCompleted(this, new DownloadServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadRoleUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadRoleUser(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadRoleUser", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadRoleUserAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadRoleUserAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadRoleUserAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadRoleUserOperationCompleted == null)) {
                this.DownloadRoleUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadRoleUserOperationCompleted);
            }
            this.InvokeAsync("DownloadRoleUser", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadRoleUserOperationCompleted, userState);
        }
        
        private void OnDownloadRoleUserOperationCompleted(object arg) {
            if ((this.DownloadRoleUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadRoleUserCompleted(this, new DownloadRoleUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadRoleFunction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadRoleFunction(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadRoleFunction", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadRoleFunctionAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadRoleFunctionAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadRoleFunctionAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadRoleFunctionOperationCompleted == null)) {
                this.DownloadRoleFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadRoleFunctionOperationCompleted);
            }
            this.InvokeAsync("DownloadRoleFunction", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadRoleFunctionOperationCompleted, userState);
        }
        
        private void OnDownloadRoleFunctionOperationCompleted(object arg) {
            if ((this.DownloadRoleFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadRoleFunctionCompleted(this, new DownloadRoleFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadFunctionService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadFunctionService(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadFunctionService", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFunctionServiceAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadFunctionServiceAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadFunctionServiceAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadFunctionServiceOperationCompleted == null)) {
                this.DownloadFunctionServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFunctionServiceOperationCompleted);
            }
            this.InvokeAsync("DownloadFunctionService", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadFunctionServiceOperationCompleted, userState);
        }
        
        private void OnDownloadFunctionServiceOperationCompleted(object arg) {
            if ((this.DownloadFunctionServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFunctionServiceCompleted(this, new DownloadFunctionServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenInfoValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadUnlockRemark", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompressData DownloadUnlockRemark(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            object[] results = this.Invoke("DownloadUnlockRemark", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate});
            return ((CompressData)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadUnlockRemarkAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate) {
            this.DownloadUnlockRemarkAsync(branchId, lastModifiedDt, serverDate, null);
        }
        
        /// <remarks/>
        public void DownloadUnlockRemarkAsync(string branchId, System.DateTime lastModifiedDt, System.DateTime serverDate, object userState) {
            if ((this.DownloadUnlockRemarkOperationCompleted == null)) {
                this.DownloadUnlockRemarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadUnlockRemarkOperationCompleted);
            }
            this.InvokeAsync("DownloadUnlockRemark", new object[] {
                        branchId,
                        lastModifiedDt,
                        serverDate}, this.DownloadUnlockRemarkOperationCompleted, userState);
        }
        
        private void OnDownloadUnlockRemarkOperationCompleted(object arg) {
            if ((this.DownloadUnlockRemarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadUnlockRemarkCompleted(this, new DownloadUnlockRemarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenInfo : System.Web.Services.Protocols.SoapHeader {
        
        private string userIdField;
        
        private string authTokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string AuthToken {
            get {
                return this.authTokenField;
            }
            set {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetServerTimeCompletedEventHandler(object sender, GetServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadAppSettingCompletedEventHandler(object sender, DownloadAppSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadAppSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadAppSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadTerminalCompletedEventHandler(object sender, DownloadTerminalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadTerminalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadTerminalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadUnlockLogCompletedEventHandler(object sender, DownloadUnlockLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadUnlockLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadUnlockLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadUserCompletedEventHandler(object sender, DownloadUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadRoleCompletedEventHandler(object sender, DownloadRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadFunctionCompletedEventHandler(object sender, DownloadFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadServiceCompletedEventHandler(object sender, DownloadServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadRoleUserCompletedEventHandler(object sender, DownloadRoleUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadRoleUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadRoleUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadRoleFunctionCompletedEventHandler(object sender, DownloadRoleFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadRoleFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadRoleFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadFunctionServiceCompletedEventHandler(object sender, DownloadFunctionServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFunctionServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFunctionServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DownloadUnlockRemarkCompletedEventHandler(object sender, DownloadUnlockRemarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadUnlockRemarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadUnlockRemarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompressData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompressData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591