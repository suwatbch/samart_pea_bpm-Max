//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------


using System;
using System.Windows.Forms;
using System.Collections.Generic;

using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Reporting.WinForms;

using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;

namespace PEA.BPM.AgencyManagementModule
{
    [SmartPart]
    public partial class CommissionDetailReportView : UserControl, ICommissionDetailReportView
    {
        public CommissionDetailReportView()
        {
            InitializeComponent();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public CommissionDetailReportViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
        }

             /// <summary>
        /// 
        /// </summary>
        public void ShowReport(List<CommissionReportDetailInfo> MasterReport)
        {
            this.rdlcViewer.LocalReport.ReportEmbeddedResource = "rptCommissionDetail.rdlc";
            this.rdlcViewer.LocalReport.ReportPath = @"D:\Project\PEA\PeaBpm\Source\AgencyManagementModule\AgencyManagementModule\Reports\rptCommissionDetail.rdlc";
            ReportDataSource sReportDataSourceMaster = new ReportDataSource();
            sReportDataSourceMaster.Name = "PEA_BPM_AgencyManagementModule_Interface_BusinessEntities_CommissionReportDetailInfo";
            sReportDataSourceMaster.Value = MasterReport;
            this.rdlcViewer.LocalReport.DataSources.Add(sReportDataSourceMaster);

            foreach (CommissionReportDetailInfo m in MasterReport)
            {
                ReportDataSource sReportDataSourceDetail = new ReportDataSource();
                sReportDataSourceDetail.Name = "PEA_BPM_AgencyManagementModule_Interface_BusinessEntities_CommissionSubReportDetailInfo";
                sReportDataSourceDetail.Value = m.CommissionDetailList;
                this.rdlcViewer.LocalReport.DataSources.Add(sReportDataSourceDetail);
            }
            this.rdlcViewer.RefreshReport();
        }
    }
}

