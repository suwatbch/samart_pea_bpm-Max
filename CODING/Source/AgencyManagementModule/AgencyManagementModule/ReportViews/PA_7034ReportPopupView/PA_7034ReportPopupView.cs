//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.Architecture.CommonUtilities;
using System.Globalization;
using PEA.BPM.AgencyManagementModule.Interface.Constants;
using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;

namespace PEA.BPM.AgencyManagementModule
{
    [SmartPart]
    public partial class PA_7034ReportPopupView : UserControl, IPA_7034ReportPopupView
    {
        private DateTimeFormatInfo _th_dt;

        public PA_7034ReportPopupView()
        {
            InitializeComponent();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public PA_7034ReportPopupViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        #region "Properites"
        public string SetStartAgencyId
        {
            set
            {
                startAgencyIdTb.Text = value;
            }
        }

        public string SetEndAgencyId
        {
            set
            {

                endAgencyIdTb.Text = value;
            }
        }

        #endregion

        #region "Page event"
        protected override void OnLoad(EventArgs e)
        {
            CultureInfo th_culture = new CultureInfo("th-TH");
            _th_dt = th_culture.DateTimeFormat;

            _presenter.OnViewReady();
            SetDefaultView();
        }

        
        private void Closebt_Click(object sender, EventArgs e)
        {
            ParentForm.Close();
        }

        private void startAgencyIdBt_Click(object sender, EventArgs e)
        {
            _presenter.AgencySearchShowPopupClicked(1);
        }

        private void endAgencyIdBt_Click(object sender, EventArgs e)
        {
            _presenter.AgencySearchShowPopupClicked(2);
        }

        private void printAllrb_MouseClick(object sender, MouseEventArgs e)
        {
            if (printAllrb.Checked)
            {
                startAgencyIdTb.Text = String.Empty;
                endAgencyIdTb.Text = String.Empty;
                startAgencyIdTb.Enabled = false;
                endAgencyIdTb.Enabled = false;
                startAgencyIdBt.Enabled = false;
                endAgencyIdBt.Enabled = false;
            }
        }

        private void printByAgencyrb_MouseClick(object sender, MouseEventArgs e)
        {
            if (printByAgencyrb.Checked)
            {                                         
                startAgencyIdBt.Enabled = true;
                endAgencyIdBt.Enabled = true;
            }
        }

        private void printbt_Click(object sender, EventArgs e)
        {
            if (IsFormValide())
            {
                PA_7034ConditionReportInfo conn = new PA_7034ConditionReportInfo();
                conn.Period = DaHelper.SetBillPeriod(periodTb.Text.Trim());
                conn.PrintPreview = previewCb.Checked;
                conn.BranchId = Session.Branch.Id;

                if (printAllrb.Checked)
                {
                    conn.AgencyIdFrom = String.Empty;
                    conn.AgencyIdTo = String.Empty;
                }
                else 
                {
                    conn.AgencyIdFrom = startAgencyIdTb.Text.Trim(); ;
                    conn.AgencyIdTo = endAgencyIdTb.Text.Trim(); ;
                }

                _presenter.ShowPA_7034Clicked(conn);
                
            }
        }

        private void periodTb_KeyDown(object sender, KeyEventArgs e)
        {
              
            if (e.KeyCode == Keys.Enter)
            {
                previewCb.Focus();
            }
            else if (e.KeyCode == Keys.N)
            {
                string p = Session.BpmDateTime.Now.ToString("yyyyMMdd", _th_dt);
                string curPer = string.Format("{0}/{1}", p.Substring(4, 2), p.Substring(0, 4));
                periodTb.Text = curPer;
                previewCb.Focus();               
            }
        }

        #endregion

        #region "Helper"
        private bool IsFormValide()
        {            
            if (printByAgencyrb.Checked)
            {
                if (startAgencyIdBt.Text.Trim() == string.Empty)
                {
                    MessageBox.Show("กรุณาระบุรหัสตัวแทนเก็บเงินเริ่มต้นเพื่อออกรายงาน", "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return false;
                }if (endAgencyIdTb.Text.Trim() == String.Empty)
                {
                    MessageBox.Show("กรุณาระบุรหัสตัวแทนเก็บเงินสิ้นสุดเพื่อออกรายงาน", "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return false;
                }
            }

            if (periodTb.Text.Trim() == String.Empty || periodTb.Text.Trim().Length != ModuleConfigurationNames.PeriodUseLength)
            {
                MessageBox.Show("ช่วงบิลเดือนสุดท้ายไม่ถูกต้อง", "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return false;
            }

            return true;
        }

        private void SetDefaultView()
        {
            startAgencyIdTb.Clear();
            endAgencyIdTb.Clear();
            startAgencyIdTb.Enabled = false;
            endAgencyIdTb.Enabled = false;
            startAgencyIdBt.Enabled = false;
            endAgencyIdBt.Enabled = false;

            periodTb.Text = Session.BpmDateTime.Now.ToString("MM/yyyy", new CultureInfo("th-TH"));
            previewCb.Checked = true;
        }
        #endregion

    }
}

