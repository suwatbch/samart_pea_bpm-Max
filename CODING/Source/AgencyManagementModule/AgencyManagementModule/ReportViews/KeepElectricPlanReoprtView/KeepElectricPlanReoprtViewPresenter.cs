//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;
using Microsoft.Practices.CompositeUI.EventBroker;
using PEA.BPM.AgencyManagementModule.Interface.Constants;

namespace PEA.BPM.AgencyManagementModule.ReportViews
{
    public class KeepElectricPlanReoprtViewPresenter : Presenter<IKeepElectricPlanReoprtView>
    {
        /// <summary>
        /// This method is a placeholder that will be called by the view when it's been loaded <see cref="System.Winforms.Control.OnLoad"/>
        /// </summary>
        public override void OnViewReady()
        {
            base.OnViewReady();
            ((UserControl)View).ParentForm.Text = "หน้าจอรายงานแผนการเก็บเงินค่าไฟฟ้า";
        }

        /// <summary>
        /// Close the view
        /// </summary>
        public void OnCloseView()
        {
            base.CloseView();
        }

        #region "Event Handler"

        [EventPublication(EventTopicNames.ShowCAB07_01Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB07_01ReportHandler;
        public void PrintCAB07_01ReportClicked(KeepMoneyPlaneOfAgencyConditionInfoReport myCondition)
        {
            if (LoadCAB07_01ReportHandler != null)
                LoadCAB07_01ReportHandler(this, new EventArgs<KeepMoneyPlaneOfAgencyConditionInfoReport>(myCondition));
        }

        [EventPublication(EventTopicNames.ShowCAB08_01Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB08_01ReportHandler;
        public void PrintCAB08_01ReportClicked(KeepMoneyPlaneOfAgencyConditionInfoReport myCondition)
        {
            if (LoadCAB08_01ReportHandler != null)
                LoadCAB08_01ReportHandler(this, new EventArgs<KeepMoneyPlaneOfAgencyConditionInfoReport>(myCondition));
        }

        [EventPublication(EventTopicNames.ShowCAB09_01Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB09_01ReportHandler;
        public void PrintCAB09_01ReportClicked(KeepMoneyPlaneOfAgencyConditionInfoReport myCondition)
        {
            if (LoadCAB09_01ReportHandler != null)
                LoadCAB09_01ReportHandler(this, new EventArgs<KeepMoneyPlaneOfAgencyConditionInfoReport>(myCondition));
        }

        [EventPublication(EventTopicNames.ShowCAB08_02Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB08_02ReportHandler;
        public void PrintCAB08_02ReportClicked(KeepMoneyPlaneOfAgencyConditionInfoReport myCondition)
        {
            if (LoadCAB08_02ReportHandler != null)
                LoadCAB08_02ReportHandler(this, new EventArgs<KeepMoneyPlaneOfAgencyConditionInfoReport>(myCondition));
        }

        [EventPublication(EventTopicNames.ShowCAB10_01Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB10_01ReportHandler;
        public void PrintCAB10_01ReportClicked(KeepMoneyPlaneOfAgencyConditionInfoReport myCondition)
        {
            if (LoadCAB10_01ReportHandler != null)
                LoadCAB10_01ReportHandler(this, new EventArgs<KeepMoneyPlaneOfAgencyConditionInfoReport>(myCondition));
        }

    #endregion

    }
}

