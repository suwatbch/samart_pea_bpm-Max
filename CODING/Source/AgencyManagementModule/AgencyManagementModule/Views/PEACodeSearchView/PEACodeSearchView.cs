//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using System.Collections.Generic;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;

namespace PEA.BPM.AgencyManagementModule
{
    [SmartPart]
    public partial class PEACodeSearchView : UserControl, IPEACodeSearchView
    {
        private List<PeaInfo> _peaList;

        public PEACodeSearchView()
        {
            InitializeComponent();
            peaDataGV.AutoGenerateColumns = false;
            peaSearchText.Focus();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public PEACodeSearchViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        public List<PeaInfo> PeaSearchResult
        {
            set 
            { 
                _peaList = value;
                LoadPeaListToGridView();
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
        }

        private void LoadPeaListToGridView()
        {
            if (_peaList == null || _peaList.Count == 0)
                MessageBox.Show(null, "ไม่พบข้อมูลการไฟฟ้า กรุณาระบุคีย์เวิร์ดใหม่ \nระบบสามารถค้นหาด้วย \n - รหัสการไฟฟ้า\n - ชื่อการไฟฟ้า", "ไม่พบข้อมูลการไฟฟ้า", MessageBoxButtons.OK, MessageBoxIcon.Warning);

            peaDataGV.Enabled = false;
            peaDataGV.DataSource = _peaList;
            peaDataGV.Enabled = true;            
        }


        private void okBt_Click(object sender, EventArgs e)
        {
            if (peaDataGV.SelectedRows.Count != 0)
            {
                PeaInfo peaInfo = (PeaInfo)peaDataGV.SelectedRows[0].DataBoundItem;
                _presenter.PeaSearchRowSelectionClicked(peaInfo);
            }           
        }

        private void peaDataGV_CellDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex >= 0)
            {
                PeaInfo peaInfo = new PeaInfo();
                peaInfo.Id = peaDataGV.Rows[e.RowIndex].Cells["PeaCode"].Value.ToString();
                peaInfo.Name = peaDataGV.Rows[e.RowIndex].Cells["PeaName"].Value.ToString();
                _presenter.PeaSearchRowSelectionClicked(peaInfo);
                //to prevent error when double click
                this.ParentForm.Close();

            }
        }              

        private void peaDataGV_RowEnter(object sender, DataGridViewCellEventArgs e)
        {
            okBt.Enabled = true;
        }

        private void peaDataGV_RowLeave(object sender, DataGridViewCellEventArgs e)
        {
            okBt.Enabled = false;
        }

        //start search for pea 
        private void peaSearchBt_ButtonClick(object sender, EventArgs e)
        {            
            _presenter.PeaSearchFindButtonClicked(peaSearchText.Text);
        }

        private void peaSearchText_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {                
                _presenter.PeaSearchFindButtonClicked(peaSearchText.Text);
            }
        }
    }
}

