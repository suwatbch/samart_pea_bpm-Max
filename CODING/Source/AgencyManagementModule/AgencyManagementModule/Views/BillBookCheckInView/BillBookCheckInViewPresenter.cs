//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//  
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.EventBroker;

using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;
using PEA.BPM.AgencyManagementModule.Interface.Services;
using PEA.BPM.AgencyManagementModule.Interface.Constants;
using PEA.BPM.Infrastructure.Interface;
using System.Windows.Forms;
using PEA.BPM.Architecture.CommonUtilities;
using PEA.BPM.Architecture.ArchitectureTool.ErrorHandling;


namespace PEA.BPM.AgencyManagementModule
{
    public class BillBookCheckInViewPresenter : Presenter<IBillBookCheckInView>
    {       
        IAgencyCommonService _agencyCommonService;
        IBillbookCheckInService _billBookCheckInService;
        ICreateBillbookService _createBillBookService;        

        [InjectionConstructor]
        public BillBookCheckInViewPresenter([ServiceDependency] IBillbookCheckInService billBookCheckInService, ICreateBillbookService createBillBookService, IAgencyCommonService agencyCommonService)
		{
            _agencyCommonService = agencyCommonService;
            _billBookCheckInService = billBookCheckInService;
            _createBillBookService = createBillBookService;
		}


        public string GetContractType(string ctId)
        {
            
            try
            {
                return _agencyCommonService.GetContractTypeList(ctId);
            }
            catch (Exception ex)
            {
                return "ไม่พบข้อมูล";
            }
        }

        /// <summary>
        /// This method is a placeholder that will be called by the view when it's been loaded <see cref="System.Winforms.Control.OnLoad"/>
        /// </summary>
        public override void OnViewReady()
        {
            base.OnViewReady();
        }

        /// <summary>
        /// Close the view
        /// </summary>
        public void OnCloseView()
        {
            base.CloseView();
        }

        [EventPublication(EventTopicNames.BillBookCheckInFinishButton, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs> BillBookCheckInFinishButtonClickedHandler;
        public void BillBookCheckInFinishButtonClicked(BillBookCheckInInfo billBookCheckIn)
        {
            if (BillBookCheckInFinishButtonClickedHandler != null)
            {
                WorkItem.State["IBillBookSlipPosingCheckInView"] = true;
                BillBookCheckInFinishButtonClickedHandler(this, new EventArgs<BillBookCheckInInfo>(billBookCheckIn));
            }
        }

        [EventPublication(EventTopicNames.BillBookSlipPosingRecordButton, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs> BillBookSlipPosingRecordButtonClickedHandler;
        public void BillBookSlipPosingRecordButtonClicked(BillBookCheckInInfo billBookCheckIn)
        {
            if (BillBookSlipPosingRecordButtonClickedHandler != null)
            {
                WorkItem.State["IBillBookCheckInSummaryPreView"] = true;
                BillBookSlipPosingRecordButtonClickedHandler(this, new EventArgs<BillBookCheckInInfo>(billBookCheckIn));
            }
        }


        //[EventPublication(EventTopicNames.UndoSaveTypeImgButton, PublicationScope.WorkItem)]
        //public event EventHandler<EventArgs<string>> UndoSaveTypeImgButtonClickedHandler;
        //public void UndoSaveTypeImgButtonClicked(string bookId)
        //{
        //    if (UndoSaveTypeImgButtonClickedHandler != null)
        //        UndoSaveTypeImgButtonClickedHandler(this, new EventArgs<string>(bookId));
        //}

        [EventPublication(EventTopicNames.BillBookUndoSaveImgButton, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs<string>> BillBookUndoSaveImgButtonClickedHandler;
        public void BillBookUndoSaveImgButtonClicked(string bookId)
        {
            if (BillBookUndoSaveImgButtonClickedHandler != null)
            {
                WorkItem.State["IBillBookUndoSaveCheckInView"] = true;
                BillBookUndoSaveImgButtonClickedHandler(this, new EventArgs<string>(bookId));
            }
        }

        [EventPublication(EventTopicNames.BillBookPaymentStatusButton, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs> BillBookPaymentStatusButtonClickedHandler;
        public void BillBookPaymentStatusButtonClicked(string billBookId)
        {
            if (BillBookPaymentStatusButtonClickedHandler != null)
            {
                WorkItem.State["IBillBookPaymentStatusView"] = true;
                BillBookPaymentStatusButtonClickedHandler(this, new EventArgs<string>(billBookId));
            }
        }

        //Create By Chettha Pattananitisak Date 03/04/2007
        //Use Reprint for Report of Return BillBook
        [EventPublication(EventTopicNames.ReprintReportOfReturnBillBook, PublicationScope.Global)]
        public event EventHandler<EventArgs> ReprintReportOfReturnBillBookHandler;
        public void ReprintReportOfReturnBillBookClick(CheckInBillBookConditionInfoReport myCondition)
        {
            if (ReprintReportOfReturnBillBookHandler != null)
                ReprintReportOfReturnBillBookHandler(this, new EventArgs<CheckInBillBookConditionInfoReport>(myCondition));
        }

        //This Event use for Load Customer that receive Bill From Agency but don't paid Money 
        //Create By Chettha Pattananitisak Date 24/04/2007 Time 11:40
        [EventPublication(EventTopicNames.ShowCAB03_01Report, PublicationScope.Global)]
        public event EventHandler<EventArgs> LoadCAB03_01ReportHandler;
        public void ReprintLoadPasteBillWithCustomerReportActivated(CheckInBillBookConditionInfoReport printCondition)
        {
            if (LoadCAB03_01ReportHandler != null)
                LoadCAB03_01ReportHandler(this, new EventArgs<CheckInBillBookConditionInfoReport>(printCondition));
        }


        [EventPublication(EventTopicNames.ShowPaymentMethod, PublicationScope.Global)]
        public event EventHandler<EventArgs> PaymentMethodHandler;
        public void BillBookPaymentMethodClicked(BillBookCheckInInfo bookInfo)
        {
            if (PaymentMethodHandler != null)
                WorkItem.State["IPaymentMethodView"] = true;
                PaymentMethodHandler(this, new EventArgs<BillBookCheckInInfo> (bookInfo));
        }


        public BillBookCheckInInfo BillBookIdTextChangeCommitted(string billBookId, BookTypeEnum bookType, string runningBranchId)
        {
            try
            {
                WaitingFormHelper.ShowWaitingForm();
                string _billBookId = billBookId.Replace("-", "");
                BillBookCheckInInfo billBook = new BillBookCheckInInfo();
                if (bookType == BookTypeEnum.BILLBOOK)
                    billBook = _billBookCheckInService.GetBillBookCheckInInfo(_billBookId);
                else
                    billBook = _billBookCheckInService.GetGroupInvoiceCheckInInfo(_billBookId, runningBranchId);
                WaitingFormHelper.HideWaitingForm();
                return billBook;
            }
            catch (Exception ex)
            {
                WaitingFormHelper.HideWaitingForm();
                Logger.WriteError(Logger.Module.AGENCY, "ค้นหาข้อมูลสมุดจ่ายบิล", ex.ToString());
                ClientExceptionController.ShowExceptionDialog(EErrorInModule.Agency, ex);
                return new BillBookCheckInInfo();
            }
        }

        public string[] GetMruId(string caId)
        {
            return _createBillBookService.GetMruByCaId(caId);
        }

        public HashInfoCollection GetPmList(string pmId)
        {
            return _agencyCommonService.GetPmList(pmId);
        }

        public HashInfoCollection GetBillStatusList(string bsId)
        {
            return _agencyCommonService.GetBillStatusList(bsId);
        }

        [EventPublication(EventTopicNames.StatusUpdate, PublicationScope.Global)]
        public event EventHandler<EventArgs> StatusUpdateHandler;
        public void ShowStatusText(string statusText)
        {
            if (StatusUpdateHandler != null)
                StatusUpdateHandler(this, new EventArgs<string>(statusText));
        }

        [EventPublication(EventTopicNames.ShowHintEvent, PublicationScope.Global)]
        public event EventHandler<EventArgs> ShowHintHandler;
        public void ShowHint(ArrayList parem)
        {
            if (ShowHintHandler != null)
                ShowHintHandler(this, new EventArgs<ArrayList>(parem));
        }


        [EventSubscription(EventTopicNames.BackToBillBookCheckInView, Thread = ThreadOption.UserInterface)]
        public void BackToBillBookCheckInViewActivatedHandler(object sender, EventArgs<BillBookCheckInInfo> e)
        {           
             View.SetData(e.Data);            
        }

        public void BillBookSaveState(BillBookCheckInInfo bbCheckInfo)
        {
            try
            {
                WaitingFormHelper.ShowWaitingForm();
                _billBookCheckInService.BillBookSaveState(bbCheckInfo, Session.User.Id);
                WaitingFormHelper.HideWaitingForm();
            }
            catch (Exception)
            {
                WaitingFormHelper.HideWaitingForm();
                throw;
            }
        }
    }
}

