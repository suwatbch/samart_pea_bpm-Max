//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Windows.Forms;

using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;

using PEA.BPM.AgencyManagementModule.Interface.BusinessEntities;
using PEA.BPM.AgencyManagementModule.Interface.Constants;
using PEA.BPM.AgencyManagementModule.Utilities;

using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.Architecture.CommonUtilities;
using System.Globalization;
using PEA.BPM.Architecture.ArchitectureTool.ErrorHandling;

namespace PEA.BPM.AgencyManagementModule
{
    [SmartPart]
    public partial class BillBookUndoSaveCheckInView : UserControl, IBillBookUndoSaveCheckInView
    {
        #region "Properties"
        private List<BillBookSearchSavedDetail> _billBookSavedDetailList;
        private BillBookCheckInInfo _billBookCheckIn;

        public List<BillBookSearchSavedDetail> SavedDetailList
        {
            set
            {
                _billBookSavedDetailList = value;
                FillSavedBillBookDetailInfo();
            }
        }

        public string BillBookId
        {
            set 
            {
                string billbookId = value;
                if (billbookId != String.Empty && billbookId != null)
                {
                    billBookIdText.Text =  billbookId.Substring(6,9);
                    SearchBillBookStatus();
                }
            }
        }
        #endregion

        #region "Constructor & Presenter"

        public BillBookUndoSaveCheckInView()
        {
            InitializeComponent();
            billBookSavedInfoGV.AutoGenerateColumns = false;
            billBookSavedDetailGV.AutoGenerateColumns = false;
            ClearScreen();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public BillBookUndoSaveCheckInViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        #endregion

        #region "Event"

        protected override void OnLoad(EventArgs e)
        {            
            _presenter.OnViewReady();
            billBookIdText.Focus();
        }


        private void cancelBillBookBt_Click(object sender, EventArgs e)
        {            
            DialogResult _confirm = MessageBox.Show("คุณต้องการบันทึกข้อมูลใช่หรือไม่", "ยกเลิกสมุดจ่ายบิล", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (_confirm.Equals(DialogResult.Yes))
            {
                try
                {
                    bool result = false;
                    WaitingFormHelper.ShowWaitingForm();
                    result = _presenter.IsBillBookCalculated(_billBookCheckIn.BookId);
                    if (!result)
                    {
                        result = _presenter.CancelBillBookCheckIn(_billBookCheckIn);
                        WaitingFormHelper.HideWaitingForm();
                        if (result)
                        {
                            MessageBox.Show("ยกเลิกการตัดชำระสมุดจ่ายบิลเรียบร้อย", "ผลการยกเลิกการตัดชำระ", MessageBoxButtons.OK, MessageBoxIcon.Information);                           
                            ClearScreen();
                            _presenter.ClearBillBookCheckInForm();
                        }
                        else
                        {                           
                            MessageBox.Show("ไม่สามารถยกเลิกการตัดชำระสมุดจ่ายบิลได้", "ผลการยกเลิกการตัดชำระ", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                    else 
                    {
                        WaitingFormHelper.HideWaitingForm();
                        MessageBox.Show("ไม่สามารถยกเลิกการตัดชำระสมุดจ่ายบิลได้เนื่องจากมีการคำนวณค่าปรับค่าตอบแทนแล้ว", "ผลการยกเลิกการตัดชำระ", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                catch (Exception ex)
                {

                    WaitingFormHelper.HideWaitingForm();
                    Logger.WriteError(Logger.Module.AGENCY, "ยกเลิกการตัดชำระสมุดจ่ายบิล", ex.ToString());
                    ClientExceptionController.ShowExceptionDialog(EErrorInModule.Agency, ex);
                }
            }           
        }

        private void billBookIdText_KeyDown(object sender, KeyEventArgs e)
        {
            if ((billBookIdText.Text.Length == ModuleConfigurationNames.BillBookLengthOnly + 1 ) && (e.KeyCode == Keys.Enter))
            {
                SearchBillBookStatus();
            }
        }

        #endregion

        #region "Helper"

        private void FillSavedBillBookInfo()
        {
            billBookSavedInfoGV.Enabled = false;
            //billBookSavedInfoGV.DataSource = _billBookSavedInfoList;
            billBookSavedInfoGV.Enabled = true;
        }

        public void FillSavedBillBookDetailInfo()
        {
            billBookSavedDetailGV.Enabled = false;
            billBookSavedDetailGV.DataSource = _billBookSavedDetailList;
            billBookSavedDetailGV.Enabled = true;
        }

        private void SearchBillBookStatus()
        {
            
            string branchId = Session.Branch.Id;
            string billBookId =  billBookIdText.Text.Replace("-", "");
            billBookId = String.Format("{0}{1}", branchId, billBookId);
            _billBookCheckIn = _presenter.BillBookIdTextChangeCommitted(billBookId);
            _presenter.WorkItem.State["BillBookCancelCheckIn"] = _billBookCheckIn;
            if (_billBookCheckIn.BookId != null)
            {
                string[] billBookHeader = new string[4];
                billBookHeader[0] = billBookIdText.Text;
                billBookHeader[1] = _billBookCheckIn.BillPaymentDate == null ? String.Empty : _billBookCheckIn.BillPaymentDate.Value.ToString("dd/MM/yyyy", new CultureInfo("th-TH"));
                billBookHeader[2] = _billBookCheckIn.BookTypeName;
                billBookHeader[3] = String.Format(" {0} {1}", _billBookCheckIn.BillAgentId.Substring(6,6) , _billBookCheckIn.BillAgentName);
                billBookSavedInfoGV.Rows.Add(billBookHeader);

                List<BillBookLineCheckInInfo> _lineCheckIn = _presenter.GetBillBookLineCheckIn(_billBookCheckIn);
                billBookSavedDetailGV.DataSource = new List<BillBookLineCheckInInfo>();
                billBookSavedDetailGV.DataSource = _lineCheckIn;
                cancelBillBookBt.Enabled = true;
                cancelBillBookBt.Focus();
            }
            else
            {
                MessageBox.Show("ไม่พบข้อมูลสมุดจ่ายบิล", "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Information);
                ClearScreen();
                billBookIdText.Text = String.Empty;
                billBookIdText.Focus();
                cancelBillBookBt.Enabled = false;
            }            
        }

        public void ClearScreen()
        {
            billBookIdText.Clear();
            //billBookSavedInfoGV.Rows.Clear();
            //List<BillBookLineCheckInInfo> _lineCheckIn = _presenter.GetBillBookLineCheckIn(_billBookCheckIn);
            billBookSavedInfoGV.Rows.Clear();
            billBookSavedDetailGV.DataSource = null;

        }
        #endregion

    }
}

