//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PEA.BPM.WebService.Security {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BPMNewsDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BPMNewsDS : global::System.Data.DataSet {
        
        private nb_sel_NewsBroadcastBySentDateDataTable tablenb_sel_NewsBroadcastBySentDate;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BPMNewsDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected BPMNewsDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["nb_sel_NewsBroadcastBySentDate"] != null)) {
                    base.Tables.Add(new nb_sel_NewsBroadcastBySentDateDataTable(ds.Tables["nb_sel_NewsBroadcastBySentDate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public nb_sel_NewsBroadcastBySentDateDataTable nb_sel_NewsBroadcastBySentDate {
            get {
                return this.tablenb_sel_NewsBroadcastBySentDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            BPMNewsDS cln = ((BPMNewsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["nb_sel_NewsBroadcastBySentDate"] != null)) {
                    base.Tables.Add(new nb_sel_NewsBroadcastBySentDateDataTable(ds.Tables["nb_sel_NewsBroadcastBySentDate"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablenb_sel_NewsBroadcastBySentDate = ((nb_sel_NewsBroadcastBySentDateDataTable)(base.Tables["nb_sel_NewsBroadcastBySentDate"]));
            if ((initTable == true)) {
                if ((this.tablenb_sel_NewsBroadcastBySentDate != null)) {
                    this.tablenb_sel_NewsBroadcastBySentDate.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "BPMNewsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BPMNewsDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablenb_sel_NewsBroadcastBySentDate = new nb_sel_NewsBroadcastBySentDateDataTable();
            base.Tables.Add(this.tablenb_sel_NewsBroadcastBySentDate);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializenb_sel_NewsBroadcastBySentDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BPMNewsDS ds = new BPMNewsDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void nb_sel_NewsBroadcastBySentDateRowChangeEventHandler(object sender, nb_sel_NewsBroadcastBySentDateRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class nb_sel_NewsBroadcastBySentDateDataTable : global::System.Data.TypedTableBase<nb_sel_NewsBroadcastBySentDateRow> {
            
            private global::System.Data.DataColumn columnBroadcastId;
            
            private global::System.Data.DataColumn columnSentDt;
            
            private global::System.Data.DataColumn columnBroadcastTopic;
            
            private global::System.Data.DataColumn columnDetail;
            
            private global::System.Data.DataColumn columnRecieverId;
            
            private global::System.Data.DataColumn columnBranchId;
            
            private global::System.Data.DataColumn columnAreaId;
            
            private global::System.Data.DataColumn columnRecieverName;
            
            private global::System.Data.DataColumn columnIsRead;
            
            private global::System.Data.DataColumn columnReadSymbol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateDataTable() {
                this.TableName = "nb_sel_NewsBroadcastBySentDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal nb_sel_NewsBroadcastBySentDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected nb_sel_NewsBroadcastBySentDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BroadcastIdColumn {
                get {
                    return this.columnBroadcastId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SentDtColumn {
                get {
                    return this.columnSentDt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BroadcastTopicColumn {
                get {
                    return this.columnBroadcastTopic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailColumn {
                get {
                    return this.columnDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecieverIdColumn {
                get {
                    return this.columnRecieverId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BranchIdColumn {
                get {
                    return this.columnBranchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AreaIdColumn {
                get {
                    return this.columnAreaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecieverNameColumn {
                get {
                    return this.columnRecieverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReadColumn {
                get {
                    return this.columnIsRead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReadSymbolColumn {
                get {
                    return this.columnReadSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRow this[int index] {
                get {
                    return ((nb_sel_NewsBroadcastBySentDateRow)(this.Rows[index]));
                }
            }
            
            public event nb_sel_NewsBroadcastBySentDateRowChangeEventHandler nb_sel_NewsBroadcastBySentDateRowChanging;
            
            public event nb_sel_NewsBroadcastBySentDateRowChangeEventHandler nb_sel_NewsBroadcastBySentDateRowChanged;
            
            public event nb_sel_NewsBroadcastBySentDateRowChangeEventHandler nb_sel_NewsBroadcastBySentDateRowDeleting;
            
            public event nb_sel_NewsBroadcastBySentDateRowChangeEventHandler nb_sel_NewsBroadcastBySentDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addnb_sel_NewsBroadcastBySentDateRow(nb_sel_NewsBroadcastBySentDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRow Addnb_sel_NewsBroadcastBySentDateRow(System.DateTime SentDt, string BroadcastTopic, string Detail, int RecieverId, string BranchId, string AreaId, string RecieverName, bool IsRead, string ReadSymbol) {
                nb_sel_NewsBroadcastBySentDateRow rownb_sel_NewsBroadcastBySentDateRow = ((nb_sel_NewsBroadcastBySentDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SentDt,
                        BroadcastTopic,
                        Detail,
                        RecieverId,
                        BranchId,
                        AreaId,
                        RecieverName,
                        IsRead,
                        ReadSymbol};
                rownb_sel_NewsBroadcastBySentDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownb_sel_NewsBroadcastBySentDateRow);
                return rownb_sel_NewsBroadcastBySentDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRow FindByBroadcastId(int BroadcastId) {
                return ((nb_sel_NewsBroadcastBySentDateRow)(this.Rows.Find(new object[] {
                            BroadcastId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                nb_sel_NewsBroadcastBySentDateDataTable cln = ((nb_sel_NewsBroadcastBySentDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new nb_sel_NewsBroadcastBySentDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBroadcastId = base.Columns["BroadcastId"];
                this.columnSentDt = base.Columns["SentDt"];
                this.columnBroadcastTopic = base.Columns["BroadcastTopic"];
                this.columnDetail = base.Columns["Detail"];
                this.columnRecieverId = base.Columns["RecieverId"];
                this.columnBranchId = base.Columns["BranchId"];
                this.columnAreaId = base.Columns["AreaId"];
                this.columnRecieverName = base.Columns["RecieverName"];
                this.columnIsRead = base.Columns["IsRead"];
                this.columnReadSymbol = base.Columns["ReadSymbol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBroadcastId = new global::System.Data.DataColumn("BroadcastId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroadcastId);
                this.columnSentDt = new global::System.Data.DataColumn("SentDt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSentDt);
                this.columnBroadcastTopic = new global::System.Data.DataColumn("BroadcastTopic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroadcastTopic);
                this.columnDetail = new global::System.Data.DataColumn("Detail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail);
                this.columnRecieverId = new global::System.Data.DataColumn("RecieverId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecieverId);
                this.columnBranchId = new global::System.Data.DataColumn("BranchId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchId);
                this.columnAreaId = new global::System.Data.DataColumn("AreaId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaId);
                this.columnRecieverName = new global::System.Data.DataColumn("RecieverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecieverName);
                this.columnIsRead = new global::System.Data.DataColumn("IsRead", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRead);
                this.columnReadSymbol = new global::System.Data.DataColumn("ReadSymbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadSymbol);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBroadcastId}, true));
                this.columnBroadcastId.AutoIncrement = true;
                this.columnBroadcastId.AllowDBNull = false;
                this.columnBroadcastId.ReadOnly = true;
                this.columnBroadcastId.Unique = true;
                this.columnBroadcastTopic.MaxLength = 255;
                this.columnDetail.MaxLength = 2147483647;
                this.columnBranchId.MaxLength = 6;
                this.columnAreaId.ReadOnly = true;
                this.columnAreaId.MaxLength = 2;
                this.columnRecieverName.ReadOnly = true;
                this.columnRecieverName.MaxLength = 57;
                this.columnIsRead.ReadOnly = true;
                this.columnReadSymbol.ReadOnly = true;
                this.columnReadSymbol.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRow Newnb_sel_NewsBroadcastBySentDateRow() {
                return ((nb_sel_NewsBroadcastBySentDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new nb_sel_NewsBroadcastBySentDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(nb_sel_NewsBroadcastBySentDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.nb_sel_NewsBroadcastBySentDateRowChanged != null)) {
                    this.nb_sel_NewsBroadcastBySentDateRowChanged(this, new nb_sel_NewsBroadcastBySentDateRowChangeEvent(((nb_sel_NewsBroadcastBySentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.nb_sel_NewsBroadcastBySentDateRowChanging != null)) {
                    this.nb_sel_NewsBroadcastBySentDateRowChanging(this, new nb_sel_NewsBroadcastBySentDateRowChangeEvent(((nb_sel_NewsBroadcastBySentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.nb_sel_NewsBroadcastBySentDateRowDeleted != null)) {
                    this.nb_sel_NewsBroadcastBySentDateRowDeleted(this, new nb_sel_NewsBroadcastBySentDateRowChangeEvent(((nb_sel_NewsBroadcastBySentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.nb_sel_NewsBroadcastBySentDateRowDeleting != null)) {
                    this.nb_sel_NewsBroadcastBySentDateRowDeleting(this, new nb_sel_NewsBroadcastBySentDateRowChangeEvent(((nb_sel_NewsBroadcastBySentDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removenb_sel_NewsBroadcastBySentDateRow(nb_sel_NewsBroadcastBySentDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BPMNewsDS ds = new BPMNewsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "nb_sel_NewsBroadcastBySentDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class nb_sel_NewsBroadcastBySentDateRow : global::System.Data.DataRow {
            
            private nb_sel_NewsBroadcastBySentDateDataTable tablenb_sel_NewsBroadcastBySentDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal nb_sel_NewsBroadcastBySentDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenb_sel_NewsBroadcastBySentDate = ((nb_sel_NewsBroadcastBySentDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BroadcastId {
                get {
                    return ((int)(this[this.tablenb_sel_NewsBroadcastBySentDate.BroadcastIdColumn]));
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.BroadcastIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SentDt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablenb_sel_NewsBroadcastBySentDate.SentDtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SentDt\' in table \'nb_sel_NewsBroadcastBySentDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.SentDtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BroadcastTopic {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.BroadcastTopicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BroadcastTopic\' in table \'nb_sel_NewsBroadcastBySentDate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.BroadcastTopicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Detail {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.DetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail\' in table \'nb_sel_NewsBroadcastBySentDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.DetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecieverId {
                get {
                    try {
                        return ((int)(this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecieverId\' in table \'nb_sel_NewsBroadcastBySentDate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BranchId {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.BranchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchId\' in table \'nb_sel_NewsBroadcastBySentDate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.BranchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AreaId {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.AreaIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaId\' in table \'nb_sel_NewsBroadcastBySentDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.AreaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecieverName {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecieverName\' in table \'nb_sel_NewsBroadcastBySentDate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRead {
                get {
                    try {
                        return ((bool)(this[this.tablenb_sel_NewsBroadcastBySentDate.IsReadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRead\' in table \'nb_sel_NewsBroadcastBySentDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.IsReadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReadSymbol {
                get {
                    try {
                        return ((string)(this[this.tablenb_sel_NewsBroadcastBySentDate.ReadSymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReadSymbol\' in table \'nb_sel_NewsBroadcastBySentDate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablenb_sel_NewsBroadcastBySentDate.ReadSymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSentDtNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.SentDtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSentDtNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.SentDtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBroadcastTopicNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.BroadcastTopicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBroadcastTopicNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.BroadcastTopicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.DetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.DetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecieverIdNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.RecieverIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecieverIdNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBranchIdNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.BranchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBranchIdNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.BranchIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAreaIdNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.AreaIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAreaIdNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.AreaIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecieverNameNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.RecieverNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecieverNameNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.RecieverNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReadNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.IsReadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReadNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.IsReadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadSymbolNull() {
                return this.IsNull(this.tablenb_sel_NewsBroadcastBySentDate.ReadSymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadSymbolNull() {
                this[this.tablenb_sel_NewsBroadcastBySentDate.ReadSymbolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class nb_sel_NewsBroadcastBySentDateRowChangeEvent : global::System.EventArgs {
            
            private nb_sel_NewsBroadcastBySentDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRowChangeEvent(nb_sel_NewsBroadcastBySentDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public nb_sel_NewsBroadcastBySentDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PEA.BPM.WebService.Security.BPMNewsDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class nb_sel_NewsBroadcastBySentDateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public nb_sel_NewsBroadcastBySentDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "nb_sel_NewsBroadcastBySentDate";
            tableMapping.ColumnMappings.Add("BroadcastId", "BroadcastId");
            tableMapping.ColumnMappings.Add("SentDt", "SentDt");
            tableMapping.ColumnMappings.Add("BroadcastTopic", "BroadcastTopic");
            tableMapping.ColumnMappings.Add("Detail", "Detail");
            tableMapping.ColumnMappings.Add("RecieverId", "RecieverId");
            tableMapping.ColumnMappings.Add("BranchId", "BranchId");
            tableMapping.ColumnMappings.Add("AreaId", "AreaId");
            tableMapping.ColumnMappings.Add("RecieverName", "RecieverName");
            tableMapping.ColumnMappings.Add("IsRead", "IsRead");
            tableMapping.ColumnMappings.Add("ReadSymbol", "ReadSymbol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["NewsDatabase"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.nb_sel_NewsBroadcastBySentDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SentDt", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BPMNewsDS.nb_sel_NewsBroadcastBySentDateDataTable dataTable, global::System.Nullable<global::System.DateTime> SentDt) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SentDt.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SentDt.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BPMNewsDS.nb_sel_NewsBroadcastBySentDateDataTable GetData(global::System.Nullable<global::System.DateTime> SentDt) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((SentDt.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SentDt.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            BPMNewsDS.nb_sel_NewsBroadcastBySentDateDataTable dataTable = new BPMNewsDS.nb_sel_NewsBroadcastBySentDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591