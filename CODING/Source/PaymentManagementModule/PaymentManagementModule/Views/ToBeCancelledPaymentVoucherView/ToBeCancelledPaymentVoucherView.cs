//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.PaymentManagementModule.Interface.BusinessEntities;
using System.Collections.Generic;
using System.ComponentModel;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;
using PEA.BPM.Architecture.ArchitectureTool;
using PEA.BPM.PaymentManagementModule.Interface.Constants;
using PEA.BPM.Architecture.ArchitectureTool.Security;
using PEA.BPM.PaymentManagementModule.Views.ToBeCancelledPaymentVoucherView;
using System.Drawing;
using PEA.BPM.CashManagementModule.Interface.BusinessEntities;
using PEA.BPM.Architecture.CommonUtilities;
using PEA.BPM.Architecture.ArchitectureInterface.BusinessEntities;

namespace PEA.BPM.PaymentManagementModule
{
    [SmartPart]
    public partial class ToBeCancelledPaymentVoucherView : UserControl, IToBeCancelledPaymentVoucherView
    {
        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public ToBeCancelledPaymentVoucherViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        public ToBeCancelledPaymentVoucherView()
        {
            InitializeComponent();
            transactionDataGridView.AutoGenerateColumns = false;

            if (Session.Work.Id == null)
                okButton.Enabled = false;
            else
                okButton.Enabled = true;
        }

        #region +++ Command Handler +++

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
        }

        private void cancelButton_Click(object sender, EventArgs e)
        {
            ClearData();
        }

        private void okButton_Click(object sender, EventArgs e)
        {
            if (!ValidateCloseWorkOfCashier())
                return;

            if (transactionDataGridView.Rows.Count != 0)
            {
                List<APEntity> apEntities = (List<APEntity>)_presenter.WorkItem.State["APEntities"];
                if (DialogResult.OK == MessageBox.Show("คำเตือน: หากทำการยกเลิกใบสำคัญจ่ายแล้ว จะไม่สามารถย้อนกลับรายการได้\n\nโปรดกดปุ่ม 'OK' เพื่อยืนยันการยกเลิก",
                    "ข้อความยืนยัน", MessageBoxButtons.OKCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2))
                {
                    CancelReceipt();
                }
            }
        }

        /// <summary>
        /// Handles the CellPainting event of the transactionDataGridView control.
        /// Display row number
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="System.Windows.Forms.DataGridViewCellPaintingEventArgs"/> instance containing the event data.</param>
        private void transactionDataGridView_CellPainting(object sender, DataGridViewCellPaintingEventArgs e)
        {
            StringFormat sf = new StringFormat();
            sf.Alignment = StringAlignment.Center;
            sf.LineAlignment = StringAlignment.Center;
            if (e.ColumnIndex == 1 & e.RowIndex >= 0)
            {
                e.PaintBackground(e.ClipBounds, true);
                int rIndex = (e.RowIndex + 1);
                e.Graphics.DrawString(rIndex.ToString(), this.Font, Brushes.Black, e.CellBounds, sf);
                e.Handled = true;

            }
        }

        #endregion

        #region +++ Custom Function +++

        public bool AddEntities(List<APEntity> apEntities)
        {
            if (apEntities.Count > 0)
            {
                //if (apEntities.Count > 1)
                //{
                //    MessageBox.Show(
                //        "ใบสำคัญจ่ายที่เลือกมีรายการใบสำคัญจ่ายอื่นที่เกี่ยวเนื่องกัน และจะต้องถูกยกเลิกพร้อมกัน",
                //        "ยกเลิกใบสำคัญจ่าย",
                //        MessageBoxButtons.OK, MessageBoxIcon.Information);
                //}

                _presenter.WorkItem.State["APEntities"] = apEntities;
                RedrawScreen();
                okButton.Focus();
            }
            return true;
        }

        private void RedrawScreen()
        {
            List<APEntity> apEntities = (List<APEntity>)_presenter.WorkItem.State["APEntities"];
            transactionDataGridView.DataSource = apEntities.ToArray();

            ReCalculateSummations();
        }

        private void ReCalculateSummations()
        {
            int nbAll = 0;
            decimal amAll = 0;

            for (int i = 0; i < transactionDataGridView.Rows.Count; i++)
            {
                APEntity r = (APEntity)transactionDataGridView.Rows[i].DataBoundItem;
                nbAll = nbAll + 1;
                amAll = amAll + r.GAmount.Value;
            }

            totalTransactionTextBox.Text = nbAll.ToString("#,##0");
            totalAmountTransactionTextBox.Text = amAll.ToString("#,##0.00");
        }

        public void ClearData()
        {
            _presenter.WorkItem.State["APEntities"] = new List<APEntity>();
            RedrawScreen();
        }

        private void CancelReceipt()
        {
            List<APEntity> apEntities = (List<APEntity>)_presenter.WorkItem.State["APEntities"];
            string strLineAPId = GetStrLineAPId(apEntities);

            string remark;

            if (Authorization.IsAuthorized(SecurityNames.PaymentVoucherCancellationNow,
                    "ยกเลิกใบสำคัญจ่าย", false, "กรุณากรอกเหตุผลในการยกเลิกใบสำคัญจ่าย", out remark))
            {
                try
                {
                    List<APEntity> returnPaymentVouchers = _presenter.OnCancelPaymentVoucher(strLineAPId, remark, Session.User.Id, Session.User.Name);

                    ClearData();

                    using (CancelPaymentVoucherForm ccrForm = new CancelPaymentVoucherForm())
                    {
                        ccrForm.SetReturnPaymentVoucher(returnPaymentVouchers);
                        ccrForm.ShowDialog();
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.ToString(), "ยกเลิกการจ่ายเงิน", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private string GetStrLineAPId(List<APEntity> apEntities)
        {
            string ret = "";
            foreach(APEntity r in apEntities)
            {
                ret += r.APId.Trim() + "|";
            }
            return ret;
        }

        #endregion

        #region +++ Cash Management +++

        private bool ValidateCloseWorkOfCashier()
        {
            if ((Session.IsNetworkConnectionAvailable == true ? ((((WorkStatus)IsClosedWork()).CloseWorkBy == null) ? true : false) : false))
                return true;
            else
            {
                string cashierTxt = string.Format("({0}) - {1}", ((WorkStatus)IsClosedWork()).CloseWorkBy, ((WorkStatus)IsClosedWork()).CashierName);
                MessageBox.Show("ระบบได้ทำการปิดกะนี้ไปแล้ว \n\nผู้ปิดกะ: " + cashierTxt, "สถานะปิดกะ", MessageBoxButtons.OK, MessageBoxIcon.Stop);
                _presenter.OnCashierOpenWork("tmp");
                _presenter.OnClosePaymentView();
                //_presenter.OnCloseView();
                return false;
            }
        }

        private WorkStatus IsClosedWork()
        {
            return Authorization.IsForcedToCloseWork(Session.Work.Id);
        }

        #endregion
    }
}

