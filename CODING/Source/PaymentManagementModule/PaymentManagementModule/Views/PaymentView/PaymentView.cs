//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.PaymentManagementModule.Interface.BusinessEntities;
using System.Collections.Generic;
using PEA.BPM.PaymentManagementModule;
using PEA.BPM.Architecture.CommonUtilities;
using System.Text.RegularExpressions;

namespace PEA.BPM.PaymentManagementModule
{
    [SmartPart]
    public partial class PaymentView : UserControl, IPaymentView
    {
        public PaymentView()
        {
            InitializeComponent();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public PaymentViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
            SetControlByFormatAPId();
            branchIdMaskedTextBox.Focus();
        }

        private void paymentClearButton_Click(object sender, EventArgs e)
        {
            ClearPaymentView();
        }

        private void addPaymentButton_Click(object sender, EventArgs e)
        {
            if (ValidateForm())
            {
                APInfo ap = new APInfo();

                if (APRadioBtn.Checked)
                    ap.PaymentVoucher = branchIdMaskedTextBox.Text + paymentDtMaskedTextBox.Text + runningNoMaskedTextBox.Text;
                else if (IsuRadioBtn.Checked)
                    ap.PaymentVoucher = isu1MaskedTb.Text + isu2MaskedTb.Text + isu3MaskedTb.Text;

                ap.CaId = requestorIdMaskedTextBox.Text;
                ap.GAmount = Decimal.Round(Convert.ToDecimal(gAmountMaskedTextBox.Text),2);

                _presenter.APPaymentAdded(ap);
                ClearPaymentView();
            }
        }

        #region +++ Custom Function +++
        private bool ValidateForm()
        {
            branchIdMaskedTextBox.Text = branchIdMaskedTextBox.Text.Replace(" ", "");
            paymentDtMaskedTextBox.Text = paymentDtMaskedTextBox.Text.Replace(" ", "");
            runningNoMaskedTextBox.Text = runningNoMaskedTextBox.Text.Replace(" ", "");
            requestorIdMaskedTextBox.Text = requestorIdMaskedTextBox.Text.Replace(" ", "");

            isu1MaskedTb.Text = isu1MaskedTb.Text.Replace(" ", "");
            isu2MaskedTb.Text = isu2MaskedTb.Text.Replace(" ", "");
            isu3MaskedTb.Text = isu3MaskedTb.Text.Replace(" ", "");

            string correctPaymentVoucherStr = "กรุณาใส่เลขที่ใบสำคัญจ่ายให้ถูกต้อง";

            if (APRadioBtn.Checked)
            {
                if (branchIdMaskedTextBox.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, branchIdMaskedTextBox);
                    return false;
                }
                else if (paymentDtMaskedTextBox.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, paymentDtMaskedTextBox);
                    return false;
                }
                else if (runningNoMaskedTextBox.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, runningNoMaskedTextBox);
                    return false;
                }
                else if (branchIdMaskedTextBox.Text.Length + paymentDtMaskedTextBox.Text.Length + runningNoMaskedTextBox.Text.Length != 18)
                {
                    ModuleHelper.Alert(correctPaymentVoucherStr);
                    return false;
                }
            }
            else if (IsuRadioBtn.Checked)
            {
                if (isu1MaskedTb.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, isu1MaskedTb);
                    return false;
                }
                else if (isu2MaskedTb.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, isu2MaskedTb);
                    return false;
                }
                else if (isu3MaskedTb.Text.Trim() == string.Empty)
                {
                    ModuleHelper.AlertAndFocusTextBox(correctPaymentVoucherStr, isu3MaskedTb);
                    return false;
                }
                else if (isu1MaskedTb.Text.Length + isu2MaskedTb.Text.Length + isu3MaskedTb.Text.Length != 18)
                {
                    ModuleHelper.Alert(correctPaymentVoucherStr);
                    return false;
                }
            }



            if (requestorIdMaskedTextBox.Text.Trim() == string.Empty)
            {
                ModuleHelper.AlertAndFocusTextBox("กรุณาใส่รหัสผู้เบิก", requestorIdMaskedTextBox);
                return false;
            }

            if (gAmountMaskedTextBox.Text.Trim() == string.Empty)
            {
                ModuleHelper.Alert("กรุณาใส่จำนวนเงินสุทธิ");
                return false;
            }
            else
            {
                requestorIdMaskedTextBox.Text = requestorIdMaskedTextBox.Text.PadLeft(12, '0');
                //return false;
            }

            string paymentVoucherTemp = "";
            if (APRadioBtn.Checked)
                paymentVoucherTemp = branchIdMaskedTextBox.Text + paymentDtMaskedTextBox.Text + runningNoMaskedTextBox.Text;
            else if (IsuRadioBtn.Checked)
                paymentVoucherTemp = isu1MaskedTb.Text + isu2MaskedTb.Text + isu3MaskedTb.Text;

            if (!_presenter.SearchPaidPaymentVoucher(paymentVoucherTemp))
            {
                ModuleHelper.Alert("เลขที่ใบสำคัญจ่ายดังกล่าวได้ทำการจ่ายเงินแล้ว");
                return false;
            }

            if (!IsNumeric(gAmountMaskedTextBox.Text.Trim()))
            {
                ModuleHelper.AlertAndFocusTextBox("กรุณากรอกจำนวนเงินสดให้ถูกต้อง", gAmountMaskedTextBox);
                return false;
            }

            decimal cash = Convert.ToDecimal(gAmountMaskedTextBox.Text);
            if (cash <= 0)
            {
                ModuleHelper.AlertAndFocusTextBox("กรุณากรอกจำนวนเงินสดให้ถูกต้อง", gAmountMaskedTextBox);
                return false;
            }
            return true;
        }

        private void ClearPaymentView()
        {
            branchIdMaskedTextBox.Text = "";
            paymentDtMaskedTextBox.Text = "";
            runningNoMaskedTextBox.Text = "";

            isu1MaskedTb.Text = "";
            isu2MaskedTb.Text = "";
            isu3MaskedTb.Text = "";

            requestorIdMaskedTextBox.Text = "";
            gAmountMaskedTextBox.Text = "";

            if (APRadioBtn.Checked)
            {
                branchIdMaskedTextBox.Focus();
            }
            else
            {
                isu1MaskedTb.Focus();
            }

        }
        #endregion

        private void branchIdMaskedTextBox_KeyUp(object sender, KeyEventArgs e)
        {
            branchIdMaskedTextBox.Text = branchIdMaskedTextBox.Text.Replace(" ", "");
            if (branchIdMaskedTextBox.Text.Trim().Length == 17)
            {
                ModuleHelper.AlertAndFocusTextBox("กรุณาใส่เลขที่ใบสำคัญจ่ายให้ถูกต้อง", branchIdMaskedTextBox);
                branchIdMaskedTextBox.Text = "";
            }
            else if (branchIdMaskedTextBox.Text.Length >= 4 && branchIdMaskedTextBox.Text.Trim().Length != 32)
            {
                branchIdMaskedTextBox.Text = branchIdMaskedTextBox.Text.Trim().Substring(0, 4);
                paymentDtMaskedTextBox.Focus();
            }
        }

        private void branchIdMaskedTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)13)
            {
                if (branchIdMaskedTextBox.Text.Trim().Length == 32)
                {
                    string voucherNumber = branchIdMaskedTextBox.Text.Replace(" ", "").Trim();

                    branchIdMaskedTextBox.Text = voucherNumber.Substring(0, 4);
                    paymentDtMaskedTextBox.Text = voucherNumber.Substring(4, 8);
                    runningNoMaskedTextBox.Text = voucherNumber.Substring(12, 6);
                    requestorIdMaskedTextBox.Text = voucherNumber.Substring(18, 12);
                    gAmountMaskedTextBox.Focus();
                }
                else if (branchIdMaskedTextBox.Text.Trim().Length == 17)
                {
                    ModuleHelper.AlertAndFocusTextBox("กรุณาใส่เลขที่ใบสำคัญจ่ายให้ถูกต้อง", branchIdMaskedTextBox);
                    branchIdMaskedTextBox.Text = "";
                }
            }
        }

        private void paymentDtMaskedTextBox_KeyUp(object sender, KeyEventArgs e)
        {
            paymentDtMaskedTextBox.Text = paymentDtMaskedTextBox.Text.Replace(" ", "");
            if (paymentDtMaskedTextBox.Text.Length >= 8)
            {
                paymentDtMaskedTextBox.Text = paymentDtMaskedTextBox.Text.Trim().Substring(0, 8);
                runningNoMaskedTextBox.Focus();
            }
        }

        private void runningNoMaskedTextBox_KeyUp(object sender, KeyEventArgs e)
        {
            runningNoMaskedTextBox.Text = runningNoMaskedTextBox.Text.Replace(" ", "");
            if (runningNoMaskedTextBox.Text.Length >= 6)
            {
                runningNoMaskedTextBox.Text = runningNoMaskedTextBox.Text.Trim().Substring(0, 6);
                requestorIdMaskedTextBox.Focus();
            }
        }

        private void runningNoMaskedTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ( e.KeyChar == (char)13 )
            {
                runningNoMaskedTextBox.Text = runningNoMaskedTextBox.Text.Replace(" ", "").PadLeft(6, '0');
                requestorIdMaskedTextBox.Focus();
                requestorIdMaskedTextBox.SelectAll();
            }
        }

        private void isu1MaskedTb_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)13)
            {
                if (isu1MaskedTb.Text.Trim().Length == 32)
                {
                    string voucherNumber = isu1MaskedTb.Text.Replace(" ", "").Trim();

                    isu1MaskedTb.Text = voucherNumber.Substring(0, 6);
                    isu2MaskedTb.Text = voucherNumber.Substring(6, 6);
                    isu3MaskedTb.Text = voucherNumber.Substring(12, 6);
                    requestorIdMaskedTextBox.Text = voucherNumber.Substring(18, 12);
                    gAmountMaskedTextBox.Focus();
                }
                else if (isu1MaskedTb.Text.Trim().Length == 17)
                {
                    ModuleHelper.AlertAndFocusTextBox("กรุณาใส่เลขที่ใบสำคัญจ่ายให้ถูกต้อง", isu1MaskedTb);
                    isu1MaskedTb.Text = "";
                }
            }
        }

        private void isu1MaskedTb_KeyUp(object sender, KeyEventArgs e)
        {
            isu1MaskedTb.Text = isu1MaskedTb.Text.Replace(" ", "");
            if (isu1MaskedTb.Text.Trim().Length == 17)
            {
                ModuleHelper.AlertAndFocusTextBox("กรุณาใส่เลขที่ใบสำคัญจ่ายให้ถูกต้อง", isu1MaskedTb);
                isu1MaskedTb.Text = "";
            }
            else if (isu1MaskedTb.Text.Length >= 6 && isu1MaskedTb.Text.Trim().Length != 32)
            {
                isu1MaskedTb.Text = isu1MaskedTb.Text.Trim().Substring(0, 6);
                isu2MaskedTb.Focus();
            }
        }

        private void isu2MaskedTb_KeyUp(object sender, KeyEventArgs e)
        {
            isu2MaskedTb.Text = isu2MaskedTb.Text.Replace(" ", "");
            if (isu2MaskedTb.Text.Length >= 6)
            {
                isu2MaskedTb.Text = isu2MaskedTb.Text.Trim().Substring(0, 6);
                isu3MaskedTb.Focus();
            }
        }


        private void isu3MaskedTb_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)13)
            {
                isu3MaskedTb.Text = isu3MaskedTb.Text.Replace(" ", "").PadLeft(6, '0');
                requestorIdMaskedTextBox.Focus();
                requestorIdMaskedTextBox.SelectAll();
            }
        }

        private void isu3MaskedTb_KeyUp(object sender, KeyEventArgs e)
        {
            isu3MaskedTb.Text = isu3MaskedTb.Text.Replace(" ", "");
            if (isu3MaskedTb.Text.Length >= 6)
            {
                isu3MaskedTb.Text = isu3MaskedTb.Text.Trim().Substring(0, 6);
                requestorIdMaskedTextBox.Focus();
            }
        }

        private void requestorIdMaskedTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if ( e.KeyChar == (char)13 )
            {
                requestorIdMaskedTextBox.Text = requestorIdMaskedTextBox.Text.Replace(" ", "").PadLeft(12, '0');
                SendKeys.Send("{TAB}");
            }
        }

        private void requestorIdMaskedTextBox_KeyUp(object sender, KeyEventArgs e)
        {
            requestorIdMaskedTextBox.Text = requestorIdMaskedTextBox.Text.Replace(" ", "");
            if (requestorIdMaskedTextBox.Text.Length >= 12)
            {
                requestorIdMaskedTextBox.Text = requestorIdMaskedTextBox.Text.Trim().Substring(0, 12);
                gAmountMaskedTextBox.Focus();
            }
        }

        private void gAmountMaskedTextBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)13)
            {
                if (!IsNumeric(gAmountMaskedTextBox.Text.Trim()))
                {
                    ModuleHelper.AlertAndFocusTextBox("กรุณาใส่จำนวนเงินสุทธิให้ถูกต้อง", gAmountMaskedTextBox);
                    gAmountMaskedTextBox.Text = "";
                }
                else if (gAmountMaskedTextBox.Text.Trim().Length == 17)
                {
                    string amount = string.Format("{0}.{1}", gAmountMaskedTextBox.Text.Trim().Substring(0, 13), gAmountMaskedTextBox.Text.Trim().Substring(13, 2));
                    gAmountMaskedTextBox.Text = Convert.ToDecimal(amount).ToString("###0.00");
                }
                else if (isu1MaskedTb.Text.Length == 6 && isu2MaskedTb.Text.Length == 6 && isu3MaskedTb.Text.Length == 6
                   && requestorIdMaskedTextBox.Text.Length == 12 && gAmountMaskedTextBox.Text.Length == 2)
                {
                    gAmountMaskedTextBox.Text = "";
                }
                else if (branchIdMaskedTextBox.Text.Length == 4 && paymentDtMaskedTextBox.Text.Length == 8 && runningNoMaskedTextBox.Text.Length == 6
                   && requestorIdMaskedTextBox.Text.Length == 12 && gAmountMaskedTextBox.Text.Length == 2)
                {
                    gAmountMaskedTextBox.Text = "";
                }

                gAmountMaskedTextBox.Text = gAmountMaskedTextBox.Text.Replace(" ", "");

                if (gAmountMaskedTextBox.Text.Length > 0)
                    SendKeys.Send("{TAB}");
            }
        }

        private void maskedTextBox_Enter(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToEnglish();

            this.BeginInvoke((MethodInvoker)delegate()
            {
                MaskedTextBox mTb = (sender as MaskedTextBox);
                if (mTb.Text == string.Empty || mTb.Text == null)
                    mTb.Select(0, 0);
                else
                    mTb.SelectAll();
            });
        }

        private void APFormat_CheckedChanged(object sender, EventArgs e)
        {
            SetControlByFormatAPId();
        }

        private void SetControlByFormatAPId()
        {
            branchIdMaskedTextBox.Enabled = APRadioBtn.Checked;
            paymentDtMaskedTextBox.Enabled = APRadioBtn.Checked;
            runningNoMaskedTextBox.Enabled = APRadioBtn.Checked;

            isu1MaskedTb.Enabled = IsuRadioBtn.Checked;
            isu2MaskedTb.Enabled = IsuRadioBtn.Checked;
            isu3MaskedTb.Enabled = IsuRadioBtn.Checked;

            if (APRadioBtn.Checked)
            {
                branchIdMaskedTextBox.Focus();
                branchIdMaskedTextBox.SelectAll();
            }
            else if (IsuRadioBtn.Checked)
            {
                isu1MaskedTb.Focus();
                isu1MaskedTb.SelectAll();
            }

        }

        private void isu1MaskedTb_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void isu2MaskedTb_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void isu3MaskedTb_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void branchIdMaskedTextBox_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void paymentDtMaskedTextBox_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void runningNoMaskedTextBox_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void requestorIdMaskedTextBox_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void gAmountMaskedTextBox_Leave(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToDefault();
        }

        private void gAmountMaskedTextBox_Enter(object sender, EventArgs e)
        {
            ScannerHelper.SwitchKeyBoardToEnglish();
        }

        private void MaskedTextBox_TextChanged(object sender, EventArgs e)
        {
            this.BeginInvoke((MethodInvoker)delegate()
            {
                MaskedTextBox mTb = (sender as MaskedTextBox);
                if (mTb.Text != string.Empty || mTb.Text != null)
                {
                    mTb.Text = mTb.Text.ToUpper();
                    if (mTb.Text.Length > 0)
                    {
                        mTb.SelectionStart = mTb.Text.Length;
                    }
                }
            });
        }

        private bool IsNumeric(String strNumber)
        {
            Regex objNotPositivePattern = new Regex("[^0-9.]");
            Regex objPositivePattern = new Regex("^[.][0-9]+$|[0-9]*[.]*[0-9]+$");
            Regex objTwoDotPattern = new Regex("[0-9]*[.][0-9]*[.][0-9]*");

            return !objNotPositivePattern.IsMatch(strNumber) &&
            objPositivePattern.IsMatch(strNumber) &&
            !objTwoDotPattern.IsMatch(strNumber);
        }


    }
}

