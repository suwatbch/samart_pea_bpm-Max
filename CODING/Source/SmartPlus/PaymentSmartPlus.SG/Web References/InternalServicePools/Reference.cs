//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9151
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.9151.
// 
#pragma warning disable 1591

namespace PaymentSmartPlus.SG.InternalServicePools {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicePoolsSoap", Namespace="http://tempuri.org/")]
    public partial class ServicePools : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ConfirmServicePrefixOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARByNotificationModelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetARByNotificationDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaymentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServicePools() {
            this.Url = global::PaymentSmartPlus.SG.Properties.Settings.Default.PaymentCollectionModule_SG_InternalServicePools_ServicePools;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ConfirmServicePrefixCompletedEventHandler ConfirmServicePrefixCompleted;
        
        /// <remarks/>
        public event GetARByNotificationModelCompletedEventHandler GetARByNotificationModelCompleted;
        
        /// <remarks/>
        public event GetARByNotificationDataTableCompletedEventHandler GetARByNotificationDataTableCompleted;
        
        /// <remarks/>
        public event UpdatePaymentCompletedEventHandler UpdatePaymentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmServicePrefix", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ConfirmServicePrefix(string notification) {
            object[] results = this.Invoke("ConfirmServicePrefix", new object[] {
                        notification});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmServicePrefixAsync(string notification) {
            this.ConfirmServicePrefixAsync(notification, null);
        }
        
        /// <remarks/>
        public void ConfirmServicePrefixAsync(string notification, object userState) {
            if ((this.ConfirmServicePrefixOperationCompleted == null)) {
                this.ConfirmServicePrefixOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmServicePrefixOperationCompleted);
            }
            this.InvokeAsync("ConfirmServicePrefix", new object[] {
                        notification}, this.ConfirmServicePrefixOperationCompleted, userState);
        }
        
        private void OnConfirmServicePrefixOperationCompleted(object arg) {
            if ((this.ConfirmServicePrefixCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmServicePrefixCompleted(this, new ConfirmServicePrefixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetARByNotificationModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ARInfoModel GetARByNotificationModel(string notification) {
            object[] results = this.Invoke("GetARByNotificationModel", new object[] {
                        notification});
            return ((ARInfoModel)(results[0]));
        }
        
        /// <remarks/>
        public void GetARByNotificationModelAsync(string notification) {
            this.GetARByNotificationModelAsync(notification, null);
        }
        
        /// <remarks/>
        public void GetARByNotificationModelAsync(string notification, object userState) {
            if ((this.GetARByNotificationModelOperationCompleted == null)) {
                this.GetARByNotificationModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARByNotificationModelOperationCompleted);
            }
            this.InvokeAsync("GetARByNotificationModel", new object[] {
                        notification}, this.GetARByNotificationModelOperationCompleted, userState);
        }
        
        private void OnGetARByNotificationModelOperationCompleted(object arg) {
            if ((this.GetARByNotificationModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARByNotificationModelCompleted(this, new GetARByNotificationModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetARByNotificationDataTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetARByNotificationDataTable(string notification) {
            object[] results = this.Invoke("GetARByNotificationDataTable", new object[] {
                        notification});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetARByNotificationDataTableAsync(string notification) {
            this.GetARByNotificationDataTableAsync(notification, null);
        }
        
        /// <remarks/>
        public void GetARByNotificationDataTableAsync(string notification, object userState) {
            if ((this.GetARByNotificationDataTableOperationCompleted == null)) {
                this.GetARByNotificationDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetARByNotificationDataTableOperationCompleted);
            }
            this.InvokeAsync("GetARByNotificationDataTable", new object[] {
                        notification}, this.GetARByNotificationDataTableOperationCompleted, userState);
        }
        
        private void OnGetARByNotificationDataTableOperationCompleted(object arg) {
            if ((this.GetARByNotificationDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetARByNotificationDataTableCompleted(this, new GetARByNotificationDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdatePayment(string NotificationNo, string InvoiceNo, string ReceiptId, string DebtId) {
            object[] results = this.Invoke("UpdatePayment", new object[] {
                        NotificationNo,
                        InvoiceNo,
                        ReceiptId,
                        DebtId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaymentAsync(string NotificationNo, string InvoiceNo, string ReceiptId, string DebtId) {
            this.UpdatePaymentAsync(NotificationNo, InvoiceNo, ReceiptId, DebtId, null);
        }
        
        /// <remarks/>
        public void UpdatePaymentAsync(string NotificationNo, string InvoiceNo, string ReceiptId, string DebtId, object userState) {
            if ((this.UpdatePaymentOperationCompleted == null)) {
                this.UpdatePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaymentOperationCompleted);
            }
            this.InvokeAsync("UpdatePayment", new object[] {
                        NotificationNo,
                        InvoiceNo,
                        ReceiptId,
                        DebtId}, this.UpdatePaymentOperationCompleted, userState);
        }
        
        private void OnUpdatePaymentOperationCompleted(object arg) {
            if ((this.UpdatePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaymentCompleted(this, new UpdatePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9136")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ARInfoModel {
        
        private string caIdField;
        
        private string caNameField;
        
        private string caAddressField;
        
        private string techBranchIdField;
        
        private string invoiceNoField;
        
        private System.Nullable<System.DateTime> invoiceDtField;
        
        private string debtIdField;
        
        private string debtTypeField;
        
        private string caTaxIdField;
        
        private string caTaxBranchField;
        
        private string taxCodeField;
        
        private System.Nullable<decimal> taxRateField;
        
        private System.Nullable<decimal> qtyField;
        
        private System.Nullable<decimal> amountExVatField;
        
        private System.Nullable<decimal> vatAmountField;
        
        private System.Nullable<decimal> gAmountField;
        
        private string notificationNoField;
        
        /// <remarks/>
        public string CaId {
            get {
                return this.caIdField;
            }
            set {
                this.caIdField = value;
            }
        }
        
        /// <remarks/>
        public string CaName {
            get {
                return this.caNameField;
            }
            set {
                this.caNameField = value;
            }
        }
        
        /// <remarks/>
        public string CaAddress {
            get {
                return this.caAddressField;
            }
            set {
                this.caAddressField = value;
            }
        }
        
        /// <remarks/>
        public string TechBranchId {
            get {
                return this.techBranchIdField;
            }
            set {
                this.techBranchIdField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceNo {
            get {
                return this.invoiceNoField;
            }
            set {
                this.invoiceNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InvoiceDt {
            get {
                return this.invoiceDtField;
            }
            set {
                this.invoiceDtField = value;
            }
        }
        
        /// <remarks/>
        public string DebtId {
            get {
                return this.debtIdField;
            }
            set {
                this.debtIdField = value;
            }
        }
        
        /// <remarks/>
        public string DebtType {
            get {
                return this.debtTypeField;
            }
            set {
                this.debtTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CaTaxId {
            get {
                return this.caTaxIdField;
            }
            set {
                this.caTaxIdField = value;
            }
        }
        
        /// <remarks/>
        public string CaTaxBranch {
            get {
                return this.caTaxBranchField;
            }
            set {
                this.caTaxBranchField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> AmountExVat {
            get {
                return this.amountExVatField;
            }
            set {
                this.amountExVatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> VatAmount {
            get {
                return this.vatAmountField;
            }
            set {
                this.vatAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> GAmount {
            get {
                return this.gAmountField;
            }
            set {
                this.gAmountField = value;
            }
        }
        
        /// <remarks/>
        public string NotificationNo {
            get {
                return this.notificationNoField;
            }
            set {
                this.notificationNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    public delegate void ConfirmServicePrefixCompletedEventHandler(object sender, ConfirmServicePrefixCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmServicePrefixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmServicePrefixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    public delegate void GetARByNotificationModelCompletedEventHandler(object sender, GetARByNotificationModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARByNotificationModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARByNotificationModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ARInfoModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ARInfoModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    public delegate void GetARByNotificationDataTableCompletedEventHandler(object sender, GetARByNotificationDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetARByNotificationDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetARByNotificationDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    public delegate void UpdatePaymentCompletedEventHandler(object sender, UpdatePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9136")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591