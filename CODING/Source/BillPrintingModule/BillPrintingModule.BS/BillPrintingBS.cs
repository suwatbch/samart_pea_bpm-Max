using System;
using System.Collections.Generic;
using System.Text;
using PEA.BPM.BillPrintingModule.Interface.BusinessEntities;
using PEA.BPM.BillPrintingModule.DA;
using PEA.BPM.Architecture.CommonUtilities;
using System.IO;
using System.Runtime.InteropServices;
using PEA.BPM.BillPrintingModule.Interface.Services;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;

//****************************************
// #ISSUE#BLAN2020 Discount 3% A4
// 2020-March-20
// ผลประโยชน์เงินประกัน X,Y,Z
//****************************************

//****************************************
// #ISSUE#BLAN2020 Discount 3% Agency 
// 2020-March-20
// ผลประโยชน์เงินประกัน X,Y,Z
//****************************************

//****************************************
// #ISSUE#BLAN2019
// 2019-November-13
// ผลประโยชน์เงินประกัน X,Y,Z
//****************************************

//****************************************
// #ISSUE สลับตำแหน่ง ข้อความของบิล A4
// 2019-FEB-28
//****************************************

//****************************************
// #ISSUE NEW FORM
// 2017-November-20
// + รวมcode production ver.1.9.8 build 3
//****************************************

//-----------------------------------------
//แก้ไข Bill ภัยพิบัติ
//แก้ไข Bill เพิ่ม TaxId 13 หลัก
//แก้ไข Bill A4 ขยับตำแหน่ง Text7 + Text8 จาก 42,60 เป็น 16,80
//2017-02-02  สลับบาร์โค้ด 1 <--> 2 ของบิลตัวแทน  AdjustAgencyBillLayout, AdjustBlueBillLayout 
//-----------------------------------------

namespace PEA.BPM.BillPrintingModule.BS
{
    public class BillPrintingBS : IBillPrintingServices
    {
        //#ISSUE NEW FORM
        public int? ClientPickedPrinterCode = null;

        #region CheckExist

        #region For menu 5.1,5.2

        public List<PrintableId> CheckExistRecord(BillPrintingConditionParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            char[] charSeperator = new char[] { '-' };
            string[] tmpId = new string[3];

            try
            {
                foreach (string id in param.GroupElectricId)
                {
                    //adjust parameter for DA
                    if (param.BillPrintingCondition == (int)PrintingCondition.AllPrinting)
                        param.BranchId = null;
                    else if (param.BillPrintingCondition == (int)PrintingCondition.BranchPrinting)
                        param.BranchId = id;
                    else if (param.BillPrintingCondition == (int)PrintingCondition.MruPrinting)
                    {
                        //BranchdId-MruId-MruId
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[0] != null)
                            param.BranchId = tmpId[0];
                        if (tmpId[1] != null)
                            param.MruId = tmpId[1];
                        if (tmpId.Length == 3 && tmpId[2] != null)
                            param.ToMruId = tmpId[2];
                    }
                    else
                        param.UserId = id;

                    //select appropriate store-proc
                    if (param.BillType == (int)BillType.A4Bill)
                    {
                        if (!string.IsNullOrEmpty(param.UserId))
                        {
                            if (param.BillPrintingCondition == (int)PrintingCondition.UserPrinting)
                            {
                                string[] caFromTo = param.UserId.Split('-');
                                if (caFromTo.Length == 1)
                                    ptAll.AddRange(da.CheckPrintableA4CaId(param.CommBranchId, param.BillPeriod,
                                                                           caFromTo[0], null, param.A4Reprint));
                                else if (caFromTo.Length > 1)
                                    ptAll.AddRange(da.CheckPrintableA4CaId(param.CommBranchId, param.BillPeriod,
                                                                           caFromTo[0], caFromTo[1], param.A4Reprint));
                            }
                            else
                            {
                                string[] caFromTo = param.UserId.Split('-');
                                if (caFromTo.Length == 1)
                                    ptAll.AddRange(da.CheckPrintableA4BillSeq(param.CommBranchId, caFromTo[0], null));
                                else if (caFromTo.Length > 1)
                                    ptAll.AddRange(da.CheckPrintableA4BillSeq(param.CommBranchId, caFromTo[0],
                                                                              caFromTo[1]));
                            }
                        }
                        else
                        {
                            ptAll.AddRange(da.CheckPrintableA4Mass(param));
                        }
                    }
                    else if (param.BillType == (int)BillType.BlueBill)
                    {
                        if (!string.IsNullOrEmpty(param.UserId))
                            ptAll.AddRange(da.CheckPrintableBlueCaId(param));
                        else
                            ptAll.AddRange(da.CheckPrintableBlueMass(param));
                    }
                    else if (param.BillType == (int)BillType.GreenBill)
                    {
                        if (!string.IsNullOrEmpty(param.UserId))
                            ptAll.AddRange(da.CheckPrintableGreenCaId(param));
                        else
                            ptAll.AddRange(da.CheckPrintableGreenMass(param));
                    }
                    else if (param.BillType == (int)BillType.SpotBill)
                    {
                        if (!string.IsNullOrEmpty(param.UserId))
                            ptAll.AddRange(da.CheckPrintableSpotBillCaId(param));
                        else
                            ptAll.AddRange(da.CheckPrintableSpotBillMass(param));
                    }
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ptAll;
        }

        #endregion

        #region For menu 5.3

        public List<PrintableId> CheckExistReprintRecord(BillPrintingConditionParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            char[] charSeperator = new char[] { '-' };
            string[] tmpId = new string[3];

            try
            {
                if (param.BillPrintingCondition == (int)PrintingCondition.MruPrinting)
                {
                    foreach (string id in param.GroupElectricId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        param.BranchId = tmpId[0];
                        param.MruId = tmpId[1];
                        if (tmpId.Length == 3)
                            param.ToMruId = tmpId[2];

                        if (param.BillType == (int)BillType.ReprintBlueBill)
                            ptAll.AddRange(da.CheckRePrintableBlueMass(param));
                        else if (param.BillType == (int)BillType.ReprintGreenBill)
                            ptAll.AddRange(da.CheckRePrintableGreenMass(param));
                        else
                            ptAll.AddRange(da.CheckRePrintableSpotBillMass(param));
                    }
                }
                else if (param.BillPrintingCondition == (int)PrintingCondition.UserPrinting)
                {
                    foreach (string id in param.GroupFromToElectricId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[1] != null)
                            param.FromNumberId = tmpId[1];
                        if (tmpId[2] != null)
                            param.ToNumberId = tmpId[2];

                        if (param.BillType == (int)BillType.ReprintBlueBill)
                            ptAll.AddRange(da.CheckRePrintableBlueCaId(param));
                        else if (param.BillType == (int)BillType.ReprintGreenBill)
                            ptAll.AddRange(da.CheckRePrintableGreenCaId(param));
                        else
                            ptAll.AddRange(da.CheckRePrintableSpotBillCaId(param));
                    }
                }
                else if (param.BillPrintingCondition == (int)PrintingCondition.BillSeqPrinting)
                {
                    foreach (string id in param.GroupFromToNumberId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[1] != null)
                            param.FromNumberId = tmpId[1];
                        if (tmpId[2] != null)
                            param.ToNumberId = tmpId[2];

                        if (param.BillType == (int)BillType.ReprintBlueBill)
                            ptAll.AddRange(da.CheckRePrintableBlueCaId(param));
                        else if (param.BillType == (int)BillType.ReprintGreenBill)
                            ptAll.AddRange(da.CheckRePrintableGreenCaId(param));
                        else
                            ptAll.AddRange(da.CheckRePrintableSpotBillCaId(param));
                    }

                    ptAll.Sort(delegate(PrintableId p1, PrintableId p2) { return p1.CaId.CompareTo(p2.CaId); });
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return ptAll;
        }

        #endregion

        #region For menu 5.4,5.5

        public List<PrintableId> CheckExistGroupInvoiceRecord(GroupInvoiceParam param)
        {
            //string[] id = new string[5] { null, null, null, null, null };
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            try
            {
                foreach (string rId in param.Id)
                {
                    param.MtNo = rId;
                    ptAll.AddRange(da.CheckPrintableGrpInv(param));
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ptAll;
        }

        public List<PrintableId> CheckExistReprintGroupInvoiceRecord(GroupInvoiceParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            try
            {
                if (param.PrintingCondition == (int)PrintingCondition.UserPrinting)
                {
                    foreach (string rId in param.Id)
                    {
                        string[] sp = rId.Split('-');
                        param.FromCaId = sp[0];
                        param.ToCaId = sp[1];
                        ptAll.AddRange(da.CheckRePrintableGrpInvCaId(param));
                    }
                }
                else if (param.PrintingCondition == (int)PrintingCondition.MtNoPrinting)
                {
                    foreach (string rId in param.Id)
                    {
                        param.MtNo = rId;
                        ptAll.AddRange(da.CheckRePrintableGrpInvMtNo(param));
                    }
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ptAll;
        }

        #endregion

        #region For menu 5.6,5.7

        public List<PrintableIdByBank> CheckExistByBank(GreenBillParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableIdByBank> ret = null;

            if (param.BillType == (int)BillType.GreenBillByBank)
                ret = da.CheckPrintableGreenBank(param);
            else if (param.BillType == (int)BillType.BlueBillByBank)
                ret = da.CheckPrintableBlueBank(param);

            return ret;
        }

        public List<PrintableIdByBank> CheckExistReprintByBank(GreenBillReprintParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableIdByBank> ptAll = new List<PrintableIdByBank>();

            try
            {
                for (int i = 0; i < param.FromCaId.Length; i++)
                {
                    if (param.BillType == (int)BillType.ReprintGreenBillByBank)
                        ptAll.AddRange(da.CheckRePrintableGreenBank(param.BankId, param.BillType.Value, param.DueDate,
                                                                    param.FromCaId[i], param.ToCaId[i],
                                                                    param.CommBranchId, param.BillPeriod));
                    else
                        ptAll.AddRange(da.CheckRePrintableBlueBank(param.BankId, param.BillType.Value, param.DueDate,
                                                                   param.FromCaId[i], param.ToCaId[i],
                                                                   param.CommBranchId, param.BillPeriod));
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ptAll;
        }

        #endregion

        #region For menu 5.8,5.9

        public List<PrintableId> CheckExistGreenReceipt(BillPrintingConditionParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            char[] charSeperator = new char[] { '-' };
            string[] tmpId = new string[3];

            try
            {
                foreach (string id in param.GroupElectricId)
                {
                    //adjust parameter for DA
                    if (param.BillPrintingCondition == (int)PrintingCondition.AllPrinting)
                        param.BranchId = null;
                    else if (param.BillPrintingCondition == (int)PrintingCondition.BranchPrinting)
                        param.BranchId = id;
                    else if (param.BillPrintingCondition == (int)PrintingCondition.MruPrinting)
                    {
                        //BranchdId-MruId-MruId
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[0] != null)
                            param.BranchId = tmpId[0];
                        if (tmpId[1] != null)
                            param.MruId = tmpId[1];
                        if (tmpId.Length == 3 && tmpId[2] != null)
                            param.ToMruId = tmpId[2];
                    }
                    else if (param.BillPrintingCondition == (int)PrintingCondition.UserPrinting)
                        param.UserId = id;

                    if (!string.IsNullOrEmpty(param.UserId))
                        ptAll.AddRange(da.CheckPrintableGreenReceiptCaId(param));
                    else
                        ptAll.AddRange(da.CheckPrintableGreenReceiptMass(param));
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return ptAll;
        }

        public List<PrintableId> CheckExistReprintGreenReceipt(BillPrintingConditionParam param)
        {
            BillPrintingDA da = new BillPrintingDA();
            List<PrintableId> ptAll = new List<PrintableId>(); //store all records in one and return kub

            char[] charSeperator = new char[] { '-' };
            string[] tmpId = new string[3];

            try
            {
                if (param.BillPrintingCondition == (int)PrintingCondition.MruPrinting)
                {
                    foreach (string id in param.GroupElectricId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        param.BranchId = tmpId[0];
                        param.MruId = tmpId[1];
                        if (tmpId.Length == 3)
                            param.ToMruId = tmpId[2];

                        ptAll.AddRange(da.CheckRePrintableGreenReceiptMass(param));
                    }
                }
                else if (param.BillPrintingCondition == (int)PrintingCondition.UserPrinting)
                {
                    foreach (string id in param.GroupFromToElectricId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[1] != null)
                            param.FromNumberId = tmpId[1];
                        if (tmpId[2] != null)
                            param.ToNumberId = tmpId[2];

                        ptAll.AddRange(da.CheckRePrintableGreenReceiptCaId(param));
                    }
                }
                else if (param.BillPrintingCondition == (int)PrintingCondition.BillSeqPrinting)
                {
                    foreach (string id in param.GroupFromToNumberId)
                    {
                        tmpId = id.Split(charSeperator, StringSplitOptions.RemoveEmptyEntries);
                        if (tmpId[1] != null)
                            param.FromNumberId = tmpId[1];
                        if (tmpId[2] != null)
                            param.ToNumberId = tmpId[2];

                        ptAll.AddRange(da.CheckRePrintableGreenReceiptCaId(param));
                    }

                    ptAll.Sort(delegate(PrintableId p1, PrintableId p2) { return p1.CaId.CompareTo(p2.CaId); });
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            return ptAll;
        }

        #endregion

        #endregion

        #region Print

        #region For menu 5.1,5.2

        public List<Bills> PrintBlueBill(BillPrintingConditionParam param)
        {
            DateTime printedDt = DateTime.Now;
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        blueBill = da.PrintBlueMass(trans, param);
                    else
                        blueBill = da.PrintBlueCaId(trans, param);

                    //#ISSUE#BLAN2018
                    //ClientPickedPrinterCode = param.PrinterChoice;
                    //List<Bills> retBills = AdjustAgencyBillLayoutNewForm2018(blueBill); // บิลตัวแทน แบบใหม่

                    ////ISSUE#BLAN2019
                    //ClientPickedPrinterCode = param.PrinterChoice;
                    //List<Bills> retBills = AdjustAgencyBillLayoutNewForm2019(blueBill);  // บิลตัวแทน X,Y ผลประโยชน์เงินประกัน                    

                    // DCR 67-020 Not print barcode1,2
                    ClientPickedPrinterCode = param.PrinterChoice;
                    List<Bills> retBills = AdjustAgencyBillLayoutNewForm2024No2(blueBill);                



                    //List<Bills> retBills = AdjustAgencyBillLayout(blueBill);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> PrintSpotBill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        blueBill = da.PrintSpotBillMass(trans, param);
                    else
                        blueBill = da.PrintSpotBillCaId(trans, param);


                    ClientPickedPrinterCode = param.PrinterChoice;

                    // DCR 67-020 Not priont barcode
                    List<Bills> retBills = AdjustBlueBillLayoutNewForm2024(blueBill);   //Print Spot Bill 2019DEC02 10:58:00

                    ////ISSUE#BLAN2019
                    //List<Bills> retBills = AdjustBlueBillLayoutNewForm2019(blueBill);   //Print Spot Bill 2019DEC02 10:58:00

                    //ISSUE# NEW FORM 2018
                    //List<Bills> retBills = AdjustBlueBillLayoutNewForm2018(blueBill); //Print Spot Bill
                    //List<Bills> retBills = AdjustBlueBillLayout(blueBill);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> PrintGreenBill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        greenBill = da.PrintGreenMass(trans, param);
                    else
                        greenBill = da.PrintGreenCaId(trans, param);

                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, false);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> PrintA4Bill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<A4Bill> a4Bill;

                    if (string.IsNullOrEmpty(param.UserId))
                        a4Bill = da.PrintA4Mass(trans, param);
                    else
                    {
                        if (param.BillPrintingCondition == (int)PrintingCondition.UserPrinting)
                            a4Bill = da.PrintA4CaId(trans, param);
                        else
                            a4Bill = da.PrintA4BillSeq(trans, param);
                    }

                    List<Bills> retBills = AdjustA4BillLayout(a4Bill, param.ApproverName, param.ApproverPosition);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        #endregion

        #region For menu 5.3

        public List<Bills> ReprintBlueBill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        blueBill = da.ReprintBlueMass(trans, param);
                    else if (param.UserId.Length > 7)
                        blueBill = da.ReprintBlueCaId(trans, param);
                    else
                        blueBill = da.ReprintBlueBillSeqNo(trans, param);

                    //List<Bills> retBills = AdjustAgencyBillLayout(blueBill);
                    //#ISSUE NEW FORM
                    //ClientPickedPrinterCode = param.PrinterChoice;
                    //List<Bills> retBills = AdjustAgencyBillLayoutNewForm2019(blueBill);

                    // DCR 67-020
                    ClientPickedPrinterCode = param.PrinterChoice;
                    List<Bills> retBills = AdjustAgencyBillLayoutNewForm2019(blueBill);

                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintSpotBill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        blueBill = da.ReprintSpotBillMass(trans, param);
                    else if (param.UserId.Length > 7)
                        blueBill = da.ReprintSpotBillCaId(trans, param);
                    else
                        blueBill = da.ReprintSpotBillSeqNo(trans, param);

                    //List<Bills> retBills = AdjustBlueBillLayout(blueBill);
                    //#ISSUE NEW FORM
                    //ClientPickedPrinterCode = param.PrinterChoice;
                    //List<Bills> retBills = AdjustBlueBillLayoutNewForm2019(blueBill);  //Reprint Spot Bill

                    // DCR 67-020 Not print barcode1,2
                    ClientPickedPrinterCode = param.PrinterChoice;
                    List<Bills> retBills = AdjustBlueBillLayoutNewForm2024(blueBill);  

                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintGreenBill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        greenBill = da.ReprintGreenMass(trans, param);
                    else if (param.UserId.Length > 7)
                        greenBill = da.ReprintGreenCaId(trans, param);
                    else
                        greenBill = da.ReprintGreenBillSeqNo(trans, param);


                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, false);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        #endregion

        #region For menu 5.4,5.5

        public List<Bills> PrintGroupInvoiceA4Bill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<A4Bill> a4Bill = da.PrintGrpInv(trans, param);
                    List<Bills> retBills = AdjustA4BillLayout(a4Bill, param.ApproverName, param.ApproverPosition);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintGroupInvoiceA4Bill(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<A4Bill> a4Bill;

                    if (string.IsNullOrEmpty(param.UserId))
                        a4Bill = da.ReprintGrpInvMtNo(trans, param);
                    else
                        a4Bill = da.ReprintGrpInvCaId(trans, param);

                    List<Bills> retBills = AdjustA4BillLayout(a4Bill, param.ApproverName, param.ApproverPosition);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        #endregion

        #region For menu 5.6,5.7

        public List<Bills> PrintGreenBillByBank(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill = da.PrintGreenBank(trans, param);
                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, false);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> PrintBlueBillByBank(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill = da.PrintBlueBank(trans, param); //store bills data for layout design.
                    List<Bills> retBills = AdjustBlueBillLayout(blueBill);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintGreenBillByBank(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill = da.ReprintGreenBank(trans, param); //store bills data for layout design.
                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, false);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintBlueBillByBank(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<BlueBill> blueBill = da.ReprintBlueBank(trans, param); //store bills data for layout design.
                    List<Bills> retBills = AdjustBlueBillLayout(blueBill);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        #endregion

        #region For menu 5.8,5.9

        public List<Bills> PrintGreenReceipt(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        greenBill = da.PrintGreenReceiptMass(trans, param);
                    else
                        greenBill = da.PrintGreenReceiptCaId(trans, param);

                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, true);
                    trans.Commit();
                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        public List<Bills> ReprintGreenReceipt(BillPrintingConditionParam param)
        {
            DbTransaction trans;
            Database db = DatabaseFactory.CreateDatabase("POSDatabase");

            using (DbConnection conn = db.CreateConnection())
            {
                conn.Open();
                trans = conn.BeginTransaction();

                try
                {
                    BillPrintingDA da = new BillPrintingDA();
                    List<GreenBill> greenBill;

                    if (string.IsNullOrEmpty(param.UserId))
                        greenBill = da.ReprintGreenReceiptMass(trans, param);
                    else if (param.UserId.Length > 7)
                        greenBill = da.ReprintGreenReceiptCaId(trans, param);
                    else
                        greenBill = da.ReprintGreenReceiptBillSeqNo(trans, param);

                    List<Bills> retBills = AdjustGreenBillLayout(greenBill, true);
                    trans.Commit();

                    return retBills;
                }
                catch (Exception)
                {
                    trans.Rollback();
                    throw;
                }
            }
        }

        #endregion

        #endregion

        #region Function

        #region New Function for bill.

        private string Barcode1Mapping(string bCode)
        {
            if (bCode.Length > 0)
            {
                string ch = bCode.Substring(0, 1);
                int i = 1; //A=1,...,L=12
                for (int a = 65; a < 77; a++) // A-L
                {
                    if (((char)a).ToString() == ch)
                    {
                        break; // now,i've got i!
                    }

                    i++;
                }
                string tmp = i.ToString().PadLeft(3, '0') + bCode.Substring(1, bCode.Length - 1);
                return tmp;
            }
            else
                return "";
        }

        public static string SubStringTo12Character(string prm)
        {
            int limit = 12;
            int tmp = prm.Length;
            int subQty = 0;
            string result = prm;
            if (tmp > limit)
            {
                subQty = tmp - limit;
                result = prm.Substring(subQty, prm.Length - subQty);
            }
            return result.Trim();
        }

        public static string SubStringTo10Character(string prm)
        {
            int limit = 10;
            int tmp = prm.Length;
            int subQty = 0;
            string result = prm;
            if (tmp > limit)
            {
                subQty = tmp - limit;
                result = prm.Substring(subQty, prm.Length - subQty);
            }
            return result;
        }

        public static string StringFormatIgnoredSpace(string input, int len)
        {
            //ใช้ Function นี้เพราะไม่ต้องการให้กระทบกับ Client ที่ส่งไปเทสตามที่ ต่าง ๆ 
            // สระที่ไม่นับ ก่ก้ก๊ก๋ก็ก์กิกีกึกืกุกูกั
            char[] noCountChar = new char[] { (char)3656, (char)3657, (char)3658, (char)3659, (char)3655, (char)3660, 
                (char)3636, (char)3637, (char)3638, (char)3639, (char)3640, (char)3641, (char)3633 };
            if (input.Length > len)
            {
                try
                {
                    string txt = input;

                    for (int i = 0; i < noCountChar.Length; i++)
                        txt = txt.Replace(noCountChar[i].ToString(), "");

                    int diff = input.Length - txt.Length;
                    string tmp = input.Substring(0, (len - 1) + diff);
                    int tmpIndex = tmp.LastIndexOf(' ');

                    StringBuilder sb = new StringBuilder();
                    //sb.Append(input.Substring(0, len));
                    sb.Append(tmp);
                    sb.Append("\r\n");
                    sb.Append(input.Substring(tmpIndex, input.Length - tmpIndex));
                    sb.Append("\r\n");
                    return sb.ToString();
                }
                catch
                {
                    return input;
                }
            }
            else
            {
                return input;
            }
        }

        static string GetFirstLineOfString(string text)
        {
            using (var reader = new StringReader(text))
            {
                return reader.ReadLine();
            }
        }

        public static string FormatTextForAddressTrimSpace(string input, int len)
        {
            //Added 2018-01-22 13:20 for fix new
            // สระที่ไม่นับ ก่ก้ก๊ก๋ก็ก์กิกีกึกืกุกูกั
            char[] noCountChar = new char[] { (char)3656, (char)3657, (char)3658, (char)3659, (char)3655, (char)3660, 
                (char)3636, (char)3637, (char)3638, (char)3639, (char)3640, (char)3641, (char)3633 };
            if (input.Length > len)
            {
                try
                {
                    string txt = input;

                    for (int i = 0; i < noCountChar.Length; i++)
                        txt = txt.Replace(noCountChar[i].ToString(), "");

                    int diff = input.Length - txt.Length;
                    string tmp = input.Substring(0, (len - 1) + diff);
                    int tmpIndex = tmp.LastIndexOf(' ');

                    StringBuilder sb = new StringBuilder();
                    sb.Append(input.Substring(0, tmpIndex));
                    sb.Append("\r\n");
                    sb.Append(input.Substring(tmpIndex, input.Length - tmpIndex).Trim());
                    sb.Append("\r\n");
                    return sb.ToString();
                }
                catch
                {
                    return input;
                }
            }
            else
                return input;
        }

        public string GenStar(int qty)
        {
            var result = new StringBuilder();
            var symbol = "*";
            for (int i = 0; i < qty; i++)
            {
                result.Append(symbol);
            }
            return result.ToString();
        }

        public string GetFixFromRight(string fixStr)
        {
            string str = fixStr;
            int len = 0;
            len = str.Length;
            string result = "";
            if (len > 3)
            {
                result = str.Substring(str.Length - 3, 3);
                if (result.ToUpper() == "FIX")
                {
                    int tmpLen = str.Length - 3;
                    result = str.Substring(0, tmpLen);
                }
                else
                {
                    result = str.ToString();
                }
            }
            else
            {
                result = str.ToString();
            }
            return result;
        }

        #endregion

        #region #ISSUE#BLAN2019 #AddOn 2024 DCR 67-020

        private string HideBillPeriodCaseTypeY(string PRINTDOC_TYPE, string _BillPeriod)
        {
            string RESULT = "";
            if (PRINTDOC_TYPE == "Y")
            {
                RESULT = "";
            }
            else
            {
                RESULT = _BillPeriod;
            }
            return RESULT;
        }

        private string CreateReceiptNoBLAN2019(string invoiceno, string w_2340)
        {
            string ReceiptNo = null;
            if (String.IsNullOrEmpty(w_2340) || w_2340.Length == 0 || w_2340 == "")
            {
                ReceiptNo = " " + invoiceno;
            }
            else
            {
                ReceiptNo = " " + w_2340;
            }
            return ReceiptNo;
        }
        private bool Convert35ToDouble(string Z2200_GTOTAL_AMN)
        {
            double result = 0.0;
            try
            {
                if (String.IsNullOrEmpty(Z2200_GTOTAL_AMN))
                {
                    Z2200_GTOTAL_AMN = "0.0";
                }
                result = Convert.ToDouble(Z2200_GTOTAL_AMN);
            }
            catch
            {
                result = 0.0;
            }

            if (result > 0.0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }

        private bool ConfirmDiscount3Percent(string period, string other1, string other2)
        {
            bool isPerdiod = false;
            bool isOther1  = false;
            bool isOther2  = false;
            bool Result    = false;

            string[] periods = { "04/2563", "05/2563", "06/2563" };

            //Condition 1 target period must in these periods.
            foreach (string p in periods)
            {
                if (p == period)
                {
                    isPerdiod = true;
                }
            }

            //Condition 2 field [28] must be null or empty.
            if (!String.IsNullOrEmpty(other1) || other1 != "")
            {
                isOther1 = true;
            }

            //Condition 3 field [31] must be null or empty.
            if (!String.IsNullOrEmpty(other2) || other2 != "")
            {
                isOther2 = true;
            }

            if (isPerdiod == true && isOther1 == true && isOther2 == true)
            {
                Result = true;
            }

            return Result;
        }

        private List<Bills> AdjustAgencyBillLayoutNewForm2019(List<BlueBill> _blueBill)
        {
            //Bill ตัวแทน
            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 

                string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

                //*********************************** TOP บิลตัวแทน  AGENCY************************************
                const int costLength = 14;
                const int pos17_18_21_22_25 = 75;
                int StarAppend = 12;

                //#ISSUE Discount3% 2020-04-03
                //bb.W_130_period       -->[15]
                //bb.W_2370_oth_dis4    -->[28]
                //bb.W_2400_oth_dis7    -->[31]

                bool isDiscount3Percent = false;
                isDiscount3Percent = ConfirmDiscount3Percent(bb.W_130_period, bb.W_2370_oth_dis4, bb.W_2400_oth_dis7);
                if (isDiscount3Percent == true)
                {
                    //bb.W_1480_net_before_vat_txt    = "";      //-->[22]
                    //bb.W_1490_tax_rate_txt          = "";      //-->[23]
                    //bb.W_1500_tax_amount_txt        = "";      //-->[24]
                    //bb.W_1510_total_amnt_txt        = "";      //-->[25]
                }
                //#END ISSUE Discount3% 

                #region ส่วนของใบเสร็จรับเงินค่าไฟฟ้า/ใบกำกับภาษี

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region PRINT DOC X,Y

                    if (PRINTDOC_TYPE == "Y")
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }


                    //REMOVE X FROM RECEIPT NO
                    //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
                    string NewReceipt = bb.W_2340_rec_doc;

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                        //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
                                                                            blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]

                    //ISSUE#BLAN2019 [107]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
                                                            blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]

                    //ISSUE#BLAN2019 [108]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                               StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
                                                                     blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

                    int TotalPadding = 13;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");

                    #endregion
                }
                else
                {
                    #region ORIGINAL PRINT DOC

                    //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
                    if (((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == "")) || (Convert35ToDouble(bb.W_2200_gtot_amn.Trim()) == true))
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }



                    //Old receipt number
                    //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));      //--[1]

                    //New Receipt number BLAN2019
                    //string NewReceiptDCR2019 = bb.W_2340_rec_doc;
                    string NewReceiptDCR2019 = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptDCR2019.PadLeft(p80 + 14, ' ')); //[1]

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel);  //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2));   //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid));  //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                            //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                      //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]--16
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]--8
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                                                                            blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),                //[15]
                        //blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_490_consumption_txt)) + blank.PadLeft(5, ' '),//[16] W_490_consumption_txt get data from w_1390_ftunit_txt from ts.BillDetail
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    //const int costLength = 14;
                    //const int pos17_18_21_22_25 = 75;
                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]

                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

                    sb.Append("\r\n");

                    // sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]
                    // ISSUE#BLAN2019 [107]
                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                                   StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                                   StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' '))); //[22]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                                   StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                                   StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
                    }

                    sb.Append("\r\n");



                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight("", 2),                                                         //[23]
                                                                blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));       //[24]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),                                                         //[23]
                                                                blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
                    }
                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    //ISSUE#BLAN2019 [108]
                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                                   StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                                   StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));                        //[25]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                                   StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                                   StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    }

                    sb.Append("\r\n");



                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]
                    //sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                            //[33]

                    //U R IN TOP ORIGINAL PRINTDOC

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
                                                                     blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51
                        //blank.PadLeft(20, ' ') + bb.W_2370_oth_dis4.PadLeft(25, ' '),                //[28] LAST EDIT: 2019DEC02 09:51
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]  LAST EDIT: 2019DEC02 09:51 
                        //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(53, ' ') + bb.W_2400_oth_dis7.PadLeft(25, ' ')              //[31]  LAST EDIT: 2019NOV28 16:08                                                                                                                  
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]


                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                    //int StarAppend = 12;
                    int TotalPadding = 13;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");



                    #endregion
                }

                #endregion

                #region ส่วนของใบแจ้งค่าไฟฟ้า
                //*********************************** BOTTOM บิลตัวแทน AGENCY*********************************
                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region #BOTTOM BLUE BILL X,Y

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            GenStar(16)));              //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    string EMPTY_STRING = "";
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
                    sb.Append("\r\n");

                    string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
                                                                   , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
                                                    , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
                                                        , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
                                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
                                                    , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
                                                    , StringConvert.PadLeft(EMPTY_STRING, costLength)                       //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6

                    string EMPTY_STRING_INSTEAD_BARCODE2 = "";
                    string EMPTY_STRING_INSTEAD_BARCODE3 = "";

                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(75, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

                            }

                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
                    }

                    #endregion

                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

                    sb.Append("\r\n");

                    string EMPTY_STRING_INSTEAD_BARCODE1 = "";

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN AGENCY************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }

                    //BLAN2019
                    //2020-JAN-03 FIX TALLY GENICOM CASE X,Y NEED TO ADD 1 LINE Uthen.P
                    if (ClientPickedPrinterCode == 4) // GENICOM
                    {
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 2)
                    {
                        sb.Append("\r\n");
                    }

                    #endregion
                }
                else
                {
                    #region #BOTTOM PAGE AGENCY BILL
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            bb.W_10_invoice_no.PadLeft(16, ' ')));         //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                            bb.W_40_sname + " " + bb.W_2130_off_tel));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                          , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                          , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                //[49]
                    sb.Append("\r\n");
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                     //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                           //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)                          //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                 //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)       //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10) //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                         //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                              //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                                      //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)  //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                  //[70]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)      //[71]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                 //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                        //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)                                    //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                                                         //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)     //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                        , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                        , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";




                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                    , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                    , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6
                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(75, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", barcode2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

                            }



                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                        }
                        else
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                        }

                    }
                    else
                    {
                        if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'));
                        }
                        else
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                        }

                    }

                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                    sb.Append("\r\n");

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", barcode1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN AGENCY************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }

                    sb.Append("\r\n");

                    #endregion
                }
                #endregion

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        private List<Bills> AdjustBlueBillLayoutNewForm2019(List<BlueBill> _blueBill)
        {
            //SPOT BILL วางไม่ได้

            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 

                string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

                //*********************************** TOP PAGE SPOT BILL****************************************
                int pos17_18_21_22_25XY = 75;
                int costLengthXY = 14;
                int StarAppendXY = 12;

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region PRINT DOC X,Y MIRROR FROM AGENCY

                    if (PRINTDOC_TYPE == "Y")
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }


                    //REMOVE X FROM RECEIPT NO
                    //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
                    string NewReceipt = bb.W_2340_rec_doc;

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                        //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
                                                                            blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLengthXY, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLengthXY, ' ')));    //[18]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));    //[20]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]

                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' ')));//[22]

                    //ISSUE#BLAN2019 [107]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' '))); //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
                                                            blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLengthXY, ' ')));     //[24]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]

                    //ISSUE#BLAN2019 [108]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                               StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLengthXY, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]                                                                     
                                                                     blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),         //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLengthXY, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimitXY = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

                    int TotalPaddingXY = 13;
                    if (totalStarLimitXY >= 12)
                    {
                        StarAppendXY = costLengthXY;
                        TotalPaddingXY = 11;
                    }
                    else
                    {
                        StarAppendXY = 12;
                        TotalPaddingXY = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppendXY, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");
                    //Uthen Fix BillFlag = 'Y'
                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
                    }

                    #endregion
                }
                else
                {
                    #region #SPOT BILL TOP PAGE

                    //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))

                    if (true)
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            if (ClientPickedPrinterCode == 1) // Fujitsu
                            {
                                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                                sb.Append("\r\n");
                                sb.AppendFormat("." + String.Format("{0}                                                                              {1}", " ", "     /////////"));
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                                sb.Append("\r\n");
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }

                    //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));//--[1]

                    //string NewReceiptSpotbill = bb.W_2340_rec_doc;
                    string NewReceiptSpotbill = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptSpotbill.PadLeft(p80 + 14, ' ')); //[1]

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(37, ' '), bb.W_150_contract.PadLeft(54, ' ')));       //[2][3]
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat(GenStar(32).PadLeft(48, ' '));    //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));   //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + GenStar(13).PadLeft(17, ' '), blank.PadLeft(13, ' ') + GenStar(12)));  //[6][7]
                    sb.Append("\r\n");


                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));  //[9]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int st = 11;   //Use for GenStar function
                    const int pos17_18_21_22_25 = 77;
                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                                            //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[18]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(63, ' ') + StringConvert.PadRight(GenStar(7).PadLeft(7, ' '), 7),     //[19]
                                                            blank.PadLeft(7, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[20]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[21]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(69, ' ') + StringConvert.PadRight(GenStar(2).PadLeft(4, ' '), 4),     //[23]
                                                            blank.PadLeft(4, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[24]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[25]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),           //[26]
                                                                     blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),              //[27]
                                                                     blank.PadLeft(31, ' ') + blank.PadRight(18, ' '),      //[28]
                                                                     blank.PadLeft(12, ' '),                                //[29]
                                                                     blank.PadLeft(1, ' ') + blank));                       //[30]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + blank,          //[31]
                                                               blank.PadLeft(12, ' '),                  //[32]
                                                               blank.PadLeft(1, ' ') + blank));         //[33]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(blank.PadLeft(47, ' '), 47),    //[34]
                                                            blank.PadLeft(14, ' ') + GenStar(st).PadLeft(12, ' ')));                        //[35]
                    sb.Append("\r\n");

                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
                    }
                    sb.Append("\r\n");       //ตัดบรรทัดนี้มาจากส่วน bottom
                    #endregion
                }

                //*********************************** BOTTOM PAGE SPOT BILL ************************************

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region #SPOT BILL X,Y

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            GenStar(16)));              //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    string EMPTY_STRING = "";
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
                    sb.Append("\r\n");

                    string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
                                                                   , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
                                                    , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
                                                        , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
                                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
                                                    , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
                                                    , StringConvert.PadLeft(EMPTY_STRING, costLengthXY)                       //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6

                    string EMPTY_STRING_INSTEAD_BARCODE2 = "";
                    string EMPTY_STRING_INSTEAD_BARCODE3 = "";

                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(75, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

                            }

                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppendXY == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
                    }

                    #endregion

                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

                    sb.Append("\r\n");

                    string EMPTY_STRING_INSTEAD_BARCODE1 = "";

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN SPOTBILL************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-JAN-03 FIX GENICOM LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 4)
                    {
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 2)
                    {
                        sb.Append("\r\n");
                    }

                    #endregion
                }
                else
                {
                    #region #SPOT BILL BOTTOM PAGE
                    const int costLength = 14;
                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                    int StarAppend = 12;
                    int TotalPadding = 0;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            bb.W_10_invoice_no.PadLeft(16, ' ')));          //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                            bb.W_40_sname + " " + bb.W_2130_off_tel));      //[37]
                    sb.Append("\r\n");


                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455

                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }
                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }

                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                          , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                          , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                                    //[49]
                    sb.Append("\r\n");
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                                                     //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                                         //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                      //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)        //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                                                     //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)                                           //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10)  //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                       //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                                                      //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                                        //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                        //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)    //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                          //[70]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)              //[71]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                                                //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)    //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                         //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)    //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));   //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                        , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                        , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                    sb.Append("\r\n");

                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";


                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                           , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                           , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]
                    sb.Append("\r\n");

                    #region Barcode 2 and Barcode 3 alignment lastest edit on 2017-12-28 10:25
                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION แก้ไขเท่ากับ Agency

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(75, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", barcode2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

                            }
                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                    }

                    #endregion


                    sb.Append("\r\n");

                    sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                    sb.Append("\r\n");

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {

                        sb.AppendFormat("{0}", barcode1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    ///***************SPOT BILL***************************************************
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                        sb.Append("\r\n");
                    }


                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                    {
                        sb.Append("\r\n");       //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }


                    sb.Append("\r\n");

                    #endregion
                }
                //*********************************** FOOT PAGE SPOT BILL ************************************
                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        #region BKAdjustBlueBillLayoutNewForm2024
                //private List<Bills> AdjustBlueBillLayoutNewForm2024(List<BlueBill> _blueBill)
        //{
        //    //SPOT BILL วางไม่ได้

        //    List<Bills> _bills = new List<Bills>();

        //    foreach (BlueBill bb in _blueBill)
        //    {
        //        string resultTxt;
        //        string blank = " ";
        //        string star = "*";
        //        string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
        //        //field totalWidth in Pad property = column width in real receipt.

        //        const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
        //        const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

        //        StringBuilder sb = new StringBuilder();
        //        //***Remark \r\n = CR&LF 

        //        string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

        //        //*********************************** TOP PAGE SPOT BILL****************************************
        //        int pos17_18_21_22_25XY = 75;
        //        int costLengthXY = 14;
        //        int StarAppendXY = 12;

        //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
        //        {
        //            #region PRINT DOC X,Y MIRROR FROM AGENCY

        //            if (PRINTDOC_TYPE == "Y")
        //            {
        //                if (ClientPickedPrinterCode == 1) // Fujitsu
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else
        //            {
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }


        //            //REMOVE X FROM RECEIPT NO
        //            //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
        //            string NewReceipt = bb.W_2340_rec_doc;

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            const int pos2_4 = p30 + 2;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
        //            sb.Append("\r\n");

        //            const int pos5_6_8_9 = p10;

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
        //            sb.Append("\r\n");

        //            #region 200180108_1412 fix address exceed 86

        //            StringBuilder sbdTop = new StringBuilder();
        //            sbdTop.Append(bb.W_216_address);
        //            if (!String.IsNullOrEmpty(bb.W_217_address))
        //            {
        //                sbdTop.Append(" ");
        //            }
        //            sbdTop.Append(bb.W_217_address);
        //            if (!String.IsNullOrEmpty(bb.W_218_address))
        //            {
        //                sbdTop.Append(" ");
        //            }
        //            sbdTop.Append(bb.W_218_address);
        //            int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
        //            string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
        //            tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
        //            if (addressTopLength > 86)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
        //            }
        //            //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
        //            sb.Append("\r\n");
        //            #endregion

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
        //                                                                    blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
        //                                                                    blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
        //                                                                    blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
        //                                                                    blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
        //                //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
        //                                                                    blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
        //                                                                    blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
        //                                                                    blank.PadLeft(1, ' ')));



        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLengthXY, ' ')));        //[17]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLengthXY, ' ')));    //[18]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
        //            //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));                      //[20]
        //            //ISSUE#BLAN2019 [105] 
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
        //                                                          StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
        //                                                          StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
        //                                                          blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));    //[20]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]

        //            //ISSUE#BLAN2019 [106]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
        //                                                       StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' ')));//[22]

        //            //ISSUE#BLAN2019 [107]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
        //                                                       StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' '))); //[22]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
        //                                                    blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLengthXY, ' ')));     //[24]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]

        //            //ISSUE#BLAN2019 [108]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
        //                                                       StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
        //            //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
        //            //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
        //            //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLengthXY, ' '),    //[29]
        //            //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

        //            //ISSUE#BLAN2019 EDIT [28][29][30]
        //            //ISSUE#BLAN2019 EDIT [28][29][30]
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]                                                                     
        //                                                             blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),         //[27]
        //                                                             blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
        //                                                             StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLengthXY, ' '), //[29]
        //                                                             blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
        //            //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
        //            //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

        //            //ISSUE#BLAN2019 EDIT [31][32][33]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
        //                                                     , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
        //                                                     , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
        //            sb.Append("\r\n");

        //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
        //            {
        //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
        //            }
        //            int totalStarLimitXY = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

        //            int TotalPaddingXY = 13;
        //            if (totalStarLimitXY >= 12)
        //            {
        //                StarAppendXY = costLengthXY;
        //                TotalPaddingXY = 11;
        //            }
        //            else
        //            {
        //                StarAppendXY = 12;
        //                TotalPaddingXY = 14;
        //            }

        //            #region Fix 2200 Grand Amount is null 2018Jan10
        //            if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

        //            }
        //            else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                 blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 
        //            }
        //            else
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                 blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

        //                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
        //                //                                       blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppendXY, '*')));  //[35]

        //            }

        //            #endregion

        //            sb.Append("\r\n");
        //            //Uthen Fix BillFlag = 'Y'
        //            if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
        //            }

        //            #endregion
        //        }
        //        else
        //        {
        //            #region #SPOT BILL TOP PAGE

        //            //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))

        //            if (true)
        //            {
        //                if (ClientPickedPrinterCode == 1) // Fujitsu
        //                {
        //                    if (ClientPickedPrinterCode == 1) // Fujitsu
        //                    {
        //                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                        sb.Append("\r\n");
        //                        sb.AppendFormat("." + String.Format("{0}                                                                              {1}", " ", "     /////////"));
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                        sb.Append("\r\n");
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else
        //            {
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }

        //            //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));//--[1]

        //            //string NewReceiptSpotbill = bb.W_2340_rec_doc;
        //            string NewReceiptSpotbill = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptSpotbill.PadLeft(p80 + 14, ' ')); //[1]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            const int pos2_4 = p30 + 2;
        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(37, ' '), bb.W_150_contract.PadLeft(54, ' ')));       //[2][3]
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(GenStar(32).PadLeft(48, ' '));    //[4]
        //            sb.Append("\r\n");

        //            const int pos5_6_8_9 = p10;

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));   //[5]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + GenStar(13).PadLeft(17, ' '), blank.PadLeft(13, ' ') + GenStar(12)));  //[6][7]
        //            sb.Append("\r\n");


        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));  //[9]
        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int st = 11;   //Use for GenStar function
        //            const int pos17_18_21_22_25 = 77;
        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                                            //[17]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[18]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(63, ' ') + StringConvert.PadRight(GenStar(7).PadLeft(7, ' '), 7),     //[19]
        //                                                    blank.PadLeft(7, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[20]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[21]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[22]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(69, ' ') + StringConvert.PadRight(GenStar(2).PadLeft(4, ' '), 4),     //[23]
        //                                                    blank.PadLeft(4, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[24]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[25]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),           //[26]
        //                                                             blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),              //[27]
        //                                                             blank.PadLeft(31, ' ') + blank.PadRight(18, ' '),      //[28]
        //                                                             blank.PadLeft(12, ' '),                                //[29]
        //                                                             blank.PadLeft(1, ' ') + blank));                       //[30]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + blank,          //[31]
        //                                                       blank.PadLeft(12, ' '),                  //[32]
        //                                                       blank.PadLeft(1, ' ') + blank));         //[33]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(blank.PadLeft(47, ' '), 47),    //[34]
        //                                                    blank.PadLeft(14, ' ') + GenStar(st).PadLeft(12, ' ')));                        //[35]
        //            sb.Append("\r\n");

        //            if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
        //            }
        //            sb.Append("\r\n");       //ตัดบรรทัดนี้มาจากส่วน bottom
        //            #endregion
        //        }

        //        //*********************************** BOTTOM PAGE SPOT BILL ************************************

        //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
        //        {
        //            #region #SPOT BILL X,Y

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
        //                                                    GenStar(16)));              //[36]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
        //            sb.Append("\r\n");

        //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455
        //            string tmpCustomerName = null;
        //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
        //            {//cust name 1 มีค่า                     
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = bb.W_90_cust_name1;
        //                }
        //            }
        //            else
        //            {//cust name 1 ไม่มี
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = "";
        //                }
        //            }
        //            int custLength = 0;
        //            custLength = StringConvert.TextLength(tmpCustomerName);
        //            if (custLength > 44)
        //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
        //                try
        //                {
        //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
        //                }
        //                catch
        //                {
        //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
        //                }
        //            }

        //            if (ClientPickedPrinterCode == 0)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
        //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
        //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
        //            }
        //            sb.Append("\r\n");
        //            #endregion

        //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

        //            StringBuilder sbdAddress = new StringBuilder();
        //            sbdAddress.Append(bb.W_221_address);  //1
        //            if (!String.IsNullOrEmpty(bb.W_222_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_222_address);  //2
        //            if (!String.IsNullOrEmpty(bb.W_223_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_223_address);  //3
        //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_230_post_code); //4   

        //            int addressLength = 0;
        //            string tmpAddress = null;
        //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
        //            if (addressLength > 54)
        //            {
        //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
        //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
        //                if (!String.IsNullOrEmpty(tmpResult[0]))
        //                {//ใส่ข้อมูลแถวที่หนึ่ง
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
        //                    sb.Append("\r\n");
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //            }
        //            else
        //            {
        //                tmpAddress = sbdAddress.ToString();
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }
        //            #endregion

        //            sb.Append("\r\n");

        //            string EMPTY_STRING = "";
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
        //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
        //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int pos_53_58_63_67 = 2;
        //            const int pos_52_57_62_66 = 1;
        //            const int pos_56_61_65 = 0;
        //            const int pos_68_69_72_73_76 = 16;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
        //            sb.Append("\r\n");

        //            string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
        //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
        //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
        //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
        //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
        //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
        //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
        //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
        //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
        //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
        //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
        //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
        //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
        //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
        //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
        //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
        //                                                           , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
        //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
        //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
        //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
        //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
        //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
        //                                            , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
        //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
        //                                                , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
        //            sb.Append("\r\n");


        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
        //                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

        //            sb.Append("\r\n");



        //            string barcode1 = string.Empty;
        //            // DCR 67-020
        //            //barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";  
        //            barcode1 = "BLAN_Barcode_1_Start" + bb.W_150_contract + "BLAN_Barcode_1_Stop";  
        //            string barcode2 = string.Empty;
        //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
        //            string barcode3 = string.Empty;
        //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
        //                                            , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
        //                                            , StringConvert.PadLeft(EMPTY_STRING, costLengthXY)                       //[78]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

        //            sb.Append("\r\n");

        //            #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
        //            //"LaserMatrix",    0
        //            //"Fujitsu",        1
        //            //"Printronix",     2
        //            //"Data Product",   3
        //            //"Genicom",        4
        //            //"Tally",          5
        //            //"Pentax",         6

        //            string EMPTY_STRING_INSTEAD_BARCODE2 = "";
        //            string EMPTY_STRING_INSTEAD_BARCODE3 = "";

        //            switch (ClientPickedPrinterCode)
        //            {
        //                case 0:
        //                    #region LaserMatrix BARCODE 2 CONDITION

        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(75, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 1:
        //                    #region Fujitsu
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 2:
        //                    #region Printronix last edit 2017-12-28 10:22
        //                    //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' '));
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

        //                    }

        //                    #endregion
        //                    break;
        //                case 3:
        //                    #region Data Product BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 4:
        //                    #region Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 5:
        //                    #region Tally BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 6:
        //                    #region Pentax BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                default:
        //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //            }
        //            sb.Append("\r\n");     //After check print condition


        //            int tmpLenght = 61;
        //            if (StarAppendXY == 12)
        //            {
        //                tmpLenght += 2;
        //            }
        //            //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
        //            //                        , barcode3);  //barcode3 //tmpCaId 
        //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
        //            }

        //            #endregion

        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

        //            sb.Append("\r\n");

        //            string EMPTY_STRING_INSTEAD_BARCODE1 = "";

        //            if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
        //            {
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
        //                sb.Append("\r\n");
        //            }
        //            //*********************************** U R IN SPOTBILL************************************               
        //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
        //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
        //                sb.Append("\r\n");
        //            }

        //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
        //            {
        //                sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
        //            }

        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
        //                }
        //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
        //                sb.Append("\r\n");
        //            }

        //            //#BLAN2019
        //            //#ISSUE SPOTBILL 2020-JAN-03 FIX GENICOM LOST 1 LINE  Uthen.P 
        //            if (ClientPickedPrinterCode == 4)
        //            {
        //                sb.Append("\r\n");
        //            }

        //            //#BLAN2019
        //            //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
        //            if (ClientPickedPrinterCode == 2)
        //            {
        //                sb.Append("\r\n");
        //            }

        //            #endregion
        //        }
        //        else
        //        {
        //            #region #SPOT BILL BOTTOM PAGE
        //            const int costLength = 14;
        //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
        //            {
        //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
        //            }
        //            int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
        //            int StarAppend = 12;
        //            int TotalPadding = 0;
        //            if (totalStarLimit >= 12)
        //            {
        //                StarAppend = costLength;
        //                TotalPadding = 11;
        //            }
        //            else
        //            {
        //                StarAppend = 12;
        //                TotalPadding = 14;
        //            }

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
        //                                                    bb.W_10_invoice_no.PadLeft(16, ' ')));          //[36]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
        //                                                    bb.W_40_sname + " " + bb.W_2130_off_tel));      //[37]
        //            sb.Append("\r\n");


        //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455

        //            string tmpCustomerName = null;
        //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
        //            {//cust name 1 มีค่า                     
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = bb.W_90_cust_name1;
        //                }
        //            }
        //            else
        //            {//cust name 1 ไม่มี
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = "";
        //                }
        //            }
        //            int custLength = 0;
        //            custLength = StringConvert.TextLength(tmpCustomerName);
        //            if (custLength > 44)
        //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
        //                try
        //                {
        //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
        //                }
        //                catch
        //                {
        //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
        //                }
        //            }
        //            if (ClientPickedPrinterCode == 0)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
        //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
        //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
        //            }

        //            sb.Append("\r\n");
        //            #endregion

        //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

        //            StringBuilder sbdAddress = new StringBuilder();
        //            sbdAddress.Append(bb.W_221_address);  //1
        //            if (!String.IsNullOrEmpty(bb.W_222_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_222_address);  //2
        //            if (!String.IsNullOrEmpty(bb.W_223_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_223_address);  //3
        //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_230_post_code); //4   

        //            int addressLength = 0;
        //            string tmpAddress = null;
        //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
        //            if (addressLength > 54)
        //            {
        //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
        //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
        //                if (!String.IsNullOrEmpty(tmpResult[0]))
        //                {//ใส่ข้อมูลแถวที่หนึ่ง
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
        //                    sb.Append("\r\n");
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //            }
        //            else
        //            {
        //                tmpAddress = sbdAddress.ToString();
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }
        //            #endregion

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
        //                                                                  , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
        //                                                                  , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int pos_53_58_63_67 = 2;
        //            const int pos_52_57_62_66 = 1;
        //            const int pos_56_61_65 = 0;
        //            const int pos_68_69_72_73_76 = 16;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                                    //[49]
        //            sb.Append("\r\n");
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                                                     //[50]
        //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                                         //[BLANK]
        //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                      //[51]
        //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)        //[52]
        //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
        //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                                                     //[54]
        //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)                                           //[55]
        //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10)  //[56]   
        //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                       //[57]
        //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
        //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                                                      //[59]
        //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                                        //[60]
        //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
        //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                        //[62]
        //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)    //[63]
        //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                          //[70]
        //                                                           , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)              //[71]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                         //[91]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));                      //[97]  
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
        //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                                                //[64]
        //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)    //[65]
        //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                         //[66]
        //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)    //[67]
        //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));   //[98]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
        //                                            , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
        //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
        //                                                , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
        //            sb.Append("\r\n");


        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
        //                                                , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

        //            sb.Append("\r\n");

        //            string barcode1 = string.Empty;
        //            // DCR 67-020
        //            //barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
        //            barcode1 = "BLAN_Barcode_1_Start" + bb.W_150_contract + "BLAN_Barcode_1_Stop";
        //            string barcode2 = string.Empty;
        //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
        //            string barcode3 = string.Empty;
        //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";


        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
        //                                                   , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
        //                                                   , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
        //                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
        //                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]
        //            sb.Append("\r\n");

        //            #region Barcode 2 and Barcode 3 alignment lastest edit on 2017-12-28 10:25
        //            switch (ClientPickedPrinterCode)
        //            {
        //                case 0:
        //                    #region LaserMatrix BARCODE 2 CONDITION แก้ไขเท่ากับ Agency

        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(75, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 1:
        //                    #region Fujitsu
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 2:
        //                    #region Printronix last edit 2017-12-28 10:22
        //                    //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}", barcode2
        //                                                       , blank.PadLeft(27, ' '));
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

        //                    }
        //                    #endregion
        //                    break;
        //                case 3:
        //                    #region Data Product BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 4:
        //                    #region Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 5:
        //                    #region Tally BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 6:
        //                    #region Pentax BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                default:
        //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //            }
        //            sb.Append("\r\n");     //After check print condition


        //            int tmpLenght = 61;
        //            if (StarAppend == 12)
        //            {
        //                tmpLenght += 2;
        //            }
        //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
        //            }

        //            #endregion


        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
        //            sb.Append("\r\n");

        //            if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
        //            {
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {

        //                sb.AppendFormat("{0}", barcode1); //   barcode1                    
        //                sb.Append("\r\n");
        //            }
        //            ///***************SPOT BILL***************************************************
        //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
        //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
        //                sb.Append("\r\n");
        //            }


        //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
        //            {
        //                sb.Append("\r\n");       //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
        //            }

        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
        //                }
        //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
        //                sb.Append("\r\n");
        //            }


        //            sb.Append("\r\n");

        //            #endregion
        //        }
        //        //*********************************** FOOT PAGE SPOT BILL ************************************
        //        resultTxt = sb.ToString();
        //        //pack into entity
        //        Bills _bill = new Bills();
        //        _bill.BillTxt = resultTxt;
        //        _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
        //        _bills.Add(_bill);
        //    }
        //    return _bills;
        //}
        #endregion

        #region BKAdjustAgencyBillLayoutNewForm2024x
            //private List<Bills> AdjustAgencyBillLayoutNewForm2024x(List<BlueBill> _blueBill)
            //{
            //    //Bill ตัวแทน
            //    List<Bills> _bills = new List<Bills>();

            //    foreach (BlueBill bb in _blueBill)
            //    {
            //        string resultTxt;
            //        string blank    = " ";
            //        string star     = "*";
            //        string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
            //        //field totalWidth in Pad property = column width in real receipt.

            //        const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
            //        const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

            //        StringBuilder sb = new StringBuilder();
            //        //***Remark \r\n = CR&LF 

            //        string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

            //        //*********************************** TOP บิลตัวแทน  AGENCY************************************
            //        const int costLength = 14;
            //        const int pos17_18_21_22_25 = 75;
            //        int StarAppend = 12;

            //        //#ISSUE Discount3% 2020-04-03
            //        //bb.W_130_period       -->[15]
            //        //bb.W_2370_oth_dis4    -->[28]
            //        //bb.W_2400_oth_dis7    -->[31]

            //        bool isDiscount3Percent = false;               
            //        isDiscount3Percent      = ConfirmDiscount3Percent(bb.W_130_period,bb.W_2370_oth_dis4, bb.W_2400_oth_dis7);
            //        if (isDiscount3Percent == true)
            //        {
            //            //bb.W_1480_net_before_vat_txt    = "";      //-->[22]
            //            //bb.W_1490_tax_rate_txt          = "";      //-->[23]
            //            //bb.W_1500_tax_amount_txt        = "";      //-->[24]
            //            //bb.W_1510_total_amnt_txt        = "";      //-->[25]
            //        }
            //        //#END ISSUE Discount3% 
                    
            //        #region ส่วนของใบเสร็จรับเงินค่าไฟฟ้า/ใบกำกับภาษี

            //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
            //        {
            //            #region PRINT DOC X,Y

            //            if (PRINTDOC_TYPE == "Y")
            //            {
            //                if (ClientPickedPrinterCode == 1) // Fujitsu
            //                {
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
            //                    sb.Append("\r\n");
            //                    sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
            //                    sb.Append("\r\n");
            //                }
            //                else
            //                {
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
            //                    sb.Append("\r\n");
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
            //                    sb.Append("\r\n");
            //                }
            //            }
            //            else
            //            {
            //                sb.Append("\r\n");
            //                sb.Append("\r\n");
            //            }


            //            //REMOVE X FROM RECEIPT NO
            //            //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
            //            string NewReceipt = bb.W_2340_rec_doc;

            //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            const int pos2_4 = p30 + 2;
            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
            //            sb.Append("\r\n");

            //            const int pos5_6_8_9 = p10;

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
            //            sb.Append("\r\n");


            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
            //            sb.Append("\r\n");


            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
            //            sb.Append("\r\n");

            //            #region 200180108_1412 fix address exceed 86

            //            StringBuilder sbdTop = new StringBuilder();
            //            sbdTop.Append(bb.W_216_address);
            //            if (!String.IsNullOrEmpty(bb.W_217_address))
            //            {
            //                sbdTop.Append(" ");
            //            }
            //            sbdTop.Append(bb.W_217_address);
            //            if (!String.IsNullOrEmpty(bb.W_218_address))
            //            {
            //                sbdTop.Append(" ");
            //            }
            //            sbdTop.Append(bb.W_218_address);
            //            int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
            //            string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
            //            tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
            //            if (addressTopLength > 86)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
            //            }
            //            //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
            //            sb.Append("\r\n");
            //            #endregion

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

                       
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
            //                                                                    blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
            //                                                                    blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
            //                                                                    blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
            //                                                                    blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
            //                                                                    //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
            //                                                                    blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
            //                                                                    blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
            //                                                                    blank.PadLeft(1, ' ')));



            //            sb.Append("\r\n");


            //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
            //            //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
            //            //ISSUE#BLAN2019 [105] 
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
            //                                                          StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
            //                                                          StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
            //                                                          blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

            //            //ISSUE#BLAN2019 [106]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
            //                                                       StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
            //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]

            //            //ISSUE#BLAN2019 [107]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
            //                                                       StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
            //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
            //                                                    blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]

            //            //ISSUE#BLAN2019 [108]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
            //                                                       StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
            //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
            //            //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
            //            //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
            //            //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
            //            //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

            //            //ISSUE#BLAN2019 EDIT [28][29][30]
            //            //ISSUE#BLAN2019 EDIT [28][29][30]
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
            //                                                             blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
            //                                                             blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
            //                                                             StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
            //                                                             blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
            //            //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
            //            //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

            //            //ISSUE#BLAN2019 EDIT [31][32][33]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
            //                                                     , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
            //                                                     , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
            //            sb.Append("\r\n");

            //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
            //            {
            //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
            //            }
            //            int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

            //            int TotalPadding = 13;
            //            if (totalStarLimit >= 12)
            //            {
            //                StarAppend = costLength;
            //                TotalPadding = 11;
            //            }
            //            else
            //            {
            //                StarAppend = 12;
            //                TotalPadding = 14;
            //            }

            //            #region Fix 2200 Grand Amount is null 2018Jan10
            //            if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

            //            }
            //            else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                 blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
            //            }
            //            else
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                 blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

            //                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
            //                //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

            //            }

            //            #endregion

            //            sb.Append("\r\n");

            //            #endregion
            //        }
            //        else
            //        {
            //            #region ORIGINAL PRINT DOC

            //            //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
            //            if (((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == "")) || (Convert35ToDouble(bb.W_2200_gtot_amn.Trim()) == true))
            //            {
            //                if (ClientPickedPrinterCode == 1) // Fujitsu
            //                {
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
            //                    sb.Append("\r\n");
            //                    sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
            //                    sb.Append("\r\n");
            //                }
            //                else
            //                {
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
            //                    sb.Append("\r\n");
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
            //                    sb.Append("\r\n");
            //                }
            //            }
            //            else
            //            {
            //                sb.Append("\r\n");
            //                sb.Append("\r\n");
            //            }



            //            //Old receipt number
            //            //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));      //--[1]

            //            //New Receipt number BLAN2019
            //            //string NewReceiptDCR2019 = bb.W_2340_rec_doc;
            //            string NewReceiptDCR2019 = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
            //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptDCR2019.PadLeft(p80 + 14, ' ')); //[1]

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            const int pos2_4 = p30 + 2;
            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel);  //[4]
            //            sb.Append("\r\n");

            //            const int pos5_6_8_9 = p10;

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2));   //[5]
            //            sb.Append("\r\n");


            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid));  //[6][7]
            //            sb.Append("\r\n");


            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
            //            sb.Append("\r\n");

            //            #region 200180108_1412 fix address exceed 86

            //            StringBuilder sbdTop = new StringBuilder();
            //            sbdTop.Append(bb.W_216_address);
            //            if (!String.IsNullOrEmpty(bb.W_217_address))
            //            {
            //                sbdTop.Append(" ");
            //            }
            //            sbdTop.Append(bb.W_217_address);
            //            if (!String.IsNullOrEmpty(bb.W_218_address))
            //            {
            //                sbdTop.Append(" ");
            //            }
            //            sbdTop.Append(bb.W_218_address);
            //            int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
            //            string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
            //            tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
            //            if (addressTopLength > 86)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
            //            }
            //            //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
            //            sb.Append("\r\n");
            //            #endregion

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                            //[10]
            //                                                                    blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                      //[11]
            //                                                                    blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]--16
            //                                                                    blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]--8
            //                                                                    blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
            //                                                                    blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),                //[15]
            //                                                                    //blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_490_consumption_txt)) + blank.PadLeft(5, ' '),//[16] W_490_consumption_txt get data from w_1390_ftunit_txt from ts.BillDetail
            //                                                                    blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),
            //                                                                    blank.PadLeft(1, ' ')));



            //            sb.Append("\r\n");


            //            //const int costLength = 14;
            //            //const int pos17_18_21_22_25 = 75;
            //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
            //            sb.Append("\r\n");

            //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
            //            //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
            //            //ISSUE#BLAN2019 [105] 
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
            //                                                          StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
            //                                                          StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
            //                                                          blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]

            //            sb.Append("\r\n");

            //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
            //            //ISSUE#BLAN2019 [106]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
            //                                                       StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
            //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

            //            sb.Append("\r\n");

            //            // sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]
            //            // ISSUE#BLAN2019 [107]
            //            // Discount 3% 2020-04-07 Uthen.P
            //            if (isDiscount3Percent == true)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
            //                                                           StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
            //                                                           StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' '))); //[22]
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
            //                                                           StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
            //                                                           StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
            //            }

            //            sb.Append("\r\n");

                        

            //            // Discount 3% 2020-04-07 Uthen.P
            //            if (isDiscount3Percent == true)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight("", 2),                                                         //[23]
            //                                                        blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));       //[24]
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),                                                         //[23]
            //                                                        blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
            //            }
            //            sb.Append("\r\n");

            //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
            //            //ISSUE#BLAN2019 [108]
            //            // Discount 3% 2020-04-07 Uthen.P
            //            if (isDiscount3Percent == true)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
            //                                                           StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
            //                                                           StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));                        //[25]
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
            //                                                           StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
            //                                                           StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
            //            }

            //            sb.Append("\r\n");



            //            //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
            //            //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
            //            //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
            //            //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
            //            //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]
            //            //sb.Append("\r\n");

            //            //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
            //            //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
            //            //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                            //[33]

            //            //U R IN TOP ORIGINAL PRINTDOC

            //            //ISSUE#BLAN2019 EDIT [28][29][30]
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
            //                                                             blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
            //                                                             blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51
            //                                                             //blank.PadLeft(20, ' ') + bb.W_2370_oth_dis4.PadLeft(25, ' '),                //[28] LAST EDIT: 2019DEC02 09:51
            //                                                             StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
            //                                                             blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
            //            //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
            //            //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

            //            //ISSUE#BLAN2019 EDIT [31][32][33]
            //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]  LAST EDIT: 2019DEC02 09:51 
            //                //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(53, ' ') + bb.W_2400_oth_dis7.PadLeft(25, ' ')              //[31]  LAST EDIT: 2019NOV28 16:08                                                                                                                  
            //                                                     , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
            //                                                     , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]


            //            sb.Append("\r\n");

            //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
            //            {
            //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
            //            }
            //            int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
            //            //int StarAppend = 12;
            //            int TotalPadding = 13;
            //            if (totalStarLimit >= 12)
            //            {
            //                StarAppend = costLength;
            //                TotalPadding = 11;
            //            }
            //            else
            //            {
            //                StarAppend = 12;
            //                TotalPadding = 14;
            //            }

            //            #region Fix 2200 Grand Amount is null 2018Jan10
            //            if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

            //            }
            //            else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                 blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
            //            }
            //            else
            //            {
            //                TotalPadding = 15;
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
            //                                                 blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

            //                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
            //                //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

            //            }

            //            #endregion

            //            sb.Append("\r\n");



            //            #endregion
            //        }

            //        #endregion

            //        #region ส่วนของใบแจ้งค่าไฟฟ้า
            //        //*********************************** BOTTOM บิลตัวแทน AGENCY*********************************
            //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
            //        {
            //            #region #BOTTOM BLUE BILL X,Y

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
            //                                                    GenStar(16)));              //[36]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
            //            sb.Append("\r\n");

            //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455
            //            string tmpCustomerName = null;
            //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
            //            {//cust name 1 มีค่า                     
            //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
            //                {//cust name 2 มีค่า 
            //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
            //                }
            //                else
            //                {//cust name 2 ไม่มี
            //                    tmpCustomerName = bb.W_90_cust_name1;
            //                }
            //            }
            //            else
            //            {//cust name 1 ไม่มี
            //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
            //                {//cust name 2 มีค่า 
            //                    tmpCustomerName = bb.W_90_cust_name2;
            //                }
            //                else
            //                {//cust name 2 ไม่มี
            //                    tmpCustomerName = "";
            //                }
            //            }
            //            int custLength = 0;
            //            custLength = StringConvert.TextLength(tmpCustomerName);
            //            if (custLength > 44)
            //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
            //                try
            //                {
            //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
            //                }
            //                catch
            //                {
            //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
            //                }
            //            }

            //            if (ClientPickedPrinterCode == 0)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
            //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
            //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
            //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
            //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
            //            }
            //            sb.Append("\r\n");
            //            #endregion

            //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

            //            StringBuilder sbdAddress = new StringBuilder();
            //            sbdAddress.Append(bb.W_221_address);  //1
            //            if (!String.IsNullOrEmpty(bb.W_222_address))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_222_address);  //2
            //            if (!String.IsNullOrEmpty(bb.W_223_address))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_223_address);  //3
            //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_230_post_code); //4   

            //            int addressLength = 0;
            //            string tmpAddress = null;
            //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
            //            if (addressLength > 54)
            //            {
            //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
            //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
            //                if (!String.IsNullOrEmpty(tmpResult[0]))
            //                {//ใส่ข้อมูลแถวที่หนึ่ง
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
            //                    sb.Append("\r\n");
            //                    if (!String.IsNullOrEmpty(tmpResult[1]))
            //                    {//ใส่ข้อมูลแถวที่สอง
            //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
            //                        sb.Append("\r\n");
            //                    }
            //                    else
            //                    {
            //                        sb.Append("\r\n");
            //                    }
            //                }
            //                else
            //                {
            //                    if (!String.IsNullOrEmpty(tmpResult[1]))
            //                    {//ใส่ข้อมูลแถวที่สอง
            //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
            //                        sb.Append("\r\n");
            //                        sb.Append("\r\n");
            //                    }
            //                    else
            //                    {
            //                        sb.Append("\r\n");
            //                        sb.Append("\r\n");
            //                    }
            //                }
            //            }
            //            else
            //            {
            //                tmpAddress = sbdAddress.ToString();
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
            //                sb.Append("\r\n");
            //                sb.Append("\r\n");
            //            }
            //            #endregion

            //            sb.Append("\r\n");

            //            string EMPTY_STRING = "";
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
            //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
            //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
            //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
            //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");
            //            const int pos_53_58_63_67 = 2;
            //            const int pos_52_57_62_66 = 1;
            //            const int pos_56_61_65 = 0;
            //            const int pos_68_69_72_73_76 = 16;
            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
            //            sb.Append("\r\n");

            //            string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
            //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
            //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
            //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
            //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
            //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
            //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
            //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
            //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
            //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
            //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
            //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
            //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
            //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
            //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
            //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
            //                                                           , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
            //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
            //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
            //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
            //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
            //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
            //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
            //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
            //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
            //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
            //                                            , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
            //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
            //                                                , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
            //            sb.Append("\r\n");


            //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
            //                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

            //            sb.Append("\r\n");



            //            string barcode1 = string.Empty;
            //            barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
            //            string barcode2 = string.Empty;
            //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
            //            string barcode3 = string.Empty;
            //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

            //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
            //                                            , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
            //                                            , StringConvert.PadLeft(EMPTY_STRING, costLength)                       //[78]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

            //            sb.Append("\r\n");

            //            #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
            //            //"LaserMatrix",    0
            //            //"Fujitsu",        1
            //            //"Printronix",     2
            //            //"Data Product",   3
            //            //"Genicom",        4
            //            //"Tally",          5
            //            //"Pentax",         6

            //            string EMPTY_STRING_INSTEAD_BARCODE2 = "";
            //            string EMPTY_STRING_INSTEAD_BARCODE3 = "";

            //            switch (ClientPickedPrinterCode)
            //            {
            //                case 0:
            //                    #region LaserMatrix BARCODE 2 CONDITION

            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(75, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }

            //                    #endregion
            //                    break;
            //                case 1:
            //                    #region Fujitsu
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }

            //                    #endregion
            //                    break;
            //                case 2:
            //                    //#region Printronix last edit 2017-12-28 10:22
            //                    ////2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
            //                    //if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    //{
            //                    //    sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
            //                    //}
            //                    //else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                    //    sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
            //                    //                                   , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

            //                    //}
            //                    //else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                    //    sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
            //                    //                                   , blank.PadLeft(27, ' '));
            //                    //}
            //                    //else
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                    //    sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                    //                                   , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

            //                    //}

            //                    //#endregion

            //                    #region Printronix DCR 67-020 Not print barcode1,2
            //                    //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537

            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_150_contract) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        //sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
            //                        //                               , blank.PadLeft(27, ' '));

            //                        // print caid barcode
            //                        sb.AppendFormat("{0}{1}{2}", barcode3 + blank.PadLeft(1, ' ')
            //                                                   , blank.PadLeft(20, ' ') + "สำหรับ กฟภ. เท่านั้น" 
            //                                                   , blank.PadLeft(27, ' '));
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        //sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                        //                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                        //                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

            //                        sb.AppendFormat("{0}{1}{2}{4}", barcode3       //barcode3 แทน barcode2   
            //                                                      , blank.PadLeft(20, ' ')  + " สำหรับ กฟภ. เท่านั้น" 
            //                                                      , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                      , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));   
            //                    }

            //                    #endregion

            //                    break;
            //                case 3:
            //                    #region Data Product BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }

            //                    #endregion
            //                    break;
            //                case 4:
            //                    #region Genicom BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 5:
            //                    #region Tally BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 6:
            //                    #region Pentax BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }



            //                    #endregion
            //                    break;
            //                default:
            //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
            //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
            //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
            //                    }

            //                    #endregion
            //                    break;
            //            }
            //            sb.Append("\r\n");     //After check print condition


            //            int tmpLenght = 61;
            //            if (StarAppend == 12)
            //            {
            //                tmpLenght += 2;
            //            }
            //            //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
            //            //                        , barcode3);  //barcode3 //tmpCaId 
            //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
            //            {
            //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
            //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
            //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
            //            }

            //            #endregion

            //            sb.Append("\r\n");

            //            //PREVIOUS CODE 2019-NOV-14
            //            //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

            //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
            //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

            //            sb.Append("\r\n");

            //            string EMPTY_STRING_INSTEAD_BARCODE1 = "";

            //            if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
            //            {
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
            //                sb.Append("\r\n");
            //            }
            //            //*********************************** U R IN AGENCY************************************               
            //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


            //            if (ClientPickedPrinterCode == 0) //Epson
            //            {
            //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
            //                {
            //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
            //                    sb.Append("\r\n");
            //                }
            //                else
            //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
            //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
            //                    sb.Append("\r\n");
            //                }
            //            }
            //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
            //                sb.Append("\r\n");
            //            }

            //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
            //            {
            //                sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
            //            }

            //            if (ClientPickedPrinterCode == 0) //Epson
            //            {
            //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
            //                {
            //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
            //                }
            //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
            //                sb.Append("\r\n");
            //            }

            //            //BLAN2019
            //            //2020-JAN-03 FIX TALLY GENICOM CASE X,Y NEED TO ADD 1 LINE Uthen.P
            //            if (ClientPickedPrinterCode == 4) // GENICOM
            //            {
            //                sb.Append("\r\n");
            //            }

            //            //#BLAN2019
            //            //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
            //            if (ClientPickedPrinterCode == 2)
            //            {
            //                sb.Append("\r\n");
            //            }

            //            #endregion
            //        }
            //        else
            //        {
            //            #region #BOTTOM PAGE AGENCY BILL
            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
            //                                                    bb.W_10_invoice_no.PadLeft(16, ' ')));         //[36]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
            //                                                    bb.W_40_sname + " " + bb.W_2130_off_tel));     //[37]
            //            sb.Append("\r\n");

            //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455
            //            string tmpCustomerName = null;
            //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
            //            {//cust name 1 มีค่า                     
            //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
            //                {//cust name 2 มีค่า 
            //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
            //                }
            //                else
            //                {//cust name 2 ไม่มี
            //                    tmpCustomerName = bb.W_90_cust_name1;
            //                }
            //            }
            //            else
            //            {//cust name 1 ไม่มี
            //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
            //                {//cust name 2 มีค่า 
            //                    tmpCustomerName = bb.W_90_cust_name2;
            //                }
            //                else
            //                {//cust name 2 ไม่มี
            //                    tmpCustomerName = "";
            //                }
            //            }
            //            int custLength = 0;
            //            custLength = StringConvert.TextLength(tmpCustomerName);
            //            if (custLength > 44)
            //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
            //                try
            //                {
            //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
            //                }
            //                catch
            //                {
            //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
            //                }
            //            }

            //            if (ClientPickedPrinterCode == 0)
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
            //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
            //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
            //            }
            //            else
            //            {
            //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
            //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
            //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
            //            }
            //            sb.Append("\r\n");
            //            #endregion

            //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

            //            StringBuilder sbdAddress = new StringBuilder();
            //            sbdAddress.Append(bb.W_221_address);  //1
            //            if (!String.IsNullOrEmpty(bb.W_222_address))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_222_address);  //2
            //            if (!String.IsNullOrEmpty(bb.W_223_address))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_223_address);  //3
            //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
            //            {
            //                sbdAddress.Append(" ");
            //            }
            //            sbdAddress.Append(bb.W_230_post_code); //4   

            //            int addressLength = 0;
            //            string tmpAddress = null;
            //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
            //            if (addressLength > 54)
            //            {
            //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
            //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
            //                if (!String.IsNullOrEmpty(tmpResult[0]))
            //                {//ใส่ข้อมูลแถวที่หนึ่ง
            //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
            //                    sb.Append("\r\n");
            //                    if (!String.IsNullOrEmpty(tmpResult[1]))
            //                    {//ใส่ข้อมูลแถวที่สอง
            //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
            //                        sb.Append("\r\n");
            //                    }
            //                    else
            //                    {
            //                        sb.Append("\r\n");
            //                    }
            //                }
            //                else
            //                {
            //                    if (!String.IsNullOrEmpty(tmpResult[1]))
            //                    {//ใส่ข้อมูลแถวที่สอง
            //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
            //                        sb.Append("\r\n");
            //                        sb.Append("\r\n");
            //                    }
            //                    else
            //                    {
            //                        sb.Append("\r\n");
            //                        sb.Append("\r\n");
            //                    }
            //                }
            //            }
            //            else
            //            {
            //                tmpAddress = sbdAddress.ToString();
            //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
            //                sb.Append("\r\n");
            //                sb.Append("\r\n");
            //            }
            //            #endregion

            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
            //                                                                  , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
            //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
            //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
            //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
            //                                                                  , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

            //            sb.Append("\r\n");

            //            sb.Append("\r\n");
            //            const int pos_53_58_63_67 = 2;
            //            const int pos_52_57_62_66 = 1;
            //            const int pos_56_61_65 = 0;
            //            const int pos_68_69_72_73_76 = 16;
            //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                //[49]
            //            sb.Append("\r\n");
            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                              //[50]
            //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                     //[BLANK]
            //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                           //[51]
            //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)                          //[52]
            //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
            //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
            //            sb.Append("\r\n");

            //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                 //[54]
            //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)       //[55]
            //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10) //[56]   
            //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                         //[57]
            //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
            //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                              //[59]
            //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                //[60]
            //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
            //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                                      //[62]
            //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)  //[63]
            //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                  //[70]
            //                                                           , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)      //[71]
            //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                 //[91]
            //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));      //[97]  
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
            //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                        //[64]
            //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)                                    //[65]
            //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                                                         //[66]
            //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)     //[67]
            //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
            //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
            //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));                       //[98]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
            //                                            , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
            //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
            //                                                , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
            //            sb.Append("\r\n");


            //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
            //                                                , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
            //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

            //            sb.Append("\r\n");



            //            string barcode1 = string.Empty;
            //            barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
            //            string barcode2 = string.Empty;
            //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
            //            string barcode3 = string.Empty;
            //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";




            //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
            //                                            , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
            //                                            , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
            //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]

            //            sb.Append("\r\n");

            //            #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
            //            //"LaserMatrix",    0
            //            //"Fujitsu",        1
            //            //"Printronix",     2
            //            //"Data Product",   3
            //            //"Genicom",        4
            //            //"Tally",          5
            //            //"Pentax",         6
            //            switch (ClientPickedPrinterCode)
            //            {
            //                case 0:
            //                    #region LaserMatrix BARCODE 2 CONDITION

            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(75, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 1:
            //                    #region Fujitsu
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 2:
            //                    //#region Printronix last edit 2017-12-28 10:22
            //                    ////2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
            //                    //if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    //{
            //                    //    sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
            //                    //}
            //                    //else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                    //    sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
            //                    //                                   , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

            //                    //}
            //                    //else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                    //    sb.AppendFormat("{0}{1}", barcode2
            //                    //                                   , blank.PadLeft(27, ' '));
            //                    //}
            //                    //else
            //                    //{
            //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                    //    sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
            //                    //                                   , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

            //                    //}
            //                    //#endregion

            //                    #region DCR 67-020 Printronix not print barcode1,2
            //                    //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
            //                    if (String.IsNullOrEmpty(bb.W_150_contract) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_150_contract) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_150_contract) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode3 + blank.PadLeft(1, ' ')
            //                                                   , "สำหรับ กฟภ. เท่านั้น" + blank.PadLeft(13, ' ')
            //                                                   , blank.PadLeft(27, ' '));
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}", barcode3 + " สำหรับ กฟภ. เท่านั้น" + blank.PadLeft(13, ' ')          //barcode 3  with padding to 45 char    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

            //                    }



            //                    #endregion
            //                    break;
            //                case 3:
            //                    #region Data Product BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 4:
            //                    #region Genicom BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 5:
            //                    #region Tally BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                case 6:
            //                    #region Pentax BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }



            //                    #endregion
            //                    break;
            //                default:
            //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
            //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
            //                                                , barcode3);
            //                    }
            //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
            //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
            //                                                       , barcode3);
            //                    }
            //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
            //                        sb.AppendFormat("{0}{1}{2}", barcode2
            //                                                       , blank.PadLeft(27, ' ')
            //                                                       , barcode3);
            //                    }
            //                    else
            //                    {
            //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
            //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
            //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
            //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
            //                                                       , barcode3);
            //                    }

            //                    #endregion
            //                    break;
            //            }
            //            sb.Append("\r\n");     //After check print condition


            //            int tmpLenght = 61;
            //            if (StarAppend == 12)
            //            {
            //                tmpLenght += 2;
            //            }
            //            //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
            //            //                        , barcode3);  //barcode3 //tmpCaId 

            //            // DCR 67-020 Not print barcode3 after total amnt
            //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
            //            {
            //                if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
            //                {
            //                    sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' '));     //[81]
            //                }
            //                else
            //                {
            //                    sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' '));     //[81]
            //                }

            //            }
            //            else
            //            {
            //                if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
            //                {
            //                    sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'));
            //                }
            //                else
            //                {
            //                    sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
            //                }

            //            }

            //            #endregion

            //            sb.Append("\r\n");

            //            sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
            //            sb.Append("\r\n");

            //            // DCR 67-020 Printronix not print barcode 1
            //            //if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                        
            //            if (ClientPickedPrinterCode == 2)  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
            //            {
            //                if (String.IsNullOrEmpty(bb.W_2170_sec_dis1)) // ถ้ามีผลประโยชน์เงินประกันจะไม่พิมพ์  BarCode CaId
            //                {
            //                    sb.AppendFormat("{0}", "สำหรับชำระช่องทางออนไลน์ หมายเลขผู้ใช้ไฟฟ้าRef.1 : " + bb.W_150_contract);
            //                }
            //                else 
            //                { 
                            
            //                }
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", barcode1); //   barcode1                    
            //                sb.Append("\r\n");
            //            }
            //            //*********************************** U R IN AGENCY************************************               
            //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
            //            if (ClientPickedPrinterCode == 0) //Epson
            //            {
            //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
            //                {
            //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
            //                    sb.Append("\r\n");
            //                }
            //                else
            //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
            //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
            //                    sb.Append("\r\n");
            //                }
            //            }
            //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
            //                sb.Append("\r\n");
            //            }

            //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
            //            {
            //                sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
            //            }

            //            if (ClientPickedPrinterCode == 0) //Epson
            //            {
            //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
            //                {
            //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
            //                }
            //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
            //                sb.Append("\r\n");
            //            }
            //            else
            //            {
            //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
            //                sb.Append("\r\n");
            //            }

            //            sb.Append("\r\n");

            //            #endregion
            //        }
            //        #endregion

            //        resultTxt = sb.ToString();
            //        //pack into entity
            //        Bills _bill = new Bills();
            //        _bill.BillTxt = resultTxt;
            //        _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
            //        _bills.Add(_bill);
            //    }
            //    return _bills;
            //}
        #endregion

        #region BKAdjustBlueBillLayoutNewForm2024No1
        //private List<Bills> AdjustBlueBillLayoutNewForm2024No1(List<BlueBill> _blueBill)
        //{
        //    //SPOT BILL วางไม่ได้

        //    List<Bills> _bills = new List<Bills>();

        //    foreach (BlueBill bb in _blueBill)
        //    {
        //        string resultTxt;
        //        string blank = " ";
        //        string star = "*";
        //        string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
        //        //field totalWidth in Pad property = column width in real receipt.

        //        const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
        //        const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

        //        StringBuilder sb = new StringBuilder();
        //        //***Remark \r\n = CR&LF 

        //        string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

        //        //*********************************** TOP PAGE SPOT BILL****************************************
        //        int pos17_18_21_22_25XY = 75;
        //        int costLengthXY = 14;
        //        int StarAppendXY = 12;

        //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
        //        {
        //            #region PRINT DOC X,Y MIRROR FROM AGENCY

        //            if (PRINTDOC_TYPE == "Y")
        //            {
        //                if (ClientPickedPrinterCode == 1) // Fujitsu
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else
        //            {
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }


        //            //REMOVE X FROM RECEIPT NO
        //            //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
        //            string NewReceipt = bb.W_2340_rec_doc;

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            const int pos2_4 = p30 + 2;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
        //            sb.Append("\r\n");

        //            const int pos5_6_8_9 = p10;

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
        //            sb.Append("\r\n");

        //            #region 200180108_1412 fix address exceed 86

        //            StringBuilder sbdTop = new StringBuilder();
        //            sbdTop.Append(bb.W_216_address);
        //            if (!String.IsNullOrEmpty(bb.W_217_address))
        //            {
        //                sbdTop.Append(" ");
        //            }
        //            sbdTop.Append(bb.W_217_address);
        //            if (!String.IsNullOrEmpty(bb.W_218_address))
        //            {
        //                sbdTop.Append(" ");
        //            }
        //            sbdTop.Append(bb.W_218_address);
        //            int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
        //            string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
        //            tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
        //            if (addressTopLength > 86)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
        //            }
        //            //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
        //            sb.Append("\r\n");
        //            #endregion

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
        //                                                                    blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
        //                                                                    blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
        //                                                                    blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
        //                                                                    blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
        //                //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
        //                                                                    blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
        //                                                                    blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
        //                                                                    blank.PadLeft(1, ' ')));



        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLengthXY, ' ')));        //[17]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLengthXY, ' ')));    //[18]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
        //            //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));                      //[20]
        //            //ISSUE#BLAN2019 [105] 
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
        //                                                          StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
        //                                                          StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
        //                                                          blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));    //[20]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]

        //            //ISSUE#BLAN2019 [106]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
        //                                                       StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' ')));//[22]

        //            //ISSUE#BLAN2019 [107]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
        //                                                       StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' '))); //[22]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
        //                                                    blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLengthXY, ' ')));     //[24]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]

        //            //ISSUE#BLAN2019 [108]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
        //                                                       StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
        //                                                       StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
        //            //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
        //            //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
        //            //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLengthXY, ' '),    //[29]
        //            //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

        //            //ISSUE#BLAN2019 EDIT [28][29][30]
        //            //ISSUE#BLAN2019 EDIT [28][29][30]
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]                                                                     
        //                                                             blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),         //[27]
        //                                                             blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
        //                                                             StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLengthXY, ' '), //[29]
        //                                                             blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
        //            //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
        //            //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

        //            //ISSUE#BLAN2019 EDIT [31][32][33]
        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
        //                                                     , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
        //                                                     , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
        //            sb.Append("\r\n");

        //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
        //            {
        //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
        //            }
        //            int totalStarLimitXY = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

        //            int TotalPaddingXY = 13;
        //            if (totalStarLimitXY >= 12)
        //            {
        //                StarAppendXY = costLengthXY;
        //                TotalPaddingXY = 11;
        //            }
        //            else
        //            {
        //                StarAppendXY = 12;
        //                TotalPaddingXY = 14;
        //            }

        //            #region Fix 2200 Grand Amount is null 2018Jan10
        //            if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

        //            }
        //            else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                 blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 
        //            }
        //            else
        //            {
        //                TotalPaddingXY = 15;
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
        //                                                 blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

        //                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
        //                //                                       blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppendXY, '*')));  //[35]

        //            }

        //            #endregion

        //            sb.Append("\r\n");
        //            //Uthen Fix BillFlag = 'Y'
        //            if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
        //            }

        //            #endregion
        //        }
        //        else
        //        {
        //            #region #SPOT BILL TOP PAGE

        //            //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))

        //            if (true)
        //            {
        //                if (ClientPickedPrinterCode == 1) // Fujitsu
        //                {
        //                    if (ClientPickedPrinterCode == 1) // Fujitsu
        //                    {
        //                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                        sb.Append("\r\n");
        //                        sb.AppendFormat("." + String.Format("{0}                                                                              {1}", " ", "     /////////"));
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                        sb.Append("\r\n");
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
        //                    sb.Append("\r\n");
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else
        //            {
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }

        //            //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));//--[1]

        //            //string NewReceiptSpotbill = bb.W_2340_rec_doc;
        //            string NewReceiptSpotbill = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptSpotbill.PadLeft(p80 + 14, ' ')); //[1]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            const int pos2_4 = p30 + 2;
        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(37, ' '), bb.W_150_contract.PadLeft(54, ' ')));       //[2][3]
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(GenStar(32).PadLeft(48, ' '));    //[4]
        //            sb.Append("\r\n");

        //            const int pos5_6_8_9 = p10;

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));   //[5]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + GenStar(13).PadLeft(17, ' '), blank.PadLeft(13, ' ') + GenStar(12)));  //[6][7]
        //            sb.Append("\r\n");


        //            //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
        //            sb.Append("\r\n");


        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));  //[9]
        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int st = 11;   //Use for GenStar function
        //            const int pos17_18_21_22_25 = 77;
        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                                            //[17]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[18]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(63, ' ') + StringConvert.PadRight(GenStar(7).PadLeft(7, ' '), 7),     //[19]
        //                                                    blank.PadLeft(7, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[20]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[21]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[22]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(69, ' ') + StringConvert.PadRight(GenStar(2).PadLeft(4, ' '), 4),     //[23]
        //                                                    blank.PadLeft(4, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[24]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[25]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),           //[26]
        //                                                             blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),              //[27]
        //                                                             blank.PadLeft(31, ' ') + blank.PadRight(18, ' '),      //[28]
        //                                                             blank.PadLeft(12, ' '),                                //[29]
        //                                                             blank.PadLeft(1, ' ') + blank));                       //[30]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + blank,          //[31]
        //                                                       blank.PadLeft(12, ' '),                  //[32]
        //                                                       blank.PadLeft(1, ' ') + blank));         //[33]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(blank.PadLeft(47, ' '), 47),    //[34]
        //                                                    blank.PadLeft(14, ' ') + GenStar(st).PadLeft(12, ' ')));                        //[35]
        //            sb.Append("\r\n");

        //            if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
        //            }
        //            sb.Append("\r\n");       //ตัดบรรทัดนี้มาจากส่วน bottom
        //            #endregion
        //        }

        //        //*********************************** BOTTOM PAGE SPOT BILL ************************************

        //        if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
        //        {
        //            #region #SPOT BILL X,Y

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
        //                                                    GenStar(16)));              //[36]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
        //            sb.Append("\r\n");

        //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455
        //            string tmpCustomerName = null;
        //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
        //            {//cust name 1 มีค่า                     
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = bb.W_90_cust_name1;
        //                }
        //            }
        //            else
        //            {//cust name 1 ไม่มี
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = "";
        //                }
        //            }
        //            int custLength = 0;
        //            custLength = StringConvert.TextLength(tmpCustomerName);
        //            if (custLength > 44)
        //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
        //                try
        //                {
        //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
        //                }
        //                catch
        //                {
        //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
        //                }
        //            }

        //            if (ClientPickedPrinterCode == 0)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
        //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(GenStar(44), 44),   //[38]
        //                                                            blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
        //            }
        //            sb.Append("\r\n");
        //            #endregion

        //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

        //            StringBuilder sbdAddress = new StringBuilder();
        //            sbdAddress.Append(bb.W_221_address);  //1
        //            if (!String.IsNullOrEmpty(bb.W_222_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_222_address);  //2
        //            if (!String.IsNullOrEmpty(bb.W_223_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_223_address);  //3
        //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_230_post_code); //4   

        //            int addressLength = 0;
        //            string tmpAddress = null;
        //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
        //            if (addressLength > 54)
        //            {
        //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
        //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
        //                if (!String.IsNullOrEmpty(tmpResult[0]))
        //                {//ใส่ข้อมูลแถวที่หนึ่ง
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
        //                    sb.Append("\r\n");
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //            }
        //            else
        //            {
        //                tmpAddress = sbdAddress.ToString();
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }
        //            #endregion

        //            sb.Append("\r\n");

        //            string EMPTY_STRING = "";
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
        //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
        //                                                                  , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int pos_53_58_63_67 = 2;
        //            const int pos_52_57_62_66 = 1;
        //            const int pos_56_61_65 = 0;
        //            const int pos_68_69_72_73_76 = 16;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
        //            sb.Append("\r\n");

        //            string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
        //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
        //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
        //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
        //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
        //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
        //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
        //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
        //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
        //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
        //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
        //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
        //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
        //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
        //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
        //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
        //                                                           , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
        //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
        //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
        //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
        //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
        //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
        //                                            , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
        //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
        //                                                , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
        //            sb.Append("\r\n");


        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
        //                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

        //            sb.Append("\r\n");



        //            string barcode1 = string.Empty;
        //            barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
        //            string barcode2 = string.Empty;
        //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
        //            string barcode3 = string.Empty;
        //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
        //                                            , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
        //                                            , StringConvert.PadLeft(EMPTY_STRING, costLengthXY)                       //[78]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

        //            sb.Append("\r\n");

        //            #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
        //            //"LaserMatrix",    0
        //            //"Fujitsu",        1
        //            //"Printronix",     2
        //            //"Data Product",   3
        //            //"Genicom",        4
        //            //"Tally",          5
        //            //"Pentax",         6

        //            string EMPTY_STRING_INSTEAD_BARCODE2 = "";
        //            string EMPTY_STRING_INSTEAD_BARCODE3 = "";

        //            switch (ClientPickedPrinterCode)
        //            {
        //                case 0:
        //                    #region LaserMatrix BARCODE 2 CONDITION

        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(75, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 1:
        //                    #region Fujitsu
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 2:
        //                    //#region Printronix last edit 2017-12-28 10:22
        //                    ////2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
        //                    //if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    //{
        //                    //    sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
        //                    //}
        //                    //else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    //{
        //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                    //    sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
        //                    //                                   , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

        //                    //}
        //                    //else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    //{
        //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                    //    sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
        //                    //                                   , blank.PadLeft(27, ' '));
        //                    //}
        //                    //else
        //                    //{
        //                    //    // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                    //    sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                    //                                   , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                    //                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

        //                    //}

        //                    //#endregion

        //                    #region 20240920 DCR 67-020 Force not print barcode1,2
        //                    // ระบบจะไม่พิมพ์ Barcode
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ') // barcode not print 
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_150_contract) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        //  พิมพ์ Barcode3 CaId
        //                        sb.AppendFormat("{0}{1}{2}", barcode3 + blank.PadLeft(1, ' ')
        //                                                   , blank.PadLeft(20, ' ') + "สำหรับ กฟภ. เท่านั้น"  
        //                                                   , blank.PadLeft(27, ' '));
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        //sb.AppendFormat("{0}{1}{2}{4}", barcode3           //barcode 3  with padding to 45 char   
        //                        //                                , blank.PadLeft(20, ' ') + " สำหรับ กฟภ. เท่านั้น" 
        //                        //                                , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                        //                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

        //                    }

        //                    #endregion

        //                    break;
        //                case 3:
        //                    #region Data Product BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //                case 4:
        //                    #region Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 5:
        //                    #region Tally BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 6:
        //                    #region Pentax BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }



        //                    #endregion
        //                    break;
        //                default:
        //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
        //                                                       , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
        //                                                       , EMPTY_STRING_INSTEAD_BARCODE3);
        //                    }

        //                    #endregion
        //                    break;
        //            }
        //            sb.Append("\r\n");     //After check print condition


        //            int tmpLenght = 61;
        //            if (StarAppendXY == 12)
        //            {
        //                tmpLenght += 2;
        //            }
        //            //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
        //            //                        , barcode3);  //barcode3 //tmpCaId 
        //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
        //            }

        //            #endregion

        //            sb.Append("\r\n");

        //            //PREVIOUS CODE 2019-NOV-14
        //            //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

        //            sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
        //                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

        //            sb.Append("\r\n");

        //            string EMPTY_STRING_INSTEAD_BARCODE1 = "";

        //            // Printronix ไม่พิมพ์ Barcode 1 
        //            //if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
        //            if (ClientPickedPrinterCode == 2 )  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
        //            {
        //                //sb.Append("\r\n");
        //                sb.AppendFormat("{0}", "สำหรับชำระช่องทางออนไลน์ หมายเลขผู้ใช้ไฟฟ้า Ref.1: " + bb.W_150_contract); //   barcode1    
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
        //                sb.Append("\r\n");
        //            }
        //            //*********************************** U R IN SPOTBILL************************************               
        //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
        //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
        //                sb.Append("\r\n");
        //            }

        //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
        //            {
        //                sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
        //            }

        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
        //                }
        //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
        //                sb.Append("\r\n");
        //            }

        //            //#BLAN2019
        //            //#ISSUE SPOTBILL 2020-JAN-03 FIX GENICOM LOST 1 LINE  Uthen.P 
        //            if (ClientPickedPrinterCode == 4)
        //            {
        //                sb.Append("\r\n");
        //            }

        //            //#BLAN2019
        //            //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
        //            if (ClientPickedPrinterCode == 2)
        //            {
        //                sb.Append("\r\n");
        //            }

        //            #endregion
        //        }
        //        else
        //        {
        //            #region #SPOT BILL BOTTOM PAGE
        //            const int costLength = 14;
        //            if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
        //            {
        //                bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
        //            }
        //            int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
        //            int StarAppend = 12;
        //            int TotalPadding = 0;
        //            if (totalStarLimit >= 12)
        //            {
        //                StarAppend = costLength;
        //                TotalPadding = 11;
        //            }
        //            else
        //            {
        //                StarAppend = 12;
        //                TotalPadding = 14;
        //            }

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
        //                                                    bb.W_10_invoice_no.PadLeft(16, ' ')));          //[36]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
        //                                                    bb.W_40_sname + " " + bb.W_2130_off_tel));      //[37]
        //            sb.Append("\r\n");


        //            #region แก้ไขที่อยู่ลูกค้า 20180123_1455

        //            string tmpCustomerName = null;
        //            if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
        //            {//cust name 1 มีค่า                     
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = bb.W_90_cust_name1;
        //                }
        //            }
        //            else
        //            {//cust name 1 ไม่มี
        //                if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
        //                {//cust name 2 มีค่า 
        //                    tmpCustomerName = bb.W_90_cust_name2;
        //                }
        //                else
        //                {//cust name 2 ไม่มี
        //                    tmpCustomerName = "";
        //                }
        //            }
        //            int custLength = 0;
        //            custLength = StringConvert.TextLength(tmpCustomerName);
        //            if (custLength > 44)
        //            {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
        //                try
        //                {
        //                    tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
        //                }
        //                catch
        //                {
        //                    //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
        //                }
        //            }
        //            if (ClientPickedPrinterCode == 0)
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
        //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
        //            }
        //            else
        //            {
        //                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
        //                                                            StringConvert.PadRight(tmpCustomerName, 44),                //[38]
        //                                                            blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
        //            }

        //            sb.Append("\r\n");
        //            #endregion

        //            #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

        //            StringBuilder sbdAddress = new StringBuilder();
        //            sbdAddress.Append(bb.W_221_address);  //1
        //            if (!String.IsNullOrEmpty(bb.W_222_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_222_address);  //2
        //            if (!String.IsNullOrEmpty(bb.W_223_address))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_223_address);  //3
        //            if (!String.IsNullOrEmpty(bb.W_230_post_code))
        //            {
        //                sbdAddress.Append(" ");
        //            }
        //            sbdAddress.Append(bb.W_230_post_code); //4   

        //            int addressLength = 0;
        //            string tmpAddress = null;
        //            addressLength = StringConvert.TextLength(sbdAddress.ToString());
        //            if (addressLength > 54)
        //            {
        //                tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
        //                string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
        //                if (!String.IsNullOrEmpty(tmpResult[0]))
        //                {//ใส่ข้อมูลแถวที่หนึ่ง
        //                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
        //                    sb.Append("\r\n");
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //                else
        //                {
        //                    if (!String.IsNullOrEmpty(tmpResult[1]))
        //                    {//ใส่ข้อมูลแถวที่สอง
        //                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                    else
        //                    {
        //                        sb.Append("\r\n");
        //                        sb.Append("\r\n");
        //                    }
        //                }
        //            }
        //            else
        //            {
        //                tmpAddress = sbdAddress.ToString();
        //                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
        //                sb.Append("\r\n");
        //                sb.Append("\r\n");
        //            }
        //            #endregion

        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
        //                                                                  , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
        //                                                                  , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
        //                                                                  , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
        //                                                                  , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

        //            sb.Append("\r\n");

        //            sb.Append("\r\n");
        //            const int pos_53_58_63_67 = 2;
        //            const int pos_52_57_62_66 = 1;
        //            const int pos_56_61_65 = 0;
        //            const int pos_68_69_72_73_76 = 16;
        //            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                                    //[49]
        //            sb.Append("\r\n");
        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                                                     //[50]
        //                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                                         //[BLANK]
        //                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                      //[51]
        //                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)        //[52]
        //                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
        //                                                               , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
        //            sb.Append("\r\n");

        //            sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                                                     //[54]
        //                                                                , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)                                           //[55]
        //                                                                , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10)  //[56]   
        //                                                                , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                       //[57]
        //                                                                , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
        //                                                                , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                                                      //[59]
        //                                                           , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                                        //[60]
        //                                                           , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
        //                                                           , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                        //[62]
        //                                                           , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)    //[63]
        //                                                           , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                          //[70]
        //                                                           , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)              //[71]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                         //[91]
        //                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));                      //[97]  
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
        //                                                          blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                                                //[64]
        //                                                          , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)    //[65]
        //                                                          , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                         //[66]
        //                                                          , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)    //[67]
        //                                                          , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
        //                                                          , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));   //[98]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
        //                                            , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
        //                                            , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
        //                                                , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
        //                                                , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
        //            sb.Append("\r\n");


        //            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
        //                                                , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
        //                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

        //            sb.Append("\r\n");

        //            string barcode1 = string.Empty;
        //            barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
        //            string barcode2 = string.Empty;
        //            barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
        //            string barcode3 = string.Empty;
        //            barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";


        //            sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
        //                                                   , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
        //                                                   , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
        //                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
        //                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]
        //            sb.Append("\r\n");

        //            #region Barcode 2 and Barcode 3 alignment lastest edit on 2017-12-28 10:25
        //            switch (ClientPickedPrinterCode)
        //            {
        //                case 0:
        //                    #region LaserMatrix BARCODE 2 CONDITION แก้ไขเท่ากับ Agency

        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(75, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }



        //                    #endregion
        //                    break;
        //                case 1:
        //                    #region Fujitsu
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(33, ' ')  //27 -> 32
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 2:
        //                     #region DCR 67-020 20240920 Savake.b Force not print barcode1,2
        //                    // ระบบจะไม่พิมพ์ Barcode
        //                    if (!String.IsNullOrEmpty(bb.W_150_contract) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_150_contract) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ') // barcode not print 
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_150_contract) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 3 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        //  พิมพ์ Barcode3 CaId
        //                        sb.AppendFormat("{0}{1}{2}", barcode3 , " สำหรับ กฟภ. เท่านั้น" + blank.PadLeft(13, ' ')
        //                                                       , blank.PadLeft(27, ' '));
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}", barcode3 + " " + blank.PadLeft(13, ' ')          //barcode 3  with padding to 45 char   
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

        //                    }
                            
        //                    #endregion
        //                    break;
        //                case 3:
        //                    #region Data Product BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 4:
        //                    #region Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 5:
        //                    #region Tally BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                case 6:
        //                    #region Pentax BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //                default:
        //                    #region Other Auto pick Genicom BARCODE 2 CONDITION
        //                    if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
        //                                                , barcode3);
        //                    }
        //                    else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
        //                        sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
        //                                                       , barcode3);
        //                    }
        //                    else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
        //                        sb.AppendFormat("{0}{1}{2}", barcode2
        //                                                       , blank.PadLeft(27, ' ')
        //                                                       , barcode3);
        //                    }
        //                    else
        //                    {
        //                        // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
        //                        sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
        //                                                       , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
        //                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
        //                                                       , barcode3);
        //                    }
        //                    #endregion
        //                    break;
        //            }
        //            sb.Append("\r\n");     //After check print condition


        //            int tmpLenght = 61;
        //            if (StarAppend == 12)
        //            {
        //                tmpLenght += 2;
        //            }
        //            if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
        //            {
        //                // DCR 67-020 1. ไม่พิมพ์ Barcode Ca. | 2. พิมพ์ข้อความ
        //                // sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]

        //                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(22, ' ')
        //                                           , "สำหรับ กฟภ. เท่านั้น"
        //                                           , blank.PadLeft(25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' '));     //[81]
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
        //            }

        //            #endregion


        //            sb.Append("\r\n");

        //            sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
        //            sb.Append("\r\n");

        //            // DCR 67-020 Not print barcode 1 On Printronix.
        //            if (ClientPickedPrinterCode == 2)  //   เดิม : ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ  
        //            {
        //                //sb.Append("\r\n");
        //                sb.AppendFormat("{0}", "สำหรับชำระช่องทางออนไลน์ หมายเลขผู้ใช้ไฟฟ้าRef.1" + bb.W_150_contract); //   barcode1 
        //            }
        //            else
        //            {

        //                sb.AppendFormat("{0}", barcode1); //   barcode1                    
        //                sb.Append("\r\n");
        //            }
        //            ///***************SPOT BILL***************************************************
        //            //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //                else
        //                {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
        //                    sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
        //                    sb.Append("\r\n");
        //                }
        //            }
        //            else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
        //                sb.Append("\r\n");
        //            }


        //            if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
        //            {
        //                sb.Append("\r\n");       //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
        //            }

        //            if (ClientPickedPrinterCode == 0) //Epson
        //            {
        //                if (String.IsNullOrEmpty(bb.W_1590_barcode1))
        //                {
        //                    sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
        //                }
        //                sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
        //                sb.Append("\r\n");
        //            }
        //            else
        //            {
        //                sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
        //                sb.Append("\r\n");
        //            }


        //            sb.Append("\r\n");

        //            #endregion
        //        }
        //        //*********************************** FOOT PAGE SPOT BILL ************************************
        //        resultTxt = sb.ToString();
        //        //pack into entity
        //        Bills _bill = new Bills();
        //        _bill.BillTxt = resultTxt;
        //        _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
        //        _bills.Add(_bill);
        //    }
        //    return _bills;
        //}
        #endregion

        private List<Bills> AdjustBlueBillLayoutNewForm2024(List<BlueBill> _blueBill)
        {
            bool printedBarcode2;
            //SPOT BILL วางไม่ได้

            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                printedBarcode2 = false; // DCR 67-020 20241105 ตรวจสอบว่ามีการพิมพ์ barcode2 ซึ่งเป็น Caid หรือไม่เพื่อพิมพ์ข้อความ สำหรับ กฟภ. เท่านั้น
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 

                string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

                //*********************************** TOP PAGE SPOT BILL****************************************
                int pos17_18_21_22_25XY = 75;
                int costLengthXY = 14;
                int StarAppendXY = 12;

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region PRINT DOC X,Y MIRROR FROM AGENCY

                    if (PRINTDOC_TYPE == "Y")
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }


                    //REMOVE X FROM RECEIPT NO
                    //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
                    string NewReceipt = bb.W_2340_rec_doc;

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                        //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
                                                                            blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLengthXY, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLengthXY, ' ')));    //[18]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLengthXY, ' ')));    //[20]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]

                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLengthXY, ' ')));    //[21]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' ')));//[22]

                    //ISSUE#BLAN2019 [107]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLengthXY, ' '))); //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
                                                            blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLengthXY, ' ')));     //[24]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25XY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]

                    //ISSUE#BLAN2019 [108]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                               StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLengthXY, ' ')));  //[25]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLengthXY, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]                                                                     
                                                                     blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),         //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLengthXY, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimitXY = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

                    int TotalPaddingXY = 13;
                    if (totalStarLimitXY >= 12)
                    {
                        StarAppendXY = costLengthXY;
                        TotalPaddingXY = 11;
                    }
                    else
                    {
                        StarAppendXY = 12;
                        TotalPaddingXY = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPaddingXY = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppendXY, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPaddingXY, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppendXY, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");
                    //Uthen Fix BillFlag = 'Y'
                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
                    }

                    #endregion
                }
                else
                {
                    #region #SPOT BILL TOP PAGE

                    //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))

                    if (true)
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            if (ClientPickedPrinterCode == 1) // Fujitsu
                            {
                                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                                sb.Append("\r\n");
                                sb.AppendFormat("." + String.Format("{0}                                                                              {1}", " ", "     /////////"));
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                                sb.Append("\r\n");
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(66, ' '), " ///////////////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(80, ' '), "     /////////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }

                    //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));//--[1]

                    //string NewReceiptSpotbill = bb.W_2340_rec_doc;
                    string NewReceiptSpotbill = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptSpotbill.PadLeft(p80 + 14, ' ')); //[1]

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(37, ' '), bb.W_150_contract.PadLeft(54, ' ')));       //[2][3]
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat(GenStar(32).PadLeft(48, ' '));    //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));   //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + GenStar(13).PadLeft(17, ' '), blank.PadLeft(13, ' ') + GenStar(12)));  //[6][7]
                    sb.Append("\r\n");


                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));  //[9]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int st = 11;   //Use for GenStar function
                    const int pos17_18_21_22_25 = 77;
                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                                            //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[18]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(63, ' ') + StringConvert.PadRight(GenStar(7).PadLeft(7, ' '), 7),     //[19]
                                                            blank.PadLeft(7, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[20]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[21]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(69, ' ') + StringConvert.PadRight(GenStar(2).PadLeft(4, ' '), 4),     //[23]
                                                            blank.PadLeft(4, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[24]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[25]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),           //[26]
                                                                     blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),              //[27]
                                                                     blank.PadLeft(31, ' ') + blank.PadRight(18, ' '),      //[28]
                                                                     blank.PadLeft(12, ' '),                                //[29]
                                                                     blank.PadLeft(1, ' ') + blank));                       //[30]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + blank,          //[31]
                                                               blank.PadLeft(12, ' '),                  //[32]
                                                               blank.PadLeft(1, ' ') + blank));         //[33]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(blank.PadLeft(47, ' '), 47),    //[34]
                                                            blank.PadLeft(14, ' ') + GenStar(st).PadLeft(12, ' ')));                        //[35]
                    sb.Append("\r\n");

                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
                    }
                    sb.Append("\r\n");       //ตัดบรรทัดนี้มาจากส่วน bottom
                    #endregion
                }

                //*********************************** BOTTOM PAGE SPOT BILL ************************************

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region #SPOT BILL X,Y

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            GenStar(16)));              //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    string EMPTY_STRING = "";
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
                    sb.Append("\r\n");

                    string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
                                                                   , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
                                                    , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
                                                        , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
                                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_150_contract + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
                                                    , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
                                                    , StringConvert.PadLeft(EMPTY_STRING, costLengthXY)                       //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6

                    string EMPTY_STRING_INSTEAD_BARCODE2 = "";
                    string EMPTY_STRING_INSTEAD_BARCODE3 = "";

                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(75, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

                            }

                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppendXY == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
                    }

                    #endregion

                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

                    sb.Append("\r\n");

                    string EMPTY_STRING_INSTEAD_BARCODE1 = "";

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN SPOTBILL************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-JAN-03 FIX GENICOM LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 4)
                    {
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 2)
                    {
                        sb.Append("\r\n");
                    }

                    #endregion
                }
                else
                {
                    #region #SPOT BILL BOTTOM PAGE
                    const int costLength = 14;
                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                    int StarAppend = 12;
                    int TotalPadding = 0;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            bb.W_10_invoice_no.PadLeft(16, ' ')));          //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                            bb.W_40_sname + " " + bb.W_2130_off_tel));      //[37]
                    sb.Append("\r\n");


                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455

                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }
                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }

                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                          , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                          , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                                    //[49]
                    sb.Append("\r\n");
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                                                     //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                                         //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                      //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)        //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                                                     //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)                                           //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10)  //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                       //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                                                      //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                                        //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                        //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)    //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                          //[70]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)              //[71]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                                                //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)    //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                         //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)    //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));   //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                        , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                        , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                    sb.Append("\r\n");

                    string barcode1 = string.Empty;
                    //barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    barcode1 = "BLAN_Barcode_1_Start" + bb.W_1590_barcode1 + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";


                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                           , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                           , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]
                    sb.Append("\r\n");

                    #region Barcode 2 and Barcode 3 alignment lastest edit on 2017-12-28 10:25
                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION แก้ไขเท่ากับ Agency

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(75, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", barcode2
                                                               , blank.PadLeft(27, ' '));
                                printedBarcode2 = true; //  20241105 DCR 67-020 พิมพ์ barcode2 CaId แล้วจะพิมพ์ข้อความจำกัด
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]
                                printedBarcode2 = true; //  20241105 DCR 67-020 พิมพ์ barcode2 CaId แล้วจะพิมพ์ข้อความจำกัด
                            }
                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }
                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        if (printedBarcode2)
                        {
                            // พิมพ์กรณีที่พิมพ์ Barcode2 
                            sb.AppendFormat("{0}{1}", 
                                 blank.PadLeft(22, ' ') + "สำหรับ กฟภ. เท่านั้น"
                                , blank.PadLeft(25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));    //[81] 
                        }
                        else 
                        {
                            // พิมพ์แบบเดิม. โดยไม่มี Barcode 2
                            sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));     //[81]
                        } 
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                    }

                    #endregion


                    sb.Append("\r\n");

                    sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                    sb.Append("\r\n");

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        // DCR 67-020 หากมีการพิมพ์ Barcode2 (Barcode Caid) จะพิมพ์ข้อความด้านล่างแทน Barcode1
                        if (printedBarcode2)
                            sb.AppendFormat("{0}{1}", "สำหรับชำระช่องทางออนไลน์ หมายเลขผู้ใช้ไฟฟ้า Ref.1 ", bb.W_150_contract);

                        sb.Append("\r\n");
                    }
                    else
                    {

                        sb.AppendFormat("{0}", barcode1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    ///***************SPOT BILL***************************************************
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                        sb.Append("\r\n");
                    }


                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                    {
                        sb.Append("\r\n");       //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }


                    sb.Append("\r\n");

                    #endregion
                }
                //*********************************** FOOT PAGE SPOT BILL ************************************
                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        private List<Bills> AdjustAgencyBillLayoutNewForm2024No2(List<BlueBill> _blueBill)
        {
            //Bill ตัวแทน
            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 

                string PRINTDOC_TYPE = bb.W_01_print_doc.Substring(bb.W_01_print_doc.Length - 1, 1).ToUpper();

                //*********************************** TOP บิลตัวแทน  AGENCY************************************
                const int costLength = 14;
                const int pos17_18_21_22_25 = 75;
                int StarAppend = 12;

                //#ISSUE Discount3% 2020-04-03
                //bb.W_130_period       -->[15]
                //bb.W_2370_oth_dis4    -->[28]
                //bb.W_2400_oth_dis7    -->[31]

                bool isDiscount3Percent = false;
                isDiscount3Percent = ConfirmDiscount3Percent(bb.W_130_period, bb.W_2370_oth_dis4, bb.W_2400_oth_dis7);
                if (isDiscount3Percent == true)
                {
                    //bb.W_1480_net_before_vat_txt    = "";      //-->[22]
                    //bb.W_1490_tax_rate_txt          = "";      //-->[23]
                    //bb.W_1500_tax_amount_txt        = "";      //-->[24]
                    //bb.W_1510_total_amnt_txt        = "";      //-->[25]
                }
                //#END ISSUE Discount3% 

                #region ส่วนของใบเสร็จรับเงินค่าไฟฟ้า/ใบกำกับภาษี

                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region PRINT DOC X,Y

                    if (PRINTDOC_TYPE == "Y")
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(76, ' '), " /////////////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }


                    //REMOVE X FROM RECEIPT NO
                    //string NewReceipt = bb.W_2340_rec_doc.Substring(0, bb.W_2340_rec_doc.Length - 1);
                    string NewReceipt = bb.W_2340_rec_doc;

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceipt.PadLeft(p80 + 13, ' ')); //[1]
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12))); //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel); //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2)); //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid)); //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' '))); //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                                                //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                                          //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                        //blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),              //[15]
                                                                            blank.PadLeft(1, ' ') + HideBillPeriodCaseTypeY(PRINTDOC_TYPE, bb.W_130_period).PadLeft(7, ' ') + blank.PadLeft(1, ' '),    //[15]
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),      //[16]
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]

                    //ISSUE#BLAN2019 [107]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
                                                            blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]

                    //ISSUE#BLAN2019 [108]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                               StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
                                                                     blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51                                                                    
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]    LAST EDIT: 2019DEC02 09:51                                                                                                                                         
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]                         //[33]
                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;

                    int TotalPadding = 13;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");

                    #endregion
                }
                else
                {
                    #region ORIGINAL PRINT DOC

                    //if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
                    if (((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == "")) || (Convert35ToDouble(bb.W_2200_gtot_amn.Trim()) == true))
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }



                    //Old receipt number
                    //sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));      //--[1]

                    //New Receipt number BLAN2019
                    //string NewReceiptDCR2019 = bb.W_2340_rec_doc;
                    string NewReceiptDCR2019 = CreateReceiptNoBLAN2019(bb.W_10_invoice_no, bb.W_2340_rec_doc);
                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' '), NewReceiptDCR2019.PadLeft(p80 + 14, ' ')); //[1]

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    const int pos2_4 = p30 + 2;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel);  //[4]
                    sb.Append("\r\n");

                    const int pos5_6_8_9 = p10;

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2));   //[5]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid));  //[6][7]
                    sb.Append("\r\n");


                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                    sb.Append("\r\n");

                    #region 200180108_1412 fix address exceed 86

                    StringBuilder sbdTop = new StringBuilder();
                    sbdTop.Append(bb.W_216_address);
                    if (!String.IsNullOrEmpty(bb.W_217_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_217_address);
                    if (!String.IsNullOrEmpty(bb.W_218_address))
                    {
                        sbdTop.Append(" ");
                    }
                    sbdTop.Append(bb.W_218_address);
                    int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                    string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                    tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                    if (addressTopLength > 86)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                    }
                    //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                    sb.Append("\r\n");
                    #endregion

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                            //[10]
                                                                            blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                      //[11]
                                                                            blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]--16
                                                                            blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]--8
                                                                            blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                                                                            blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),                //[15]
                        //blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_490_consumption_txt)) + blank.PadLeft(5, ' '),//[16] W_490_consumption_txt get data from w_1390_ftunit_txt from ts.BillDetail
                                                                            blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2360_unit_rec)) + blank.PadLeft(5, ' '),
                                                                            blank.PadLeft(1, ' ')));



                    sb.Append("\r\n");


                    //const int costLength = 14;
                    //const int pos17_18_21_22_25 = 75;
                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                    //                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
                    //ISSUE#BLAN2019 [105] 
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}", blank.PadLeft(1, ' '),
                                                                  StringConvert.PadRight(bb.W_2430_rec_text1, 60) + blank.PadLeft(3, ' '),                                                      //[105]
                                                                  StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                                                                               //[19]
                                                                  blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));    //[20]

                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
                    //ISSUE#BLAN2019 [106]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                               StringConvert.PadRight(bb.W_2440_rec_text2, 60) + blank.PadLeft(14, ' '),                                  //[106]
                                                               StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]

                    sb.Append("\r\n");

                    // sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]
                    // ISSUE#BLAN2019 [107]
                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                                   StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                                   StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' '))); //[22]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(1, ' '),
                                                                   StringConvert.PadRight(bb.W_2450_rec_text3, 60) + blank.PadLeft(14, ' '),                                   //[107]
                                                                   StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' '))); //[22]
                    }

                    sb.Append("\r\n");



                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight("", 2),                                                         //[23]
                                                                blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));       //[24]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),                                                         //[23]
                                                                blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
                    }
                    sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    //ISSUE#BLAN2019 [108]
                    // Discount 3% 2020-04-07 Uthen.P
                    if (isDiscount3Percent == true)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                                   StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                                   StringConvert.InsertComma(SubStringTo12Character("")).PadLeft(costLength, ' ')));                        //[25]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(10, ' '),
                                                                   StringConvert.PadRight(bb.W_2350_rec_date, 10) + blank.PadLeft(55, ' '),                                 //[108]
                                                                   StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                    }

                    sb.Append("\r\n");



                    //sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                    //                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                    //                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                    //                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
                    //                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]
                    //sb.Append("\r\n");

                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                            //[33]

                    //U R IN TOP ORIGINAL PRINTDOC

                    //ISSUE#BLAN2019 EDIT [28][29][30]
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),               //[26]
                                                                     blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),                          //[27]
                                                                     blank.PadLeft(20, ' ') + StringConvert.PadRight(bb.W_2370_oth_dis4, 25),       //[28] LAST EDIT: 2019DEC02 09:51
                        //blank.PadLeft(20, ' ') + bb.W_2370_oth_dis4.PadLeft(25, ' '),                //[28] LAST EDIT: 2019DEC02 09:51
                                                                     StringConvert.InsertComma(SubStringTo12Character(bb.W_2380_oth_dis5)).PadLeft(costLength, ' '), //[29]
                                                                     blank.PadLeft(1, ' ') + bb.W_2390_oth_dis6));                         //[30]
                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                    //                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                    //                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                              //[33]

                    //ISSUE#BLAN2019 EDIT [31][32][33]
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(50, ' ') + StringConvert.PadRight(bb.W_2400_oth_dis7, 25)     //[31]  LAST EDIT: 2019DEC02 09:51 
                        //sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(53, ' ') + bb.W_2400_oth_dis7.PadLeft(25, ' ')              //[31]  LAST EDIT: 2019NOV28 16:08                                                                                                                  
                                                             , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2410_oth_dis8)), 13)   //[32]                                                        
                                                             , blank.PadLeft(1, ' ') + bb.W_2420_oth_dis9));                           //[33]


                    sb.Append("\r\n");

                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                    }
                    int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                    //int StarAppend = 12;
                    int TotalPadding = 13;
                    if (totalStarLimit >= 12)
                    {
                        StarAppend = costLength;
                        TotalPadding = 11;
                    }
                    else
                    {
                        StarAppend = 12;
                        TotalPadding = 14;
                    }

                    #region Fix 2200 Grand Amount is null 2018Jan10
                    if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                        blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                    }
                    else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
                    }
                    else
                    {
                        TotalPadding = 15;
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                         blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                        //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                        //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

                    }

                    #endregion

                    sb.Append("\r\n");



                    #endregion
                }

                #endregion

                #region ส่วนของใบแจ้งค่าไฟฟ้า
                //*********************************** BOTTOM บิลตัวแทน AGENCY*********************************
                if (PRINTDOC_TYPE == "X" || PRINTDOC_TYPE == "Y")
                {
                    #region #BOTTOM BLUE BILL X,Y

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            GenStar(16)));              //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), ""));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(GenStar(44), 44),   //[38]
                                                                    blank.PadLeft(12, ' ') + GenStar(16)));    //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));      //[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));  //[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), GenStar(44)));          //[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    string EMPTY_STRING = "";
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 6)      //[43]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 12)                               //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 5)      //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)      //[47]
                                                                          , StringConvert.PadLeft(EMPTY_STRING, 7)));                             //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), blank.PadRight(3, ' ')));                                                //[49]
                    sb.Append("\r\n");

                    string PADDING_BEFORE_STAR = blank.PadRight(2, ' ');
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                             //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                    //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12))); //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                      //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)        //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                             //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)));  //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(EMPTY_STRING, 3)                                                                   //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                         //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)     //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                          //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(EMPTY_STRING, 7)                                         //[70]
                                                                   , blank.PadLeft(6, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)                   //[71]  
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                         //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(EMPTY_STRING, 2)                                            //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)      //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10)                           //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)   //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                          //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                                //[83]
                                                    , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)         //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                                //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                             //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(EMPTY_STRING, 3)                        //[74]
                                                        , blank.PadLeft(3, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)  //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 48)                            //[85]
                                                        , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12) //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)                        //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));                     //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_150_contract + "BLAN_Barcode_2_Stop"; // DCR 67-020
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(EMPTY_STRING, 40)     //[86]
                                                    , StringConvert.PadLeft(EMPTY_STRING, 20)                               //[77]
                                                    , StringConvert.PadLeft(EMPTY_STRING, costLength)                       //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 8)        //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 10));     //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6

                    string EMPTY_STRING_INSTEAD_BARCODE2 = "";
                    string EMPTY_STRING_INSTEAD_BARCODE3 = "";

                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(75, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));        //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' '));          //[80]

                            }

                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))             // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                   //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                           //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                         //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", EMPTY_STRING_INSTEAD_BARCODE2
                                                               , blank.PadLeft(27, ' ')
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", EMPTY_STRING_INSTEAD_BARCODE2          //barcode2    
                                                               , StringConvert.PadRight(EMPTY_STRING, 14)                                                     //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(EMPTY_STRING, 11) + blank.PadLeft(1, ' ')      //[80]
                                                               , EMPTY_STRING_INSTEAD_BARCODE3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]

                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12)); //[81]
                    }

                    #endregion

                    sb.Append("\r\n");

                    //PREVIOUS CODE 2019-NOV-14
                    //sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));        //[82]

                    sb.AppendFormat("{0}{1}", blank.PadLeft(1, ' ') + StringConvert.PadRight(" ", 48)
                                                , blank.PadLeft(12, ' ') + PADDING_BEFORE_STAR + StringConvert.PadLeft(GenStar(12), 12));   //[82]

                    sb.Append("\r\n");

                    string EMPTY_STRING_INSTEAD_BARCODE1 = "";

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", EMPTY_STRING_INSTEAD_BARCODE1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN AGENCY************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47


                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + EMPTY_STRING + " " + EMPTY_STRING);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + EMPTY_STRING + " " + EMPTY_STRING);             //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING + " " + EMPTY_STRING, 48)); //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //FUJITSU
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(EMPTY_STRING, 48));   //[90]
                        sb.Append("\r\n");
                    }

                    //BLAN2019
                    //2020-JAN-03 FIX TALLY GENICOM CASE X,Y NEED TO ADD 1 LINE Uthen.P
                    if (ClientPickedPrinterCode == 4) // GENICOM
                    {
                        sb.Append("\r\n");
                    }

                    //#BLAN2019
                    //#ISSUE SPOTBILL 2020-FEB-16 FIX PRINTRONIX LOST 1 LINE  Uthen.P 
                    if (ClientPickedPrinterCode == 2)
                    {
                        sb.Append("\r\n");
                    }

                    #endregion
                }
                else
                {
                    #region #BOTTOM PAGE AGENCY BILL
                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                            bb.W_10_invoice_no.PadLeft(16, ' ')));         //[36]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                            bb.W_40_sname + " " + bb.W_2130_off_tel));     //[37]
                    sb.Append("\r\n");

                    #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                    string tmpCustomerName = null;
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                    {//cust name 1 มีค่า                     
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = bb.W_90_cust_name1;
                        }
                    }
                    else
                    {//cust name 1 ไม่มี
                        if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                        {//cust name 2 มีค่า 
                            tmpCustomerName = bb.W_90_cust_name2;
                        }
                        else
                        {//cust name 2 ไม่มี
                            tmpCustomerName = "";
                        }
                    }
                    int custLength = 0;
                    custLength = StringConvert.TextLength(tmpCustomerName);
                    if (custLength > 44)
                    {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                        try
                        {
                            tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                        }
                        catch
                        {
                            //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                        }
                    }

                    if (ClientPickedPrinterCode == 0)
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                    StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                    blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                    }
                    sb.Append("\r\n");
                    #endregion

                    #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                    StringBuilder sbdAddress = new StringBuilder();
                    sbdAddress.Append(bb.W_221_address);  //1
                    if (!String.IsNullOrEmpty(bb.W_222_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_222_address);  //2
                    if (!String.IsNullOrEmpty(bb.W_223_address))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_223_address);  //3
                    if (!String.IsNullOrEmpty(bb.W_230_post_code))
                    {
                        sbdAddress.Append(" ");
                    }
                    sbdAddress.Append(bb.W_230_post_code); //4   

                    int addressLength = 0;
                    string tmpAddress = null;
                    addressLength = StringConvert.TextLength(sbdAddress.ToString());
                    if (addressLength > 54)
                    {
                        tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                        string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                        if (!String.IsNullOrEmpty(tmpResult[0]))
                        {//ใส่ข้อมูลแถวที่หนึ่ง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                            sb.Append("\r\n");
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                            }
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(tmpResult[1]))
                            {//ใส่ข้อมูลแถวที่สอง
                                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                            else
                            {
                                sb.Append("\r\n");
                                sb.Append("\r\n");
                            }
                        }
                    }
                    else
                    {
                        tmpAddress = sbdAddress.ToString();
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                        sb.Append("\r\n");
                        sb.Append("\r\n");
                    }
                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                          , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                          , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                          , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                          , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                    sb.Append("\r\n");

                    sb.Append("\r\n");
                    const int pos_53_58_63_67 = 2;
                    const int pos_52_57_62_66 = 1;
                    const int pos_56_61_65 = 0;
                    const int pos_68_69_72_73_76 = 16;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                //[49]
                    sb.Append("\r\n");
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                              //[50]
                                                                       , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                     //[BLANK]
                                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                           //[51]
                                                                       , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)                          //[52]
                                                                       , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                       , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                    sb.Append("\r\n");

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                 //[54]
                                                                        , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)       //[55]
                                                                        , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10) //[56]   
                                                                        , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                         //[57]
                                                                        , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                        , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                              //[59]
                                                                   , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                //[60]
                                                                   , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                                      //[62]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)  //[63]
                                                                   , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                  //[70]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)      //[71]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                 //[91]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));      //[97]  
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                                  blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                        //[64]
                                                                  , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)                                    //[65]
                                                                  , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                                                         //[66]
                                                                  , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)     //[67]
                                                                  , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                                  , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));                       //[98]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                    sb.Append("\r\n");

                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                        , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                        , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                    sb.Append("\r\n");


                    sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                        , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                        , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                    sb.Append("\r\n");



                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                    string barcode2 = string.Empty;
                    barcode2 = "BLAN_Barcode_2_Start" + bb.W_150_contract + "BLAN_Barcode_2_Stop"; // DCR 67-020
                    string barcode3 = string.Empty;
                    barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";




                    sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                    , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                    , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]

                    sb.Append("\r\n");

                    #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                    //"LaserMatrix",    0
                    //"Fujitsu",        1
                    //"Printronix",     2
                    //"Data Product",   3
                    //"Genicom",        4
                    //"Tally",          5
                    //"Pentax",         6
                    switch (ClientPickedPrinterCode)
                    {
                        case 0:
                            #region LaserMatrix BARCODE 2 CONDITION

                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(75, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 1:
                            #region Fujitsu
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(33, ' ')  //27 -> 32
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 2:
                            #region Printronix last edit 2017-12-28 10:22
                            //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}", barcode2
                                                               , blank.PadLeft(27, ' '));
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

                            }



                            #endregion
                            break;
                        case 3:
                            #region Data Product BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 4:
                            #region Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 5:
                            #region Tally BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        case 6:
                            #region Pentax BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }



                            #endregion
                            break;
                        default:
                            #region Other Auto pick Genicom BARCODE 2 CONDITION
                            if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                            {
                                sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                        , barcode3);
                            }
                            else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                               , barcode3);
                            }
                            else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                                sb.AppendFormat("{0}{1}{2}", barcode2
                                                               , blank.PadLeft(27, ' ')
                                                               , barcode3);
                            }
                            else
                            {
                                // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                                sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                               , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                               , barcode3);
                            }

                            #endregion
                            break;
                    }
                    sb.Append("\r\n");     //After check print condition


                    int tmpLenght = 61;
                    if (StarAppend == 12)
                    {
                        tmpLenght += 2;
                    }
                    //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                    //                        , barcode3);  //barcode3 //tmpCaId 
                    if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                    {
                        if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                        }
                        else
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                        }

                    }
                    else
                    {
                        if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'));
                        }
                        else
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                        }

                    }

                    #endregion

                    sb.Append("\r\n");

                    sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                    sb.Append("\r\n");

                    if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                    {
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", barcode1); //   barcode1                    
                        sb.Append("\r\n");
                    }
                    //*********************************** U R IN AGENCY************************************               
                    //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                        else
                        {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                            sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                            sb.Append("\r\n");
                        }
                    }
                    else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                        sb.Append("\r\n");
                    }

                    if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                    {
                        sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                    }

                    if (ClientPickedPrinterCode == 0) //Epson
                    {
                        if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                        {
                            sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                        }
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                        sb.Append("\r\n");
                    }

                    sb.Append("\r\n");

                    #endregion
                }
                #endregion

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }



        #endregion

        //Bill Agency ตัวแทน แบบใหม่
        private List<Bills> AdjustAgencyBillLayoutNewForm2018(List<BlueBill> _blueBill)
        {
            //Bill ตัวแทน
            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 
                //*********************************** TOP PAGE AGENCY************************************
                #region #TOP PAGE AGENCY

                if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
                {
                    if (ClientPickedPrinterCode == 1) // Fujitsu
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                        sb.Append("\r\n");
                        sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                        sb.Append("\r\n");
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                        sb.Append("\r\n");
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                        sb.Append("\r\n");
                    }
                }
                else
                {
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }


                sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));      //--[1]
                sb.Append("\r\n");

                sb.Append("\r\n");

                const int pos2_4 = p30 + 2;
                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}", blank.PadLeft(15, ' '), bb.W_40_sname + " " + bb.W_2130_off_tel);  //[4]
                sb.Append("\r\n");

                const int pos5_6_8_9 = p10;

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_90_cust_name1, bb.W_90_cust_name2));   //[5]
                sb.Append("\r\n");


                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + bb.W_2081_taxid.PadLeft(17, ' '), blank.PadLeft(13, ' ') + bb.W_2082_taxid));  //[6][7]
                sb.Append("\r\n");


                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                sb.Append("\r\n");

                #region 200180108_1412 fix address exceed 86

                StringBuilder sbdTop = new StringBuilder();
                sbdTop.Append(bb.W_216_address);
                if (!String.IsNullOrEmpty(bb.W_217_address))
                {
                    sbdTop.Append(" ");
                }
                sbdTop.Append(bb.W_217_address);
                if (!String.IsNullOrEmpty(bb.W_218_address))
                {
                    sbdTop.Append(" ");
                }
                sbdTop.Append(bb.W_218_address);
                int addressTopLength = StringConvert.TextLength(sbdTop.ToString());
                string tmpAddressTop = GetFirstLineOfString(StringFormatIgnoredSpace(sbdTop.ToString(), 87));
                tmpAddressTop = tmpAddressTop.Replace("\r\n", string.Empty);
                if (addressTopLength > 86)
                {
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), tmpAddressTop));
                }
                else
                {
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), sbdTop.ToString()));
                }
                //sb.AppendFormat(String.Format("{0}{1} {2} {3}", blank.PadLeft(10, ' '), bb.W_216_address, bb.W_217_address, bb.W_218_address));  //[9]
                sb.Append("\r\n");
                #endregion

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", bb.W_140_reg.PadLeft(10, ' '),                                            //[10]
                                                                        blank.PadLeft(3, ' ') + bb.W_1840_mru.PadLeft(8, ' '),                      //[11]
                                                                        blank.PadLeft(1, ' ') + bb.W_160_device.PadLeft(12, ' ') + blank.PadLeft(3, ' '),               //[12]--16
                                                                        blank.PadLeft(1, ' ') + bb.W_171_ettat_code.PadLeft(5, ' ') + blank.PadLeft(2, ' '),            //[13]--8
                                                                        blank.PadLeft(2, ' ') + bb.W_200_mr_date.PadLeft(8, ' ') + blank.PadLeft(2, ' '),               //[14]
                                                                        blank.PadLeft(1, ' ') + bb.W_130_period.PadLeft(7, ' ') + blank.PadLeft(1, ' '),                //[15]
                                                                        blank.PadLeft(1, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_490_consumption_txt)) + blank.PadLeft(5, ' '),//[16] W_490_consumption_txt get data from w_1390_ftunit_txt from ts.BillDetail
                                                                        blank.PadLeft(1, ' ')));



                sb.Append("\r\n");

                const int costLength = 14;
                const int pos17_18_21_22_25 = 75;
                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)).PadLeft(costLength, ' ')));        //[17]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)).PadLeft(costLength, ' ')));    //[18]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(64, ' ') + StringConvert.PadRight(bb.W_1380_fttot_txt, 7),                        //[19]
                                                        blank.PadLeft(4, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)).PadLeft(costLength, ' ')));                      //[20]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)).PadLeft(costLength, ' ')));    //[21]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)).PadLeft(costLength, ' ')));//[22]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(71, ' ') + StringConvert.PadRight(bb.W_1490_tax_rate_txt, 2),         //[23]
                                                        blank.PadLeft(2, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)).PadLeft(costLength, ' ')));     //[24]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(costLength, ' ')));  //[25]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),   //[26]
                                                                 blank.PadLeft(3, ' ') + bb.BillSeqNo.PadLeft(9, ' '),              //[27]
                                                                 blank.PadLeft(31, ' ') + bb.W_2140_oth_dis1.PadLeft(16, ' '),      //[28]
                                                                 StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)).PadLeft(costLength, ' '),    //[29]
                                                                 blank.PadLeft(1, ' ') + bb.W_2160_oth_dis3));                      //[30]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + StringConvert.PadRight(bb.W_2170_sec_dis1, 14)    //[31]                                                                                                                                             
                                                         , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 13)   //[32]                                                        
                                                         , blank.PadLeft(1, ' ') + bb.W_2190_sec_dis3));                            //[33]
                sb.Append("\r\n");

                if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                {
                    bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                }
                int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                int StarAppend = 12;
                int TotalPadding = 13;
                if (totalStarLimit >= 12)
                {
                    StarAppend = costLength;
                    TotalPadding = 11;
                }
                else
                {
                    StarAppend = 12;
                    TotalPadding = 14;
                }

                #region Fix 2200 Grand Amount is null 2018Jan10
                if (ClientPickedPrinterCode == 0) //LaserMatrix -->Epson
                {
                    TotalPadding = 15;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                    blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                }
                else if (ClientPickedPrinterCode == 1) //Fujitsu  max length 95
                {
                    TotalPadding = 15;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                     blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 
                }
                else
                {
                    TotalPadding = 15;
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(4, ' ') + StringConvert.PadLeft(bb.W_2210_spell_gtot, 58), //[34]
                                                     blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn.Trim())).PadLeft(StarAppend, '*')));  //[35] 

                    //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(bb.W_2210_spell_gtot.PadLeft(47, ' '), 47), //[34]
                    //                                       blank.PadLeft(TotalPadding, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')));  //[35]

                }

                #endregion

                sb.Append("\r\n");

                #endregion
                //*********************************** BOTTOM PAGE AGENCY*********************************
                #region #BOTTOM PAGE AGENCY BILL
                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                        bb.W_10_invoice_no.PadLeft(16, ' ')));         //[36]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                        bb.W_40_sname + " " + bb.W_2130_off_tel));     //[37]
                sb.Append("\r\n");

                #region แก้ไขที่อยู่ลูกค้า 20180123_1455
                string tmpCustomerName = null;
                if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                {//cust name 1 มีค่า                     
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                    {//cust name 2 มีค่า 
                        tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                    }
                    else
                    {//cust name 2 ไม่มี
                        tmpCustomerName = bb.W_90_cust_name1;
                    }
                }
                else
                {//cust name 1 ไม่มี
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                    {//cust name 2 มีค่า 
                        tmpCustomerName = bb.W_90_cust_name2;
                    }
                    else
                    {//cust name 2 ไม่มี
                        tmpCustomerName = "";
                    }
                }
                int custLength = 0;
                custLength = StringConvert.TextLength(tmpCustomerName);
                if (custLength > 44)
                {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                    try
                    {
                        tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                    }
                    catch
                    {
                        //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                    }
                }

                if (ClientPickedPrinterCode == 0)
                {
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                }
                else
                {
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                }
                sb.Append("\r\n");
                #endregion

                #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                StringBuilder sbdAddress = new StringBuilder();
                sbdAddress.Append(bb.W_221_address);  //1
                if (!String.IsNullOrEmpty(bb.W_222_address))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_222_address);  //2
                if (!String.IsNullOrEmpty(bb.W_223_address))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_223_address);  //3
                if (!String.IsNullOrEmpty(bb.W_230_post_code))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_230_post_code); //4   

                int addressLength = 0;
                string tmpAddress = null;
                addressLength = StringConvert.TextLength(sbdAddress.ToString());
                if (addressLength > 54)
                {
                    tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                    string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                    if (!String.IsNullOrEmpty(tmpResult[0]))
                    {//ใส่ข้อมูลแถวที่หนึ่ง
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                        sb.Append("\r\n");
                        if (!String.IsNullOrEmpty(tmpResult[1]))
                        {//ใส่ข้อมูลแถวที่สอง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        if (!String.IsNullOrEmpty(tmpResult[1]))
                        {//ใส่ข้อมูลแถวที่สอง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                            sb.Append("\r\n");
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.Append("\r\n");
                            sb.Append("\r\n");
                        }
                    }
                }
                else
                {
                    tmpAddress = sbdAddress.ToString();
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }
                #endregion

                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                      , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                      , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                      , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                      , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                sb.Append("\r\n");

                sb.Append("\r\n");
                const int pos_53_58_63_67 = 2;
                const int pos_52_57_62_66 = 1;
                const int pos_56_61_65 = 0;
                const int pos_68_69_72_73_76 = 16;
                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                //[49]
                sb.Append("\r\n");
                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                              //[50]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                     //[BLANK]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                           //[51]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)                          //[52]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                   , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                 //[54]
                                                                    , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)       //[55]
                                                                    , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10) //[56]   
                                                                    , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                         //[57]
                                                                    , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                    , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                              //[59]
                                                               , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                //[60]
                                                               , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                                      //[62]
                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)  //[63]
                                                               , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                  //[70]
                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)      //[71]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                 //[91]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));      //[97]  
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                              blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                        //[64]
                                                              , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)                                    //[65]
                                                              , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                                                         //[66]
                                                              , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)     //[67]
                                                              , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                              , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                              , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));                       //[98]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                    , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                    , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                sb.Append("\r\n");


                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                sb.Append("\r\n");



                string barcode1 = string.Empty;
                barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                string barcode2 = string.Empty;
                barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                string barcode3 = string.Empty;
                barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";




                sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]

                sb.Append("\r\n");

                #region Barcode 3 alignment with condition lastest edit: 2017-12-28 10:25
                //"LaserMatrix",    0
                //"Fujitsu",        1
                //"Printronix",     2
                //"Data Product",   3
                //"Genicom",        4
                //"Tally",          5
                //"Pentax",         6
                switch (ClientPickedPrinterCode)
                {
                    case 0:
                        #region LaserMatrix BARCODE 2 CONDITION

                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(75, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 1:
                        #region Fujitsu
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(33, ' ')  //27 -> 32
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 2:
                        #region Printronix last edit 2017-12-28 10:22
                        //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}", barcode2
                                                           , blank.PadLeft(27, ' '));
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

                        }



                        #endregion
                        break;
                    case 3:
                        #region Data Product BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 4:
                        #region Genicom BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 5:
                        #region Tally BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 6:
                        #region Pentax BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    default:
                        #region Other Auto pick Genicom BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }

                        #endregion
                        break;
                }
                sb.Append("\r\n");     //After check print condition


                int tmpLenght = 61;
                if (StarAppend == 12)
                {
                    tmpLenght += 2;
                }
                //sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*')   //[81]
                //                        , barcode3);  //barcode3 //tmpCaId 
                if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                {
                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                    }

                }
                else
                {
                    if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)).PadLeft(StarAppend, '*'));
                    }
                    else
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                    }

                }

                #endregion

                sb.Append("\r\n");

                sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                sb.Append("\r\n");

                if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                {
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", barcode1); //   barcode1                    
                    sb.Append("\r\n");
                }
                //*********************************** U R IN AGENCY************************************               
                //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                if (ClientPickedPrinterCode == 0) //Epson
                {
                    if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                        sb.Append("\r\n");
                    }
                    else
                    {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                        sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                        sb.Append("\r\n");
                    }
                }
                else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                {
                    sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                    sb.Append("\r\n");
                }

                if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                {
                    sb.Append("\r\n");   //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                }

                if (ClientPickedPrinterCode == 0) //Epson
                {
                    if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                    {
                        sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                    }
                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                    sb.Append("\r\n");
                }

                sb.Append("\r\n");

                #endregion

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        //Spot Bill   วางไม่ได้
        private List<Bills> AdjustBlueBillLayoutNewForm2018(List<BlueBill> _blueBill)
        {
            //SPOT BILL วางไม่ได้

            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.

                const int p10 = 10, p20 = 20, p30 = 30, p40 = 40, p50 = 50;
                const int p60 = 60, p70 = 70, p80 = 80, p90 = 90, p100 = 100;

                StringBuilder sb = new StringBuilder();
                //***Remark \r\n = CR&LF 
                //*********************************** TOP PAGE SPOT BILL****************************************
                #region #SPOT BILL TOP PAGE
                if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
                {
                    if (ClientPickedPrinterCode == 1) // Fujitsu
                    {
                        if (ClientPickedPrinterCode == 1) // Fujitsu
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat("." + String.Format("{0}                                                                                  {1}", " ", "     /////"));
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                            sb.Append("\r\n");
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), " /////////"));
                        sb.Append("\r\n");
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(84, ' '), "     /////"));
                        sb.Append("\r\n");
                    }
                }
                else
                {
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }

                sb.AppendFormat("{0}", bb.W_10_invoice_no.PadLeft(p80 + 15, ' '));//--[1]
                sb.Append("\r\n");

                sb.Append("\r\n");

                const int pos2_4 = p30 + 2;
                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(37, ' '), bb.W_150_contract.PadLeft(54, ' ')));       //[2][3]
                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(32, ' ') + StringConvert.PadRight(bb.W_2070_taxid_p, 20) + blank.PadLeft(27, ' '), StringConvert.PadRight(bb.W_150_contract, 12)));       //[2][3]
                sb.Append("\r\n");

                sb.AppendFormat(GenStar(32).PadLeft(48, ' '));    //[4]
                sb.Append("\r\n");

                const int pos5_6_8_9 = p10;

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));   //[5]
                sb.Append("\r\n");


                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(6, ' ') + GenStar(13).PadLeft(17, ' '), blank.PadLeft(13, ' ') + GenStar(12)));  //[6][7]
                sb.Append("\r\n");


                //sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), bb.W_2120_pay_adrc.PadLeft(20, ' ')));      //[8]
                sb.Append("\r\n");


                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(10, ' '), GenStar(38)));  //[9]
                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.Append("\r\n");
                const int st = 11;   //Use for GenStar function
                const int pos17_18_21_22_25 = 77;
                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                                            //[17]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[18]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(63, ' ') + StringConvert.PadRight(GenStar(7).PadLeft(7, ' '), 7),     //[19]
                                                        blank.PadLeft(7, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[20]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[21]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[22]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(69, ' ') + StringConvert.PadRight(GenStar(2).PadLeft(4, ' '), 4),     //[23]
                                                        blank.PadLeft(4, ' ') + GenStar(st).PadLeft(12, ' ')));                             //[24]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}", blank.PadLeft(pos17_18_21_22_25, ' ') + GenStar(st).PadLeft(12, ' ')));                //[25]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}", blank.PadLeft(10, ' ') + bb.W_1950_collector_id.PadLeft(8, ' '),           //[26]
                                                                 blank.PadLeft(3, ' ') + GetFixFromRight(bb.BillSeqNo).PadLeft(9, ' '),              //[27]
                                                                 blank.PadLeft(31, ' ') + blank.PadRight(18, ' '),      //[28]
                                                                 blank.PadLeft(12, ' '),                                //[29]
                                                                 blank.PadLeft(1, ' ') + blank));                       //[30]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(61, ' ') + blank,          //[31]
                                                           blank.PadLeft(12, ' '),                  //[32]
                                                           blank.PadLeft(1, ' ') + blank));         //[33]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(16, ' ') + StringConvert.PadRight(blank.PadLeft(47, ' '), 47),    //[34]
                                                        blank.PadLeft(14, ' ') + GenStar(st).PadLeft(12, ' ')));                        //[35]
                sb.Append("\r\n");

                if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                {
                    sb.AppendFormat("{0}{1}", blank.PadLeft(5, ' '), "FIX");
                }
                sb.Append("\r\n");       //ตัดบรรทัดนี้มาจากส่วน bottom
                #endregion
                //*********************************** BOTTOM PAGE SPOT BILL ************************************
                #region #SPOT BILL BOTTOM PAGE
                const int costLength = 14;
                if (String.IsNullOrEmpty(bb.W_2200_gtot_amn))
                {
                    bb.W_2200_gtot_amn = bb.W_1510_total_amnt_txt.Trim();
                }
                int totalStarLimit = SubStringTo12Character(bb.W_2200_gtot_amn).Length;
                int StarAppend = 12;
                int TotalPadding = 0;
                if (totalStarLimit >= 12)
                {
                    StarAppend = costLength;
                    TotalPadding = 11;
                }
                else
                {
                    StarAppend = 12;
                    TotalPadding = 14;
                }

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(79),
                                                        bb.W_10_invoice_no.PadLeft(16, ' ')));          //[36]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23),
                                                        bb.W_40_sname + " " + bb.W_2130_off_tel));      //[37]
                sb.Append("\r\n");


                #region แก้ไขที่อยู่ลูกค้า 20180123_1455

                string tmpCustomerName = null;
                if (!String.IsNullOrEmpty(bb.W_90_cust_name1))
                {//cust name 1 มีค่า                     
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                    {//cust name 2 มีค่า 
                        tmpCustomerName = bb.W_90_cust_name1 + " " + bb.W_90_cust_name2;
                    }
                    else
                    {//cust name 2 ไม่มี
                        tmpCustomerName = bb.W_90_cust_name1;
                    }
                }
                else
                {//cust name 1 ไม่มี
                    if (!String.IsNullOrEmpty(bb.W_90_cust_name2))
                    {//cust name 2 มีค่า 
                        tmpCustomerName = bb.W_90_cust_name2;
                    }
                    else
                    {//cust name 2 ไม่มี
                        tmpCustomerName = "";
                    }
                }
                int custLength = 0;
                custLength = StringConvert.TextLength(tmpCustomerName);
                if (custLength > 44)
                {//ถ้าขนาดของ Customer ยาวโปรแกรมจะตัดทิ้งเอาแค่ 44 ตัว
                    try
                    {
                        tmpCustomerName = GetFirstLineOfString(StringConvert.FormatText(tmpCustomerName, 44));
                    }
                    catch
                    {
                        //ถ้าตัดไม่ได้ก็ปล่อยให้ CA เลือนไปเหมือนเดิม
                    }
                }
                if (ClientPickedPrinterCode == 0)
                {
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                }
                else
                {
                    sb.AppendFormat(String.Format("{0}{1}{2}", blank.PadLeft(23),
                                                                StringConvert.PadRight(tmpCustomerName, 44),                //[38]
                                                                blank.PadLeft(12, ' ') + bb.W_150_contract));               //[39]
                }

                sb.Append("\r\n");
                #endregion

                #region 20180123_0944 แก้ไขให้ที่อยู่เป็น 2 บรรทัด โดยระยะอยู่ที่ 54

                StringBuilder sbdAddress = new StringBuilder();
                sbdAddress.Append(bb.W_221_address);  //1
                if (!String.IsNullOrEmpty(bb.W_222_address))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_222_address);  //2
                if (!String.IsNullOrEmpty(bb.W_223_address))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_223_address);  //3
                if (!String.IsNullOrEmpty(bb.W_230_post_code))
                {
                    sbdAddress.Append(" ");
                }
                sbdAddress.Append(bb.W_230_post_code); //4   

                int addressLength = 0;
                string tmpAddress = null;
                addressLength = StringConvert.TextLength(sbdAddress.ToString());
                if (addressLength > 54)
                {
                    tmpAddress = FormatTextForAddressTrimSpace(sbdAddress.ToString(), 54);
                    string[] tmpResult = tmpAddress.Replace("\r\n", "|").Split('|');
                    if (!String.IsNullOrEmpty(tmpResult[0]))
                    {//ใส่ข้อมูลแถวที่หนึ่ง
                        sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[0].Trim()));      //--[40]
                        sb.Append("\r\n");
                        if (!String.IsNullOrEmpty(tmpResult[1]))
                        {//ใส่ข้อมูลแถวที่สอง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.Append("\r\n");
                        }
                    }
                    else
                    {
                        if (!String.IsNullOrEmpty(tmpResult[1]))
                        {//ใส่ข้อมูลแถวที่สอง
                            sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpResult[1].Trim()));  //--[40]
                            sb.Append("\r\n");
                            sb.Append("\r\n");
                        }
                        else
                        {
                            sb.Append("\r\n");
                            sb.Append("\r\n");
                        }
                    }
                }
                else
                {
                    tmpAddress = sbdAddress.ToString();
                    sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(23), tmpAddress.Trim()));             //--[40] 
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }
                #endregion

                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}{6}{7}", blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_140_reg, 6)        //[41]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1840_mru, 8)         //[42]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1880_payment_lot, 6) //[43]
                                                                      , StringConvert.PadLeft(bb.W_160_device, 12)                              //[44]
                                                                      , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_171_ettat_code, 5)   //[45]
                                                                      , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_200_mr_date, 8)      //[46]
                                                                      , blank.PadLeft(2, ' ') + StringConvert.PadLeft(bb.W_130_period, 7)       //[47]
                                                                      , StringConvert.PadLeft(bb.W_190_multi_n, 7)));                           //[48]

                sb.Append("\r\n");

                sb.Append("\r\n");
                const int pos_53_58_63_67 = 2;
                const int pos_52_57_62_66 = 1;
                const int pos_56_61_65 = 0;
                const int pos_68_69_72_73_76 = 16;
                sb.AppendFormat(String.Format("{0}{1}", blank.PadLeft(7, ' '), bb.W_500_txt6.PadRight(3, ' ')));                                                    //[49]
                sb.Append("\r\n");
                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_255_device_1, 3)                                                     //[50]
                                                                   , blank.PadLeft(6, ' ') + StringConvert.PadLeft("  ", 2)                                         //[BLANK]
                                                                   , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 10)                      //[51]
                                                                   , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 10)        //[52]
                                                                   , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_290_abrmenge_1_txt)), 10)        //[53]
                                                                   , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1310_amount_txt)), costLength)));             //[68]
                sb.Append("\r\n");

                sb.AppendFormat(String.Format("{0}{1}{2}{3}{4}{5}", StringConvert.PadLeft(bb.W_295_device_2, 3)                                                                     //[54]
                                                                    , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_340_peak_txt, 2)                                           //[55]
                                                                    , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 10)  //[56]   
                                                                    , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 10)                       //[57]
                                                                    , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_330_abrmenge_2_txt)), 10)                         //[58]
                                                                    , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1100_sum_service_support_txt)), costLength)));   //[69]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}", StringConvert.PadLeft(bb.W_350_dash_txt, 3)                                                                      //[59]
                                                               , blank.PadLeft(5, ' ') + StringConvert.PadLeft(bb.W_400_off_peak_txt, 2)                                        //[60]
                                                               , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 10)   //[61]
                                                               , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 10)                        //[62]
                                                               , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_390_abrmenge_3_txt)), 10)    //[63]
                                                               , blank.PadLeft(3, ' ') + StringConvert.PadLeft(bb.W_1380_fttot_txt, 7)                                          //[70]
                                                               , blank.PadLeft(6, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1400_ftchg_txt)), costLength)              //[71]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2220_mr_date_m1, 8)                                         //[91]
                                                               , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2280_unit_m1)), 10));                      //[97]  
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                                              blank.PadLeft(8, ' ') + StringConvert.PadLeft(bb.W_460_hol_txt, 2)                                                //[64]
                                                              , blank.PadLeft(1, ' ') + blank.PadLeft(pos_56_61_65, ' ') + StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 10)    //[65]
                                                              , blank.PadLeft(pos_52_57_62_66, ' ') + StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 10)                         //[66]
                                                              , blank.PadLeft(pos_53_58_63_67, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_450_abrmenge_4_txt)), 10)    //[67]
                                                              , blank.PadLeft(pos_68_69_72_73_76, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1450_mr_kw_17_6_txt)), costLength) //[72]
                                                              , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2230_mr_date_m2, 8)        //[92]
                                                              , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2290_unit_m2)), 10));   //[98]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text1, 48)                                           //[83]
                                                , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1480_net_before_vat_txt)), costLength)      //[73]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2240_mr_date_m3, 8)                                           //[93]
                                                , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(bb.W_2300_unit_m3), 10));                //[99]
                sb.Append("\r\n");

                sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text2, 48)                                                         //[84]
                                                    , blank.PadLeft(6, ' ') + StringConvert.PadLeft(bb.W_1490_tax_rate_txt, 3)                                                      //[74]
                                                    , blank.PadLeft(3, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1500_tax_amount_txt)), costLength)    //[75]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2250_mr_date_m4, 8)                                                        //[94]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2310_unit_m4)), 10));     //[100]
                sb.Append("\r\n");


                sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text3, 48)                                                            //[85]
                                                    , blank.PadLeft(12, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_1510_total_amnt_txt)), costLength)   //[76]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2260_mr_date_m5, 8)                                                            //[95]
                                                    , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2320_unit_m5)), 10));         //[101]

                sb.Append("\r\n");

                string barcode1 = string.Empty;
                barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";
                string barcode2 = string.Empty;
                barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";
                string barcode3 = string.Empty;
                barcode3 = "BLAN_Barcode_3_Start" + bb.W_150_contract + "BLAN_Barcode_3_Stop";


                sb.AppendFormat("{0}{1}{2}{3}{4}", blank.PadLeft(1, ' ') + StringConvert.PadRight(bb.W_1550_case_text4, 40)                                     //[86]
                                                       , StringConvert.PadLeft(bb.W_2140_oth_dis1, 20)                                                              //[77]
                                                       , StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2150_oth_dis2)), costLength)   //[78]
                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(bb.W_2270_mr_date_m6, 8)                                                     //[96]
                                                       , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo12Character(bb.W_2330_unit_m6)), 10));  //[102]
                sb.Append("\r\n");

                #region Barcode 2 and Barcode 3 alignment lastest edit on 2017-12-28 10:25
                switch (ClientPickedPrinterCode)
                {
                    case 0:
                        #region LaserMatrix BARCODE 2 CONDITION แก้ไขเท่ากับ Agency

                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(75, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(75, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // SAP แจ้งว่ายังไม่มีดอกผลเงินประกัน
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }



                        #endregion
                        break;
                    case 1:
                        #region Fujitsu
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(76, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(33, ' ')  //27 -> 32
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                    case 2:
                        #region Printronix last edit 2017-12-28 10:22
                        //2017-12-26 13:46 แก้ไขด้วยการย้าย Barcode 3 ไปอยู่หลัง Total line 1537
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}", blank.PadLeft(73, ' '));
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));          //[80]

                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}", barcode2
                                                           , blank.PadLeft(27, ' '));
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' '));            //[80]

                        }
                        #endregion
                        break;
                    case 3:
                        #region Data Product BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                    case 4:
                        #region Genicom BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                    case 5:
                        #region Tally BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                    case 6:
                        #region Pentax BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                    default:
                        #region Other Auto pick Genicom BARCODE 2 CONDITION
                        if (String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))           // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ = NULL
                        {
                            sb.AppendFormat("{0}{1}", blank.PadLeft(73, ' ')
                                                    , barcode3);
                        }
                        else if (String.IsNullOrEmpty(bb.W_1600_barcode2) && !String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 = NULL && ดอกผลเงินประกันฯ มีค่า
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:59
                            sb.AppendFormat("{0}{1}{2}{3}", blank.PadLeft(45, ' ')
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                            //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')          //[80]
                                                           , barcode3);
                        }
                        else if (!String.IsNullOrEmpty(bb.W_1600_barcode2) && String.IsNullOrEmpty(bb.W_2170_sec_dis1))       // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ = NULL
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 15:07
                            sb.AppendFormat("{0}{1}{2}", barcode2
                                                           , blank.PadLeft(27, ' ')
                                                           , barcode3);
                        }
                        else
                        {
                            // ถ้าข้อมูล barcode 2 มีค่า && ดอกผลเงินประกันฯ มีค่า    ---> OK 2017Dec16 14:40
                            sb.AppendFormat("{0}{1}{2}{3}", barcode2          //barcode2    
                                                           , StringConvert.PadRight(bb.W_2170_sec_dis1, 14)                                                                                                              //[79]
                                                           , blank.PadLeft(1, ' ') + StringConvert.PadLeft(StringConvert.InsertComma(SubStringTo10Character(bb.W_2180_sec_dis2)), 11) + blank.PadLeft(1, ' ')            //[80]
                                                           , barcode3);
                        }
                        #endregion
                        break;
                }
                sb.Append("\r\n");     //After check print condition


                int tmpLenght = 61;
                if (StarAppend == 12)
                {
                    tmpLenght += 2;
                }
                if (ClientPickedPrinterCode == 2)  // 2: Printronix เพิ่ม Blank ก่อน Barcode 3 อีก 1
                {
                    sb.AppendFormat("{0}{1}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'), blank.PadLeft(1, ' ') + barcode3);     //[81]
                }
                else
                {
                    sb.AppendFormat("{0}", blank.PadLeft(tmpLenght, ' ') + StringConvert.InsertComma(SubStringTo12Character(bb.W_2200_gtot_amn)).PadLeft(StarAppend, '*'));
                }

                #endregion


                sb.Append("\r\n");

                sb.AppendFormat("{0}", blank.PadLeft(65, ' ') + bb.W_1580_payment_due_date.PadLeft(10));  //[82]
                sb.Append("\r\n");

                if (ClientPickedPrinterCode == 2 && String.IsNullOrEmpty(bb.W_1590_barcode1))  //ค่า Barcode 1 เป็นค่าว่าง Printronix  เอา บรรทัดนี้ออก และ
                {
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", barcode1); //   barcode1                    
                    sb.Append("\r\n");
                }
                ///***************SPOT BILL***************************************************
                //แก้ไข Fujitsu ไฟฟรี ไม่มี barcode 1 2018Jan10 20:47
                if (ClientPickedPrinterCode == 0) //Epson
                {
                    if (!String.IsNullOrEmpty(bb.W_1590_barcode1))
                    {
                        sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                        sb.Append("\r\n");
                    }
                    else
                    {//ยังไม่ได้เทสเหตุการณืที่ ไม่มี Barcode 1
                        sb.AppendFormat("{0}", blank.PadLeft(86, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89] EPSON                         
                        sb.Append("\r\n");
                    }
                }
                else if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu               
                {
                    sb.AppendFormat("{0}", blank.PadLeft(78, ' ') + bb.W_1550_case_text7 + " " + bb.W_1550_case_text8);         //[89]  FUJITSU                             
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight(bb.W_1550_case_text7 + " " + bb.W_1550_case_text8, 48));             //[89]
                    sb.Append("\r\n");
                }


                if ((ClientPickedPrinterCode == 1) && String.IsNullOrEmpty(bb.W_1590_barcode1)) //Fujitsu
                {
                    sb.Append("\r\n");       //ถ้าเป็น Fujitsu ไม่มี barcode 1 จะเพิ่ม บรรทัด อีก 1 บรรทัด
                }

                if (ClientPickedPrinterCode == 0) //Epson
                {
                    if (String.IsNullOrEmpty(bb.W_1590_barcode1))
                    {
                        sb.Append("\r\n");   //แก้ไฟฟรี ที่ไม่มี barcode
                    }
                    sb.AppendFormat("{0}", blank.PadLeft(56, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}", blank.PadLeft(48, ' ') + StringConvert.PadRight("ค่า Ft " + bb.W_1381_ft_peiod_txt + "= " + bb.W_1380_fttot_txt + " บาท/หน่วย", 48));   //[90]
                    sb.Append("\r\n");
                }


                sb.Append("\r\n");

                #endregion

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        #region OLD BILL FORM

        private List<Bills> AdjustAgencyBillLayout(List<BlueBill> _blueBill)
        {
            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.
                StringBuilder sb = new StringBuilder();

                sb.Append("\r\n");

                #region #ISSUE ขีดฆ่าใบกำกับภาษี หากเป็นไฟฟรี
                if ((bb.W_1510_total_amnt_txt == "0.00") && (bb.W_1490_tax_rate_txt == ""))
                {
                    sb.AppendFormat(String.Format("{0}{1}",
                                              blank.PadRight(20, ' '),
                        //" XXXXXXX")); //Uthen
                                               " ///////")); //Uthen

                    sb.AppendFormat(String.Format("{0}{1}{2}{3}",
                                             blank.PadRight(27, ' '), //80-25
                                             bb.W_1880_payment_lot,
                                             blank.PadRight(13, ' '),
                                             bb.W_10_invoice_no)); //1 R1
                    sb.Append("\r\n"); //CR&LF to line 2  
                }
                else
                {
                    sb.AppendFormat(String.Format("{0}{1}{2}{3}",
                                                  blank.PadRight(55, ' '), //80-25
                                                  bb.W_1880_payment_lot,
                                                  blank.PadRight(13, ' '),
                                                  bb.W_10_invoice_no));     //1 R1
                    sb.Append("\r\n"); //CR&LF to line 2     
                }

                #endregion


                sb.AppendFormat(String.Format("{0}{1}",
                                              blank.PadRight(13, ' '),
                                              bb.W_10_invoice_no)); //2 L1
                sb.Append("\r\n"); //CR&LF to line 3
                sb.Append("\r\n"); //CR&LF to line 4
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(35, ' '),
                    //**********Right Part**********//
                                bb.W_140_reg.PadLeft(8, ' '),
                                bb.W_150_contract.PadLeft(19, ' '),
                                blank.PadRight(1, ' '),
                                bb.W_160_device.PadRight(11, ' '),
                                bb.W_171_ettat_code.PadRight(6, ' '),
                                bb.W_200_mr_date.PadRight(9, ' '),
                                bb.W_130_period.PadRight(7, ' ')); //4 R1-6
                sb.Append("\r\n"); //CR&LF to line 5
                sb.Append("\r\n"); //CR&LF to line 6
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                    //blank.PadRight(26, ' '),
                    //bb.W_20_buss_place.PadRight(9, ' '),
                                blank.PadRight(25, ' '),
                                StringConvert.PadRight(bb.W_2070_taxid_p, 12), //เพิ่ม Digit จาก 9 เป็น 12 โดยลดด้านหน้า 1 Digit และ ลดด้านหลังลง 2 Digit
                    //**********Right Part**********//
                    //blank.PadRight(5, ' '),
                                blank.PadRight(3, ' '),
                                bb.W_90_cust_name1,
                                bb.W_90_cust_name2); //6 L1,R1(substring90)

                if (bb.W_20_buss_place.Contains("*"))
                {
                    //************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line 7
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_221_address); //8 L1(substring90),R1
                    sb.Append("\r\n"); //CR&LF to line 8
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_222_address); //9 L1,R1
                    sb.Append("\r\n"); //CR&LF to line9
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    StringConvert.PadRight(bb.W_223_address, 45),
                                    bb.W_230_post_code); //10 L1,R1,R2
                    sb.Append("\r\n"); //CR&LF to line10
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    bb.W_500_txt6.PadLeft(12, ' ')); //11 L1,R1
                    sb.Append("\r\n"); //CR&LF to line11
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_255_device_1, 13),
                                    StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 11),
                                    StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 12),
                                    StringConvert.PadLeft(bb.W_280_umwfakt_1_txt, 10),
                                    StringConvert.PadLeft(bb.W_290_abrmenge_1_txt, 14)); //12 L1,L2,R1-4
                    sb.Append("\r\n"); //CR&LF to line12
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",
                                    blank.PadRight(8, ' '),
                                    star.PadRight(9, '*') + blank.PadRight(10, ' '),
                                    star.PadRight(6, '*') + blank.PadRight(2, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_295_device_2, 4),
                                    StringConvert.PadRight(bb.W_350_dash_txt, 6),
                                    StringConvert.PadLeft(bb.W_340_peak_txt, 2),
                        //StringConvert.PadRight(bb.W_340_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_320_umwfakt_2_txt, 10),
                                    StringConvert.PadLeft(bb.W_330_abrmenge_2_txt, 14)); //13 L1,R1-6
                    sb.Append("\r\n"); //CR&LF to line13
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(11, ' '),
                                    star.PadRight(17, '*') + blank.PadRight(7, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_355_device_3, 4),
                                    StringConvert.PadRight(bb.W_410_ene_txt, 6),
                                    StringConvert.PadLeft(bb.W_400_off_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_380_umwfakt_3_txt, 10),
                                    StringConvert.PadLeft(bb.W_390_abrmenge_3_txt, 14)); //14 L1,L2,R1-6
                    sb.Append("\r\n"); //CR&LF to line14
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(8, ' '),
                                    star.PadRight(10, '*') + blank.PadRight(9, ' '),
                                    star.PadRight(6, '*') + blank.PadRight(2, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_415_device_4, 10),
                                    StringConvert.PadLeft(bb.W_460_hol_txt, 2),
                                    StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_440_umwfakt_4_txt, 10),
                                    StringConvert.PadLeft(bb.W_450_abrmenge_4_txt, 14)); //15 L1,L2,R1-5
                    sb.Append("\r\n"); //CR&LF to line15
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadLeft(10, ' ') + star.PadLeft(8, '*'),
                                    blank.PadLeft(15, ' ') + star.PadLeft(2, '*'),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    bb.W_1550_case_text1); //16 L1,N1
                    sb.Append("\r\n"); //CR&LF to line16
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text2, 40),
                                    blank.PadRight(6, ' '),
                                    bb.W_1310_amount_txt.PadLeft(13, ' ')); //17 N1,L1,R1
                    sb.Append("\r\n"); //CR&LF to line17                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text3, 40),
                                    StringConvert.PadLeft(bb.W_1460_mr_kw_17_7, 6),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' ')); //18 N1,L1,L2,L3,R1,R2
                    sb.Append("\r\n"); //CR&LF to line18                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                    blank.PadRight(2, ' '),
                                    star.PadRight(30, '*') + blank.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text4, 16),
                                    StringConvert.PadLeft(bb.W_1381_ft_peiod_txt, 14) + "= " +
                                    bb.W_1380_fttot_txt.PadRight(7, ' '),
                                    blank.PadRight(7, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(13, ' ')); //19 N1,L1,L2,R1,R2
                    sb.Append("\r\n"); //CR&LF to line19
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(5, ' '),
                                    star.PadRight(3, '*') + blank.PadRight(7, ' '),
                                    blank.PadLeft(5, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(48, ' '),
                                    bb.W_1480_net_before_vat_txt.PadLeft(13, ' ')); //20 L1,R1
                    sb.Append("\r\n"); //CR&LF to line20
                    if (string.IsNullOrEmpty(bb.W_1550_case_text7))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                    blank.PadRight(44, ' '),
                                    bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                    bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text7, 42),
                                    bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                    bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    sb.Append("\r\n"); //CR&LF to line21
                    if (string.IsNullOrEmpty(bb.W_1550_case_text8))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        blank.PadLeft(10, ' ') + star.PadLeft(3, '*'),
                                        blank.PadLeft(7, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(48, ' '),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadLeft(10, ' ') + star.PadLeft(3, '*'),
                                        blank.PadLeft(7, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text8, 46),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    sb.Append("\r\n"); //CR&LF to line22
                    //********************************************************************************************************************
                    string barcode1 = string.Empty;
                    if (bb.W_1590_barcode1 != string.Empty)
                        barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";

                    string barcode2 = string.Empty;
                    if (bb.W_1600_barcode2 != string.Empty)
                        barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";


                    //2017-02-02  สลับบาร์โค้ด 1 <--> 2
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(20, ' '),
                                    star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : ""); //Comment barcode1 เปลี่ยนเป็น barcode2
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                    //23 B1,L1-3
                    //********************************************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line23
                    //ย้ายจาก Line 24 โดยทำการตัดส่วนของ Barcode ทางด้านขวาออก
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    star.PadRight(29, '*') + blank.PadRight(4, ' '));
                    sb.Append("\r\n");

                    sb.Append("\r\n"); //CR&LF to line24

                    //********************************************************************************************************************


                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(2, ' '),
                                    bb.W_1345_blue_txt1.PadRight(33, ' '),
                        //blank.PadRight(2, ' '),
                        //star.PadRight(29, '*') + blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : ""); //Comment barcode2 เปลี่ยนเป็น barcode1
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                    //25 B2********Barcode**********
                    //********************************************************************************************************************

                    sb.Append("\r\n"); //CR&LF to line25
                    //เพิ่มฟิลด์ W_2080_taxid_c 
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_2080_taxid_c, 33));
                    sb.Append("\r\n");
                    sb.Append("\r\n"); //CR&LF to line26
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(9, ' '),
                                    bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                    "B" + bb.BillSeqNo.PadLeft(7, '0'),
                                    blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(51, ' '),
                                    bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    sb.Append("\r\n"); //CR&LF to line27                
                    sb.Append("\r\n"); //CR&LF to line28     
                }
                else
                {
                    sb.Append("\r\n"); //CR&LF to line 7
                    string tmp90 = bb.W_90_cust_name1 + bb.W_90_cust_name2;
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    (tmp90.Length > 30
                                         ? StringConvert.PadRight(tmp90.Substring(0, 29), 31)
                                         : StringConvert.PadRight(tmp90, 31)),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_221_address); //8 L1(substring90),R1
                    sb.Append("\r\n"); //CR&LF to line 8
                    //if string in second line has length > 30
                    string tmp90_2 = string.Empty;
                    if (tmp90.Length > 60)
                        tmp90_2 = (tmp90.Length > 30 ? tmp90.Substring(29, 29).PadRight(31, ' ') : "".PadRight(31, ' '));
                    else
                        tmp90_2 = (tmp90.Length > 30
                                       ? tmp90.Substring(29, tmp90.Length - 29).PadRight(31, ' ')
                                       : "".PadRight(31, ' '));

                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                        //(tmp90.Length > 30 ? StringConvert.PadRight(tmp90.Substring(29, tmp90.Length-29), 31) : blank.PadRight(31, ' ')),
                                    tmp90_2,
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_222_address); //9 L1,R1
                    sb.Append("\r\n"); //CR&LF to line9
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_216_address, 31),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    StringConvert.PadRight(bb.W_223_address, 45),
                                    bb.W_230_post_code); //10 L1,R1,R2
                    sb.Append("\r\n"); //CR&LF to line10
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_217_address, 31),
                        //**********Right Part**********//
                                    bb.W_500_txt6.PadLeft(12, ' ')); //11 L1,R1
                    sb.Append("\r\n"); //CR&LF to line11
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_218_address, 31),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_255_device_1, 13),
                                    StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 11),
                                    StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 12),
                                    StringConvert.PadLeft(bb.W_280_umwfakt_1_txt, 10),
                                    StringConvert.PadLeft(bb.W_290_abrmenge_1_txt, 14)); //12 L1,L2,R1-4
                    sb.Append("\r\n"); //CR&LF to line12
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",
                                    blank.PadRight(8, ' '),
                                    StringConvert.PadRight(bb.W_160_device, 19),
                                    bb.W_171_ettat_code.PadRight(8, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_295_device_2, 4),
                                    StringConvert.PadRight(bb.W_350_dash_txt, 6),
                                    StringConvert.PadLeft(bb.W_340_peak_txt, 2),
                        //StringConvert.PadRight(bb.W_340_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_320_umwfakt_2_txt, 10),
                                    StringConvert.PadLeft(bb.W_330_abrmenge_2_txt, 14)); //13 L1,R1-6
                    sb.Append("\r\n"); //CR&LF to line13
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(11, ' '),
                                    bb.W_140_reg.PadRight(7, ' ') + bb.W_150_contract.PadRight(17, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_355_device_3, 4),
                                    StringConvert.PadRight(bb.W_410_ene_txt, 6),
                                    StringConvert.PadLeft(bb.W_400_off_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_380_umwfakt_3_txt, 10),
                                    StringConvert.PadLeft(bb.W_390_abrmenge_3_txt, 14)); //14 L1,L2,R1-6
                    sb.Append("\r\n"); //CR&LF to line14
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(8, ' '),
                                    bb.W_130_period.PadRight(19, ' '),
                                    bb.W_200_mr_date.PadRight(8, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_415_device_4, 10),
                                    StringConvert.PadLeft(bb.W_460_hol_txt, 2),
                                    StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_440_umwfakt_4_txt, 10),
                                    StringConvert.PadLeft(bb.W_450_abrmenge_4_txt, 14)); //15 L1,L2,R1-5
                    sb.Append("\r\n"); //CR&LF to line15
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    StringConvert.PadLeft(bb.W_470_zwstand_1_txt, 18),
                                    StringConvert.PadLeft(bb.W_480_zwstvor_1_txt, 17),
                        //bb.W_470_zwstand_1_txt.PadLeft(18, ' '),
                        //bb.W_480_zwstvor_1_txt.PadLeft(17, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    bb.W_1550_case_text1); //16 L1,N1
                    sb.Append("\r\n"); //CR&LF to line16
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    bb.W_490_consumption_txt.PadLeft(31, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text2, 40),
                                    blank.PadRight(6, ' '),
                                    bb.W_1310_amount_txt.PadLeft(13, ' ')); //17 N1,L1,R1
                    sb.Append("\r\n"); //CR&LF to line17                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    bb.W_1310_amount_txt.PadLeft(31, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text3, 40),
                                    StringConvert.PadLeft(bb.W_1460_mr_kw_17_7, 6),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' ')); //18 N1,L1,L2,L3,R1,R2
                    sb.Append("\r\n"); //CR&LF to line18                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1460_mr_kw_17_7, 16),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' '),
                                    blank.PadRight(1, ' '),
                                    bb.W_1470_baht.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text4, 16),
                                    StringConvert.PadLeft(bb.W_1381_ft_peiod_txt, 14) + "= " +
                                    bb.W_1380_fttot_txt.PadRight(7, ' '),
                                    blank.PadRight(7, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(13, ' ')); //19 N1,L1,L2,R1,R2
                    sb.Append("\r\n"); //CR&LF to line19
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(5, ' '),
                                    bb.W_1380_fttot_txt.PadRight(10, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(16, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(48, ' '),
                                    bb.W_1480_net_before_vat_txt.PadLeft(13, ' ')); //20 L1,R1
                    sb.Append("\r\n"); //CR&LF to line20
                    if (string.IsNullOrEmpty(bb.W_1550_case_text7))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        bb.W_1485_net_before_vat_left.PadLeft(31, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(44, ' '),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        bb.W_1485_net_before_vat_left.PadLeft(31, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text7, 42),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    sb.Append("\r\n"); //CR&LF to line21
                    if (string.IsNullOrEmpty(bb.W_1550_case_text8))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        bb.W_1490_tax_rate_txt.PadLeft(13, ' '),
                                        bb.W_1505_tax_amount_left.PadLeft(18, ' '),
                                        blank.PadRight(4, ' '),
                            //*********Right Part*********//
                                        blank.PadRight(48, ' '),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        bb.W_1490_tax_rate_txt.PadLeft(13, ' '),
                                        bb.W_1505_tax_amount_left.PadLeft(18, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text8, 46),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    sb.Append("\r\n"); //CR&LF to line22
                    //********************************************************************************************************************
                    string barcode1 = string.Empty;
                    if (bb.W_1590_barcode1 != string.Empty)
                        barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";

                    string barcode2 = string.Empty;
                    if (bb.W_1600_barcode2 != string.Empty)
                        barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";

                    //2017-02-02  สลับบาร์โค้ด 1 <--> 2
                    //BARCODE 2
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(18, ' '),
                                    bb.W_1510_total_amnt_txt.PadLeft(13, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : ""); //comment barcode1  เป็นเป็น barcode2
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                    //23 B1,L1-3
                    //********************************************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line23
                    //ย้ายจาก Line 24 โดยทำการตัดส่วนของ Barcode ทางด้านขวาออก
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1330_foreign_txt, 18),
                                    StringConvert.InsertComma(bb.W_1320_foreign_amt).PadLeft(10, ' '),
                                    blank.PadRight(2, ' '),
                                    bb.W_1340_foreign_uit.PadRight(3, ' '));
                    sb.Append("\r\n");

                    sb.Append("\r\n"); //CR&LF to line24

                    //********************************************************************************************************************
                    //BARCODE 1

                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(2, ' '),
                                    bb.W_1345_blue_txt1.PadRight(33, ' '),
                        //blank.PadRight(2, ' '),
                        //StringConvert.PadRight(bb.W_1330_foreign_txt, 18),
                        //StringConvert.InsertComma(bb.W_1320_foreign_amt).PadLeft(10, ' '),
                        //blank.PadRight(2, ' '),
                        //bb.W_1340_foreign_uit.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");//comment barcode2  เป็นเป็น barcode1
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                    //25 B2********Barcode**********
                    //********************************************************************************************************************

                    sb.Append("\r\n"); //CR&LF to line25
                    //เพิ่มฟิลด์ W_2080_taxid_c 
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_2080_taxid_c, 33));
                    sb.Append("\r\n");

                    sb.Append("\r\n"); //CR&LF to line26
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(9, ' '),
                                    bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                    "B" + bb.BillSeqNo.PadLeft(7, '0'),
                                    blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(51, ' '),
                                    bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    sb.Append("\r\n"); //CR&LF to line27                
                    sb.Append("\r\n"); //CR&LF to line28     
                }

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        private List<Bills> AdjustBlueBillLayout(List<BlueBill> _blueBill)
        {
            //SPOT BILL วางไม่ได้

            List<Bills> _bills = new List<Bills>();

            foreach (BlueBill bb in _blueBill)
            {
                string resultTxt;
                string blank = " ";
                string star = "*";
                string txt_adjust_bb = bb.W_1550_case_text7 + bb.W_1550_case_text8;
                //field totalWidth in Pad property = column width in real receipt.
                StringBuilder sb = new StringBuilder();
                sb.Append("\r\n");
                sb.AppendFormat(string.Format("{0}{1}",
                                              blank.PadRight(80, ' '),
                                              bb.W_10_invoice_no)); //1 R1
                sb.Append("\r\n"); //CR&LF to line 2                
                sb.AppendFormat(String.Format("{0}{1}",
                                              blank.PadRight(13, ' '),
                                              bb.W_10_invoice_no)); //2 L1
                sb.Append("\r\n"); //CR&LF to line 3
                sb.Append("\r\n"); //CR&LF to line 4
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(35, ' '),
                    //**********Right Part**********//
                                bb.W_140_reg.PadLeft(8, ' '),
                                bb.W_150_contract.PadLeft(19, ' '),
                                blank.PadRight(1, ' '),
                                bb.W_160_device.PadRight(11, ' '),
                                bb.W_171_ettat_code.PadRight(6, ' '),
                                bb.W_200_mr_date.PadRight(9, ' '),
                                bb.W_130_period.PadRight(7, ' ')); //4 R1-6
                sb.Append("\r\n"); //CR&LF to line 5
                sb.Append("\r\n"); //CR&LF to line 6
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                    //blank.PadRight(26, ' '),
                    //bb.W_20_buss_place.PadRight(9, ' '),
                                blank.PadRight(25, ' '),
                                StringConvert.PadRight(bb.W_2070_taxid_p, 12), //เพิ่ม Digit จาก 9 เป็น 12 โดยลดด้านหน้า 1 Digit และ ลดด้านหลังลง 2 Digit
                    //**********Right Part**********//
                    //blank.PadRight(5, ' '),
                                blank.PadRight(3, ' '),
                                bb.W_90_cust_name1,
                                bb.W_90_cust_name2); //6 L1,R1(substring90)

                if (bb.W_20_buss_place.Contains("*")) //SPOT BILL วางไม่ได้
                {
                    //************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line 7
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_221_address); //8 L1(substring90),R1
                    sb.Append("\r\n"); //CR&LF to line 8
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_222_address); //9 L1,R1
                    sb.Append("\r\n"); //CR&LF to line9
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    StringConvert.PadRight(bb.W_223_address, 45),
                                    bb.W_230_post_code); //10 L1,R1,R2
                    sb.Append("\r\n"); //CR&LF to line10
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    bb.W_500_txt6.PadLeft(12, ' ')); //11 L1,R1
                    sb.Append("\r\n"); //CR&LF to line11
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                    blank.PadRight(4, ' '),
                                    star.PadRight(25, '*') + blank.PadRight(6, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_255_device_1, 13),
                                    StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 11),
                                    StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 12),
                                    StringConvert.PadLeft(bb.W_280_umwfakt_1_txt, 10),
                                    StringConvert.PadLeft(bb.W_290_abrmenge_1_txt, 14)); //12 L1,L2,R1-4
                    sb.Append("\r\n"); //CR&LF to line12
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",
                                    blank.PadRight(8, ' '),
                                    star.PadRight(9, '*') + blank.PadRight(10, ' '),
                                    star.PadRight(6, '*') + blank.PadRight(2, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_295_device_2, 4),
                                    StringConvert.PadRight(bb.W_350_dash_txt, 6),
                                    StringConvert.PadLeft(bb.W_340_peak_txt, 2),
                        //StringConvert.PadRight(bb.W_340_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_320_umwfakt_2_txt, 10),
                                    StringConvert.PadLeft(bb.W_330_abrmenge_2_txt, 14)); //13 L1,R1-6
                    sb.Append("\r\n"); //CR&LF to line13
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(11, ' '),
                                    star.PadRight(17, '*') + blank.PadRight(7, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_355_device_3, 4),
                                    StringConvert.PadRight(bb.W_410_ene_txt, 6),
                                    StringConvert.PadLeft(bb.W_400_off_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_380_umwfakt_3_txt, 10),
                                    StringConvert.PadLeft(bb.W_390_abrmenge_3_txt, 14)); //14 L1,L2,R1-6
                    sb.Append("\r\n"); //CR&LF to line14
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(8, ' '),
                                    star.PadRight(10, '*') + blank.PadRight(9, ' '),
                                    star.PadRight(6, '*') + blank.PadRight(2, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_415_device_4, 10),
                                    StringConvert.PadLeft(bb.W_460_hol_txt, 2),
                                    StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_440_umwfakt_4_txt, 10),
                                    StringConvert.PadLeft(bb.W_450_abrmenge_4_txt, 14)); //15 L1,L2,R1-5
                    sb.Append("\r\n"); //CR&LF to line15
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadLeft(10, ' ') + star.PadLeft(8, '*'),
                                    blank.PadLeft(15, ' ') + star.PadLeft(2, '*'),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    bb.W_1550_case_text1); //16 L1,N1
                    sb.Append("\r\n"); //CR&LF to line16
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text2, 40),
                                    blank.PadRight(6, ' '),
                                    bb.W_1310_amount_txt.PadLeft(13, ' ')); //17 N1,L1,R1
                    sb.Append("\r\n"); //CR&LF to line17                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text3, 40),
                                    StringConvert.PadLeft(bb.W_1460_mr_kw_17_7, 6),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' ')); //18 N1,L1,L2,L3,R1,R2
                    sb.Append("\r\n"); //CR&LF to line18                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                    blank.PadRight(2, ' '),
                                    star.PadRight(30, '*') + blank.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text4, 16),
                                    StringConvert.PadLeft(bb.W_1381_ft_peiod_txt, 14) + "= " +
                                    bb.W_1380_fttot_txt.PadRight(7, ' '),
                                    blank.PadRight(7, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(13, ' ')); //19 N1,L1,L2,R1,R2
                    sb.Append("\r\n"); //CR&LF to line19
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(5, ' '),
                                    star.PadRight(3, '*') + blank.PadRight(7, ' '),
                                    blank.PadLeft(5, ' ') + star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(48, ' '),
                                    bb.W_1480_net_before_vat_txt.PadLeft(13, ' ')); //20 L1,R1
                    sb.Append("\r\n"); //CR&LF to line20
                    if (string.IsNullOrEmpty(bb.W_1550_case_text7))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(44, ' '),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadLeft(20, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text7, 42),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }

                    sb.Append("\r\n"); //CR&LF to line21
                    if (string.IsNullOrEmpty(bb.W_1550_case_text8))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        blank.PadLeft(10, ' ') + star.PadLeft(3, '*'),
                                        blank.PadLeft(7, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(48, ' '),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadLeft(10, ' ') + star.PadLeft(3, '*'),
                                        blank.PadLeft(7, ' ') + star.PadLeft(11, '*'),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                         blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text8, 46),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*'));
                    }

                    sb.Append("\r\n"); //CR&LF to line22
                    //********************************************************************************************************************
                    string barcode1 = string.Empty;
                    if (bb.W_1590_barcode1 != string.Empty)
                        barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";

                    string barcode2 = string.Empty;
                    if (bb.W_1600_barcode2 != string.Empty)
                        barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";

                    //2017-02-02  สลับบาร์โค้ด 1 <--> 2
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(20, ' '),
                                    star.PadLeft(11, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                    //23 B1,L1-3
                    //********************************************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line23
                    //ย้ายจาก Line 24 โดยทำการตัดส่วนของ Barcode ทางด้านขวาออก
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    star.PadRight(29, '*') + blank.PadRight(4, ' '));

                    sb.Append("\r\n");
                    sb.Append("\r\n"); //CR&LF to line24

                    //********************************************************************************************************************

                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(2, ' '),
                                    bb.W_1345_blue_txt1.PadRight(33, ' '),
                        //blank.PadRight(2, ' '),
                        //star.PadRight(29, '*') + blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                    //25 B2********Barcode**********
                    //********************************************************************************************************************

                    sb.Append("\r\n"); //CR&LF to line25
                    //เพิ่มฟิลด์ W_2080_taxid_c 
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_2080_taxid_c, 33));
                    sb.Append("\r\n");
                    sb.Append("\r\n"); //CR&LF to line26
                    //Fix
                    //-------------------------------
                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadRight(9, ' '),
                                        bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                        "B" + bb.BillSeqNo.PadLeft(10, '0'),
                                        blank.PadRight(3, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(51, ' '),
                                        bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadRight(9, ' '),
                                        bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                        "B" + bb.BillSeqNo.PadLeft(7, '0'),
                                        blank.PadRight(6, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(51, ' '),
                                        bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    }
                    //-------------------------------
                    sb.Append("\r\n"); //CR&LF to line27                
                    sb.Append("\r\n"); //CR&LF to line28     
                }
                else
                {
                    sb.Append("\r\n"); //CR&LF to line 7
                    string tmp90 = bb.W_90_cust_name1 + bb.W_90_cust_name2;
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                                    (tmp90.Length > 30
                                         ? StringConvert.PadRight(tmp90.Substring(0, 29), 31)
                                         : StringConvert.PadRight(tmp90, 31)),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_221_address); //8 L1(substring90),R1
                    sb.Append("\r\n"); //CR&LF to line 8
                    //if string in second line has length > 30
                    string tmp90_2 = string.Empty;
                    if (tmp90.Length > 60)
                        tmp90_2 = (tmp90.Length > 30 ? tmp90.Substring(29, 29).PadRight(31, ' ') : "".PadRight(31, ' '));
                    else
                        tmp90_2 = (tmp90.Length > 30
                                       ? tmp90.Substring(29, tmp90.Length - 29).PadRight(31, ' ')
                                       : "".PadRight(31, ' '));

                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(4, ' '),
                        //(tmp90.Length > 30 ? StringConvert.PadRight(tmp90.Substring(29, tmp90.Length-29), 31) : blank.PadRight(31, ' ')),
                                    tmp90_2,
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    bb.W_222_address); //9 L1,R1
                    sb.Append("\r\n"); //CR&LF to line9
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_216_address, 31),
                        //**********Right Part**********//
                                    blank.PadRight(5, ' '),
                                    StringConvert.PadRight(bb.W_223_address, 45),
                                    bb.W_230_post_code); //10 L1,R1,R2
                    sb.Append("\r\n"); //CR&LF to line10
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_217_address, 31),
                        //**********Right Part**********//
                                    bb.W_500_txt6.PadLeft(12, ' ')); //11 L1,R1
                    sb.Append("\r\n"); //CR&LF to line11
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                    blank.PadRight(4, ' '),
                                    StringConvert.PadRight(bb.W_218_address, 31),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_255_device_1, 13),
                                    StringConvert.PadLeft(bb.W_260_zwstand_1_txt, 11),
                                    StringConvert.PadLeft(bb.W_270_zwstvor_1_txt, 12),
                                    StringConvert.PadLeft(bb.W_280_umwfakt_1_txt, 10),
                                    StringConvert.PadLeft(bb.W_290_abrmenge_1_txt, 14)); //12 L1,L2,R1-4
                    sb.Append("\r\n"); //CR&LF to line12
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",
                                    blank.PadRight(8, ' '),
                                    StringConvert.PadRight(bb.W_160_device, 19),
                                    bb.W_171_ettat_code.PadRight(8, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_295_device_2, 4),
                                    StringConvert.PadRight(bb.W_350_dash_txt, 6),
                                    StringConvert.PadLeft(bb.W_340_peak_txt, 2),
                        //StringConvert.PadRight(bb.W_340_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_300_zwstand_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_310_zwstvor_2_txt, 12),
                                    StringConvert.PadLeft(bb.W_320_umwfakt_2_txt, 10),
                                    StringConvert.PadLeft(bb.W_330_abrmenge_2_txt, 14)); //13 L1,R1-6
                    sb.Append("\r\n"); //CR&LF to line13
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(11, ' '),
                                    bb.W_140_reg.PadRight(7, ' ') + bb.W_150_contract.PadRight(17, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_355_device_3, 4),
                                    StringConvert.PadRight(bb.W_410_ene_txt, 6),
                                    StringConvert.PadLeft(bb.W_400_off_peak_txt, 2),
                                    StringConvert.PadLeft(bb.W_360_zwstand_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_370_zwstvor_3_txt, 12),
                                    StringConvert.PadLeft(bb.W_380_umwfakt_3_txt, 10),
                                    StringConvert.PadLeft(bb.W_390_abrmenge_3_txt, 14)); //14 L1,L2,R1-6
                    sb.Append("\r\n"); //CR&LF to line14
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(8, ' '),
                                    bb.W_130_period.PadRight(19, ' '),
                                    bb.W_200_mr_date.PadRight(8, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(1, ' '),
                                    StringConvert.PadRight(bb.W_415_device_4, 10),
                                    StringConvert.PadLeft(bb.W_460_hol_txt, 2),
                                    StringConvert.PadLeft(bb.W_420_zwstand_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_430_zwstvor_4_txt, 12),
                                    StringConvert.PadLeft(bb.W_440_umwfakt_4_txt, 10),
                                    StringConvert.PadLeft(bb.W_450_abrmenge_4_txt, 14)); //15 L1,L2,R1-5
                    sb.Append("\r\n"); //CR&LF to line15
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    StringConvert.PadLeft(bb.W_470_zwstand_1_txt, 18),
                                    StringConvert.PadLeft(bb.W_480_zwstvor_1_txt, 17),
                        //bb.W_470_zwstand_1_txt.PadLeft(18, ' '),
                        //bb.W_480_zwstvor_1_txt.PadLeft(17, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    bb.W_1550_case_text1); //16 L1,N1
                    sb.Append("\r\n"); //CR&LF to line16
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    bb.W_490_consumption_txt.PadLeft(31, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text2, 40),
                                    blank.PadRight(6, ' '),
                                    bb.W_1310_amount_txt.PadLeft(13, ' ')); //17 N1,L1,R1
                    sb.Append("\r\n"); //CR&LF to line17                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    bb.W_1310_amount_txt.PadLeft(31, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text3, 40),
                                    StringConvert.PadLeft(bb.W_1460_mr_kw_17_7, 6),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' ')); //18 N1,L1,L2,L3,R1,R2
                    sb.Append("\r\n"); //CR&LF to line18                
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1460_mr_kw_17_7, 16),
                                    bb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' '),
                                    blank.PadRight(1, ' '),
                                    bb.W_1470_baht.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_1550_case_text4, 16),
                                    StringConvert.PadLeft(bb.W_1381_ft_peiod_txt, 14) + "= " +
                                    bb.W_1380_fttot_txt.PadRight(7, ' '),
                                    blank.PadRight(7, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(13, ' ')); //19 N1,L1,L2,R1,R2
                    sb.Append("\r\n"); //CR&LF to line19
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                    blank.PadRight(5, ' '),
                                    bb.W_1380_fttot_txt.PadRight(10, ' '),
                                    bb.W_1400_ftchg_txt.PadLeft(16, ' '),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(48, ' '),
                                    bb.W_1480_net_before_vat_txt.PadLeft(13, ' ')); //20 L1,R1
                    sb.Append("\r\n"); //CR&LF to line20
                    if (string.IsNullOrEmpty(bb.W_1550_case_text7))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        bb.W_1485_net_before_vat_left.PadLeft(31, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(44, ' '),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        bb.W_1485_net_before_vat_left.PadLeft(31, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text7, 42),
                                        bb.W_1490_tax_rate_txt.PadRight(4, ' '),
                                        bb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1,R2
                    }
                    sb.Append("\r\n"); //CR&LF to line21
                    if (string.IsNullOrEmpty(bb.W_1550_case_text8))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}",
                                        bb.W_1490_tax_rate_txt.PadLeft(13, ' '),
                                        bb.W_1505_tax_amount_left.PadLeft(18, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(48, ' '),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        bb.W_1490_tax_rate_txt.PadLeft(13, ' '),
                                        bb.W_1505_tax_amount_left.PadLeft(18, ' '),
                                        blank.PadRight(4, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(2, ' '),
                                        StringConvert.PadRight(bb.W_1550_case_text8, 46),
                                        bb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1
                    }
                    sb.Append("\r\n"); //CR&LF to line22
                    //********************************************************************************************************************
                    string barcode1 = string.Empty;
                    if (bb.W_1590_barcode1 != string.Empty)
                        barcode1 = "BLAN_Barcode_1_Start" + Barcode1Mapping(bb.W_1590_barcode1) + "BLAN_Barcode_1_Stop";

                    string barcode2 = string.Empty;
                    if (bb.W_1600_barcode2 != string.Empty)
                        barcode2 = "BLAN_Barcode_2_Start" + bb.W_1600_barcode2 + "BLAN_Barcode_2_Stop";


                    //2017-02-02  สลับบาร์โค้ด 1 <--> 2
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                                    blank.PadRight(18, ' '),
                                    bb.W_1510_total_amnt_txt.PadLeft(13, '*'),
                                    blank.PadRight(4, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                    //23 B1,L1-3
                    //********************************************************************************************************************
                    sb.Append("\r\n"); //CR&LF to line23
                    //ย้ายจาก Line 24 โดยทำการตัดส่วนของ Barcode ทางด้านขวาออก
                    sb.AppendFormat("{0}{1}{2}{3}{4}",
                    blank.PadRight(2, ' '),
                    StringConvert.PadRight(bb.W_1330_foreign_txt, 18),
                    StringConvert.InsertComma(bb.W_1320_foreign_amt).PadLeft(10, ' '),
                    blank.PadRight(2, ' '),
                    bb.W_1340_foreign_uit.PadRight(3, ' '));

                    sb.Append("\r\n");
                    sb.Append("\r\n"); //CR&LF to line24

                    //********************************************************************************************************************

                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(2, ' '),
                                    bb.W_1345_blue_txt1.PadRight(33, ' '),
                        //blank.PadRight(2, ' '),
                        //StringConvert.PadRight(bb.W_1330_foreign_txt, 18),
                        //StringConvert.InsertComma(bb.W_1320_foreign_amt).PadLeft(10, ' '),
                        //blank.PadRight(2, ' '),
                        //bb.W_1340_foreign_uit.PadRight(3, ' '),
                        //**********Right Part**********//
                                    blank.PadRight(2, ' '),
                        //Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode2 : "");
                                    Convert.ToDouble(bb.W_1510_total_amnt_txt.Trim()) < 1000000 ? barcode1 : "");
                    //25 B2********Barcode**********
                    //********************************************************************************************************************

                    sb.Append("\r\n"); //CR&LF to line25
                    //เพิ่มฟิลด์ W_2080_taxid_c 
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(2, ' '),
                                    StringConvert.PadRight(bb.W_2080_taxid_c, 33));
                    sb.Append("\r\n");
                    sb.Append("\r\n"); //CR&LF to line26
                    //Fix
                    //-------------------------------
                    if (bb.BillSeqNo.Contains("Fix") || bb.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadRight(9, ' '),
                                        bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                        "B" + bb.BillSeqNo.PadLeft(10, '0'),
                                        blank.PadRight(3, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(51, ' '),
                                        bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                        blank.PadRight(9, ' '),
                                        bb.W_1950_collector_id.TrimStart('0').PadRight(13, ' '),
                                        "B" + bb.BillSeqNo.PadLeft(7, '0'),
                                        blank.PadRight(6, ' '),
                            //**********Right Part**********//
                                        blank.PadRight(51, ' '),
                                        bb.W_1580_payment_due_date.PadRight(10, ' ')); //27 R1
                    }
                    sb.Append("\r\n"); //CR&LF to line27                
                    sb.Append("\r\n"); //CR&LF to line28     
                }

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillTxt = resultTxt;
                _bill.BillId = bb.W_140_reg + "-" + bb.W_150_contract;
                _bills.Add(_bill);
            }
            return _bills;
        }

        #endregion

        private List<Bills> AdjustGreenBillLayout(List<GreenBill> _greenBill, bool isOnlyReceipt)
        {
            //Bill หักบัญชีธนาคาร

            List<Bills> _bills = new List<Bills>();

            foreach (GreenBill gb in _greenBill)
            {
                string resultTxt;
                string blank = " ";
                string txt_adjust_gb = gb.W_1550_case_text7 + gb.W_1550_case_text8;

                StringBuilder sb = new StringBuilder();
                sb.Append("\r\n");
                sb.AppendFormat(string.Format("{0}{1}",
                                              blank.PadRight(78, ' '),
                                              gb.W_10_invoice_no)); //1 R1
                sb.Append("\r\n"); //CR&LF to line 2
                sb.Append("\r\n"); //CR&LF to line 3
                sb.AppendFormat(String.Format("{0}{1}{2}",
                                              blank.PadRight(4, ' '),
                                              gb.W_1610_invoice.PadRight(21, ' '),
                                              gb.W_1820_payment_date_24_l1)); //3 L1
                sb.Append("\r\n"); //CR&LF to line 4
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(35, ' '),
                    //**********Right Part**********//
                                isOnlyReceipt == false ? gb.W_140_reg.PadLeft(8, ' ') : blank.PadLeft(8, ' '),
                                blank.PadRight(2, ' '),
                                isOnlyReceipt == false ? gb.W_150_contract.PadRight(18, ' ') : blank.PadRight(18, ' '),
                                gb.W_160_device.PadRight(11, ' '),
                                gb.W_171_ettat_code.PadRight(6, ' '),
                                gb.W_200_mr_date.PadRight(9, ' '),
                                gb.W_130_period.PadRight(7, ' ')); //4 R1-6
                sb.Append("\r\n"); //CR&LF to line 5
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(23, ' '),
                                blank.PadRight(12, ' '),
                    //**********Right Part**********//
                                blank.PadRight(10, ' '),
                                txt_adjust_gb); //6 L1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 6
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                    //blank.PadRight(23, ' '),
                    //gb.W_1620_buss_name.PadRight(12, ' '),
                                blank.PadRight(23, ' '),
                                StringConvert.PadRight(gb.W_1620_buss_name, 12),
                    //**********Right Part**********//
                                blank.PadRight(6, ' '),
                                StringConvert.PadRight(gb.W_100_sender, 44),
                                gb.W_110_post_code); //6 L1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 7
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(4, ' '),
                                StringConvert.PadRight(gb.W_1631_1632_name, 31),
                    //**********Right Part**********//
                                blank.PadRight(6, ' '),
                                gb.W_121_mailing_person); //7 L1,R1
                sb.Append("\r\n"); //CR&LF to line 8
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(4, ' '),
                                StringConvert.PadRight(gb.W_1633_name, 31),
                    //**********Right Part**********//
                                blank.PadRight(6, ' '),
                                gb.W_122_mailing_person); //8 L1,R1
                sb.Append("\r\n"); //CR&LF to line 9
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(4, ' '),
                                StringConvert.PadRight(gb.W_211_address, 31),
                    //**********Right Part**********//
                                blank.PadRight(6, ' '),
                                gb.W_241_242_address); //9 L1,R1
                sb.Append("\r\n"); //CR&LF to line 10
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                blank.PadRight(4, ' '),
                                StringConvert.PadRight(gb.W_212_address, 31),
                    //**********Right Part**********//
                                blank.PadRight(6, ' '),
                                StringConvert.PadRight(gb.W_243_address, 44),
                                gb.W_250_post_code); //10 L1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 11
                sb.AppendFormat("{0}{1}{2}",
                                blank.PadRight(4, ' '),
                                StringConvert.PadRight(gb.W_213_address, 31),
                    //**********Right Part**********//
                                gb.W_500_txt6.PadLeft(12, ' ')); //11 L1,R1
                sb.Append("\r\n"); //CR&LF to line 12
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}",
                                blank.PadRight(8, ' '),
                                StringConvert.PadRight(gb.W_1640_device_13_l1, 19),
                                gb.W_1650_rate_cat_13_l2.PadRight(8, ' '),
                    //**********Right Part**********//
                                blank.PadRight(1, ' '),
                                StringConvert.PadRight(gb.W_255_device_1, 12),
                                StringConvert.PadLeft(gb.W_260_zwstand_1_txt, 12),
                                StringConvert.PadLeft(gb.W_270_zwstvor_1_txt, 12),
                                StringConvert.PadLeft(gb.W_280_umwfakt_1_txt, 10),
                                StringConvert.PadLeft(gb.W_290_abrmenge_1_txt, 14)); //12 L1,L2,R1-4
                sb.Append("\r\n"); //CR&LF to line 13
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                blank.PadRight(11, ' '),
                                gb.W_1660_contract_ac_14_l1.Trim() == string.Empty
                                    ? blank.PadRight(24, ' ')
                                    : gb.W_140_reg.PadRight(7, ' ') + gb.W_1660_contract_ac_14_l1.PadRight(17, ' '),
                    //**********Right Part**********//
                                blank.PadRight(1, ' '),
                                StringConvert.PadRight(gb.W_295_device_2, 4),
                                gb.W_350_dash_txt.PadRight(6, ' '),
                                gb.W_340_peak_txt.PadLeft(2, ' '),
                                StringConvert.PadLeft(gb.W_300_zwstand_2_txt, 12),
                                StringConvert.PadLeft(gb.W_310_zwstvor_2_txt, 12),
                                StringConvert.PadLeft(gb.W_320_umwfakt_2_txt, 10),
                                StringConvert.PadLeft(gb.W_330_abrmenge_2_txt, 14)); //13 L1,R1-6
                sb.Append("\r\n"); //CR&LF to line 14
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}",
                                blank.PadRight(8, ' '),
                                gb.W_1670_period_15_l1.PadRight(19, ' '),
                                gb.W_1680_mr_date_15_l2.PadRight(8, ' '),
                    //**********Right Part**********//
                                blank.PadRight(1, ' '),
                                StringConvert.PadRight(gb.W_355_device_3, 4),
                                gb.W_410_ene_txt.PadRight(6, ' '),
                                gb.W_400_off_peak_txt.PadLeft(2, ' '),
                                StringConvert.PadLeft(gb.W_360_zwstand_3_txt, 12),
                                StringConvert.PadLeft(gb.W_370_zwstvor_3_txt, 12),
                                StringConvert.PadLeft(gb.W_380_umwfakt_3_txt, 10),
                                StringConvert.PadLeft(gb.W_390_abrmenge_3_txt, 14)); //14 L1,L2,R1-6
                sb.Append("\r\n"); //CR&LF to line 15
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}",
                                StringConvert.PadLeft(gb.W_1690_unit_after_16_l1, 18),
                                StringConvert.PadLeft(gb.W_1700_unit_previous_16_l2, 17),
                    //gb.W_1690_unit_after_16_l1.PadLeft(18, ' '),
                    //gb.W_1700_unit_previous_16_l2.PadLeft(17, ' '),
                    //**********Right Part**********//
                                blank.PadRight(1, ' '),
                                StringConvert.PadRight(gb.W_415_device_4, 10),
                                gb.W_460_hol_txt.PadLeft(2, ' '),
                                StringConvert.PadLeft(gb.W_420_zwstand_4_txt, 12),
                                StringConvert.PadLeft(gb.W_430_zwstvor_4_txt, 12),
                                StringConvert.PadLeft(gb.W_440_umwfakt_4_txt, 10),
                                StringConvert.PadLeft(gb.W_450_abrmenge_4_txt, 14)); //15 L1,L2,R1-5
                sb.Append("\r\n"); //CR&LF to line 16
                sb.AppendFormat("{0}{1}{2}{3}",
                                gb.W_1710_consumption_17_l1.PadLeft(31, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_1550_case_text1, 40)); //16 L1,N1
                sb.Append("\r\n"); //CR&LF to line 17
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                gb.W_1720_based_amount_18_l1.PadLeft(31, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_1550_case_text2, 40),
                                blank.PadRight(6, ' '),
                                gb.W_1310_amount_txt.PadLeft(13, ' ')); //17 L1,N1,R1
                sb.Append("\r\n"); //CR&LF to line 18
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}",
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_1740_disct_descript, 15),
                                gb.W_1730_discount_amount_19_l1.PadLeft(14, ' '),
                                blank.PadRight(1, ' '),
                                StringConvert.PadRight(gb.W_1750_baht, 3),
                    //**********Right Part**********//
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_1550_case_text3, 40),
                                StringConvert.PadLeft(gb.W_1460_mr_kw_17_7, 6),
                                gb.W_1450_mr_kw_17_6_txt.PadLeft(13, ' ')); //18 L1-3,N1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 19
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}{9}",
                                blank.PadRight(5, ' '),
                                gb.W_1770_ft_price_20_l2.PadRight(10, ' '),
                                gb.W_1760_ft_amount_20_l1.PadLeft(16, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_1550_case_text4, 16),
                                StringConvert.PadLeft(gb.W_1381_ft_peiod_txt, 14) + "= ",
                                gb.W_1380_fttot_txt.PadRight(7, ' '),
                                blank.PadRight(6, ' '),
                                gb.W_1400_ftchg_txt.PadLeft(14, ' ')); //19 L1,L2,N1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 20
                sb.AppendFormat("{0}{1}{2}{3}",
                                gb.W_1780_net_before_tax_21_l1.PadLeft(31, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(50, ' '),
                                gb.W_1480_net_before_vat_txt.PadLeft(11, ' ')); //20 L1,R1

                sb.Append("\r\n"); //CR&LF to line 21
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(9, ' '),
                                gb.W_1800_tax_rate_22_l2.PadRight(5, ' '),
                                gb.W_1790_tax_amount_22_l1.PadLeft(17, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(14, ' '),
                                gb.W_1570_account_number.PadRight(28, ' '),
                                gb.W_1490_tax_rate_txt.PadRight(6, ' '),
                                gb.W_1500_tax_amount_txt.PadLeft(13, ' ')); //21 L1,L2,R1-3
                sb.Append("\r\n"); //CR&LF to line 22
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                gb.W_1810_total_value_23_l1.PadLeft(31, ' '),
                                blank.PadRight(4, ' '),
                    //**********Right Part**********//
                                blank.PadRight(20, ' '),
                                FormatStringDate(gb.W_1581_bank_due_date).PadRight(28, ' '),
                                gb.W_1510_total_amnt_txt.PadLeft(13, '*')); //22 L1,R1,R2
                sb.Append("\r\n"); //CR&LF to line 23
                sb.AppendFormat("{0}{1}{2}",
                    //blank.PadRight(18, ' '),
                    //blank.PadRight(9, ' '),
                                blank.PadRight(2, ' '),
                                StringConvert.PadRight(gb.W_2080_taxid_c, 24),
                                "G" + gb.BillSeqNo.PadLeft(7, '0')); //23 L1
                sb.Append("\r\n"); //CR&LF to line 24                    
                resultTxt = sb.ToString();

                Bills _bill = new Bills();
                _bill.BillId = gb.W_140_reg + "-" + gb.W_150_contract;
                _bill.BillTxt = resultTxt;
                _bills.Add(_bill);
            }
            return _bills;
        }

        private List<Bills> AdjustA4BillLayout(List<A4Bill> _a4Bill, string auName, string auPosition)
        {
            List<Bills> _bills = new List<Bills>();

            foreach (A4Bill a4 in _a4Bill)
            {
                string resultTxt;
                string blank = " ";
                
                string txt_adjust_a4 = a4.W_1550_case_text7 + a4.W_1550_case_text8;

                bool isDiscount3Percent = false;
                if (!String.IsNullOrEmpty(a4.W_1550_case_text8) || a4.W_1550_case_text8 != "")
                {
                    isDiscount3Percent = true;
                }
                //A4Bill has very strange line, don't forget to take a look na krub
                StringBuilder sb = new StringBuilder();
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}",
                                blank.PadRight(7, ' '),
                                a4.W_30_invoice_no.PadRight(50, ' '),
                                a4.W_40_sname); //1 1,2
                sb.Append("\r\n"); //CR&LF to line 2
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(67, ' '),
                                a4.W_50_day.PadRight(8, ' '),
                                StringConvert.PadRight(a4.W_60_month, 14),
                                a4.W_70_year); //2 1-3
                sb.Append("\r\n"); //CR&LF to line 3
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}",
                                blank.PadRight(7, ' '),
                                a4.W_80_cust_name1_name2); //3 1
                sb.Append("\r\n"); //CR&LF to line 4  
                // 2023-05-19 : Test print address
                //sb.AppendFormat("{0}{1}",
                //            blank.PadRight(7, ' '),
                //            "ที่อยู่ : การไฟฟ้าส่วนภูมิภาค สำนักงานใหญ่ 200 ถนนงามวงศ์วาน ลาดยาว จตุจักร กรุงเทพ 10900 v 1.0"); 
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}",
                                blank.PadRight(44, ' '),
                                a4.W_130_period); //4 1
                sb.Append("\r\n"); //CR&LF to line 5
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(5, ' '),
                                a4.W_140_reg.PadRight(11, ' '),
                                a4.W_150_contract.PadRight(21, ' '),
                                StringConvert.PadRight(a4.W_160_device, 14),
                                a4.W_171_ettat_code.PadRight(11, ' '),
                                a4.W_180_voltage.PadRight(13, ' '),
                                a4.W_190_multi_t.PadRight(8, ' '),
                                a4.W_200_mr_date.PadRight(9, ' ')); //5 1-7
                sb.Append("\r\n"); //CR&LF to line 6_1
                sb.Append("\r\n");
                sb.AppendFormat("{0}", a4.W_500_txt6.PadLeft(11, ' '));
                sb.Append("\r\n"); //CR&LF to line 6_2
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_555_device_6_7, 9),
                                a4.W_550_mr_kw_6_5.PadLeft(2, ' '),
                    //a4.W_510_mr_kw_6_1_txt.PadLeft(12, ' '),
                    //a4.W_520_mr_kw_6_2_txt.PadLeft(12, ' '),
                    //a4.W_530_mr_kw_6_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_510_mr_kw_6_1_txt, 12),
                                StringConvert.PadLeft(a4.W_520_mr_kw_6_2_txt, 12),
                                StringConvert.PadLeft(a4.W_530_mr_kw_6_3_txt, 13),
                                StringConvert.InsertComma(a4.W_540_mr_kw_6_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1350_ftgen_txt, 14).PadLeft(14, ' ')); //6 1-7
                sb.Append("\r\n"); //CR&LF to line 7 
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_600_mr_kw_7_5.PadLeft(11, ' '),
                    //a4.W_560_mr_kw_7_1_txt.PadLeft(12, ' '),
                    //a4.W_570_mr_kw_7_2_txt.PadLeft(12, ' '),
                    //a4.W_580_mr_kw_7_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_560_mr_kw_7_1_txt, 12),
                                StringConvert.PadLeft(a4.W_570_mr_kw_7_2_txt, 12),
                                StringConvert.PadLeft(a4.W_580_mr_kw_7_3_txt, 13),
                                StringConvert.InsertComma(a4.W_590_mr_kw_7_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1360_fttrn_txt, 14).PadLeft(14, ' ')); //7 1-6
                sb.Append("\r\n"); //CR&LF to line 8
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_640_mr_kw_8_5.PadLeft(11, ' '),
                    //a4.W_610_mr_kw_8_1_txt.PadLeft(12, ' '),
                    //a4.W_620_mr_kw_8_2_txt.PadLeft(12, ' '),
                    //a4.W_630_mr_kw_8_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_610_mr_kw_8_1_txt, 12),
                                StringConvert.PadLeft(a4.W_620_mr_kw_8_2_txt, 12),
                                StringConvert.PadLeft(a4.W_630_mr_kw_8_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1370_ftdis_txt, 14).PadLeft(14, ' ')); //8 1-6 no 4
                sb.Append("\r\n"); //CR&LF to line 9
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_695_device_9_7, 9),
                                a4.W_690_mr_kw_9_5.PadLeft(2, ' '),
                    //a4.W_650_mr_kw_9_1_txt.PadLeft(12, ' '),
                    //a4.W_660_mr_kw_9_2_txt.PadLeft(12, ' '),
                    //a4.W_670_mr_kw_9_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_650_mr_kw_9_1_txt, 12),
                                StringConvert.PadLeft(a4.W_660_mr_kw_9_2_txt, 12),
                                StringConvert.PadLeft(a4.W_670_mr_kw_9_3_txt, 13),
                                StringConvert.InsertComma(a4.W_680_mr_kw_9_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1380_fttot_txt, 14).PadLeft(14, ' ')); //9 1-6
                sb.Append("\r\n"); //CR&LF to line 10
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_740_mr_kw_10_5.PadLeft(11, ' '),
                    //a4.W_700_mr_kw_10_1_txt.PadLeft(12, ' '),
                    //a4.W_710_mr_kw_10_2_txt.PadLeft(12, ' '),
                    //a4.W_720_mr_kw_10_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_700_mr_kw_10_1_txt, 12),
                                StringConvert.PadLeft(a4.W_710_mr_kw_10_2_txt, 12),
                                StringConvert.PadLeft(a4.W_720_mr_kw_10_3_txt, 13),
                                StringConvert.InsertComma(a4.W_730_mr_kw_10_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1390_ftunit_txt, 14).PadLeft(14, ' ')); //10 1-6
                sb.Append("\r\n"); //CR&LF to line 11
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_780_mr_kw_11_5.PadLeft(11, ' '),
                    //a4.W_750_mr_kw_11_1_txt.PadLeft(12, ' '),
                    //a4.W_760_mr_kw_11_2_txt.PadLeft(12, ' '),
                    //a4.W_770_mr_kw_11_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_750_mr_kw_11_1_txt, 12),
                                StringConvert.PadLeft(a4.W_760_mr_kw_11_2_txt, 12),
                                StringConvert.PadLeft(a4.W_770_mr_kw_11_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1400_ftchg_txt, 14).PadLeft(14, ' ')); //11 1-6 no 4
                sb.Append("\r\n"); //CR&LF to line 12
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                StringConvert.PadLeft(a4.W_835_device_12_7, 9),
                                a4.W_830_mr_kw_12_5.PadLeft(2, ' '),
                    //a4.W_790_mr_kw_12_1_txt.PadLeft(12, ' '),
                    //a4.W_800_mr_kw_12_2_txt.PadLeft(12, ' '),
                    //a4.W_810_mr_kw_12_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_790_mr_kw_12_1_txt, 12),
                                StringConvert.PadLeft(a4.W_800_mr_kw_12_2_txt, 12),
                                StringConvert.PadLeft(a4.W_810_mr_kw_12_3_txt, 13),
                                StringConvert.InsertComma(a4.W_820_mr_kw_12_4_txt, 14).PadLeft(14, ' ')); //12 1-5
                sb.Append("\r\n"); //CR&LF to line 13
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                a4.W_890_mr_kw_13_5.PadLeft(11, ' '),
                    //a4.W_840_mr_kw_13_1_txt.PadLeft(12, ' '),
                    //a4.W_850_mr_kw_13_2_txt.PadLeft(12, ' '),
                    //a4.W_860_mr_kw_13_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_840_mr_kw_13_1_txt, 12),
                                StringConvert.PadLeft(a4.W_850_mr_kw_13_2_txt, 12),
                                StringConvert.PadLeft(a4.W_860_mr_kw_13_3_txt, 13),
                                StringConvert.InsertComma(a4.W_870_mr_kw_13_4_txt, 14).PadLeft(14, ' ')); //13 1-5
                sb.Append("\r\n"); //CR&LF to line 14
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}",
                                a4.W_930_mr_kw_14_5.PadLeft(11, ' '),
                    //a4.W_900_mr_kw_14_1_txt.PadLeft(12, ' '),
                    //a4.W_910_mr_kw_14_2_txt.PadLeft(12, ' '),
                    //a4.W_920_mr_kw_14_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_900_mr_kw_14_1_txt, 12),
                                StringConvert.PadLeft(a4.W_910_mr_kw_14_2_txt, 12),
                                StringConvert.PadLeft(a4.W_920_mr_kw_14_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(2, ' '),
                                StringConvert.PadLeft(a4.W_1420_amin_14_7, 8),
                                blank.PadRight(6, ' '),
                                StringConvert.InsertComma(a4.W_1410_basic_14_6_txt, 14).PadLeft(14, ' ')); //14 1-7 no 4
                sb.Append("\r\n"); //CR&LF to line 15
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_985_device_15_7, 9),
                                a4.W_980_mr_kw_15_5.PadLeft(2, ' '),
                    //a4.W_940_mr_kw_15_1_txt.PadLeft(12, ' '),
                    //a4.W_950_mr_kw_15_2_txt.PadLeft(12, ' '),
                    //a4.W_960_mr_kw_15_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_940_mr_kw_15_1_txt, 12),
                                StringConvert.PadLeft(a4.W_950_mr_kw_15_2_txt, 12),
                                StringConvert.PadLeft(a4.W_960_mr_kw_15_3_txt, 13),
                                StringConvert.InsertComma(a4.W_970_mr_kw_15_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1430_ft_basic_txt, 14).PadLeft(14, ' ')); //15 1-6
                sb.Append("\r\n"); //CR&LF to line 16
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_1030_mr_kw_16_5.PadLeft(11, ' '),
                    //a4.W_990_mr_kw_16_1_txt.PadLeft(12, ' '),
                    //a4.W_1000_mr_kw_16_2_txt.PadLeft(12, ' '),
                    //a4.W_1010_mr_kw_16_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_990_mr_kw_16_1_txt, 12),
                                StringConvert.PadLeft(a4.W_1000_mr_kw_16_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1010_mr_kw_16_3_txt, 13),
                                StringConvert.InsertComma(a4.W_1020_mr_kw_16_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1440_power_txt, 14).PadLeft(14, ' ')); //16 1-6
                sb.Append("\r\n"); //CR&LF to line 17
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_1070_mr_kw_17_5.PadLeft(11, ' '),
                    //a4.W_1040_mr_kw_17_1_txt.PadLeft(12, ' '),
                    //a4.W_1050_mr_kw_17_2_txt.PadLeft(12, ' '),
                    //a4.W_1060_mr_kw_17_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_1040_mr_kw_17_1_txt, 12),
                                StringConvert.PadLeft(a4.W_1050_mr_kw_17_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1060_mr_kw_17_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                StringConvert.PadLeft(a4.W_1460_mr_kw_17_7, 16),
                                StringConvert.InsertComma(a4.W_1450_mr_kw_17_6_txt, 14).PadLeft(14, ' ')); //17 1-7 no 4
                sb.Append("\r\n"); //CR&LF to line 18
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                a4.W_1080_service_txt.PadLeft(26, ' '),
                                StringConvert.InsertComma(a4.W_1090_service_support_txt, 18).PadLeft(18, ' '),
                                StringConvert.InsertComma(a4.W_1100_sum_service_support_txt, 18).PadLeft(18, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1480_net_before_vat_txt, 14).PadLeft(14, ' ')); //18 1-4
                sb.Append("\r\n"); //CR&LF to line 19

                string taxRate = a4.W_1490_tax_rate_txt;
                if (taxRate != string.Empty && taxRate.Contains("."))
                {
                    string[] tmp = taxRate.Split(new char[] { '.' });
                    if (Convert.ToInt16(tmp[1]) == 0)
                        taxRate = tmp[0];
                }

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                blank.PadRight(11, ' '),
                                a4.W_1120_description.PadRight(38, ' '),
                                StringConvert.InsertComma(a4.W_1110_basic_19_1_txt, 13).PadLeft(13, ' '),
                                blank.PadRight(10, ' '),
                                taxRate.PadRight(6, ' '),
                                StringConvert.InsertComma(a4.W_1500_tax_amount_txt, 14).PadLeft(14, ' ')); //19 1-4

                sb.Append("\r\n"); //CR&LF to line 20
                sb.AppendFormat("{0}{1}{2}{3}",
                    //a4.W_1130_kvar_20_1_txt.PadLeft(23, ' '),
                    //a4.W_1140_kvar_20_2_txt.PadLeft(12, ' '),
                    //a4.W_1150_kvar_20_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_1130_kvar_20_1_txt, 23),
                                StringConvert.PadLeft(a4.W_1140_kvar_20_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1150_kvar_20_3_txt, 13),
                                StringConvert.InsertComma(a4.W_1160_kvar_20_4_txt, 14).PadLeft(14, ' ')); //20 1-4
                sb.Append("\r\n"); //CR&LF to line 21

                if (isDiscount3Percent == true)
                {
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                        //a4.W_1170_kvar_21_1_txt.PadLeft(23, ' '),
                        //a4.W_1180_kvar_21_2_txt.PadLeft(12, ' '),
                        //a4.W_1190_kvar_21_3_txt.PadLeft(13, ' '),
                                    StringConvert.PadLeft(a4.W_1170_kvar_21_1_txt, 23),
                                    StringConvert.PadLeft(a4.W_1180_kvar_21_2_txt, 12),
                                    StringConvert.PadLeft(a4.W_1190_kvar_21_3_txt, 13),
                                    StringConvert.InsertComma(a4.W_1200_kvar_21_4_txt, 14).PadLeft(14, ' '),
                                    blank.PadRight(9, ' '),
                                    "///////",                                                                  //รวมเงินที่ต้องชำระ  
                                    StringConvert.InsertComma(a4.W_1510_total_amnt_txt, 14).PadLeft(14, '*')); //21 1-5
                }
                else
                {
                    sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                        //a4.W_1170_kvar_21_1_txt.PadLeft(23, ' '),
                        //a4.W_1180_kvar_21_2_txt.PadLeft(12, ' '),
                        //a4.W_1190_kvar_21_3_txt.PadLeft(13, ' '),
                                    StringConvert.PadLeft(a4.W_1170_kvar_21_1_txt, 23),
                                    StringConvert.PadLeft(a4.W_1180_kvar_21_2_txt, 12),
                                    StringConvert.PadLeft(a4.W_1190_kvar_21_3_txt, 13),
                                    StringConvert.InsertComma(a4.W_1200_kvar_21_4_txt, 14).PadLeft(14, ' '),
                                    blank.PadRight(16, ' '),                                                    //รวมเงินที่ต้องชำระ                               
                                    StringConvert.InsertComma(a4.W_1510_total_amnt_txt, 14).PadLeft(14, '*')); //21 1-5
                }
                sb.Append("\r\n"); //CR&LF to line 22
                sb.Append("\r\n"); //CR&LF to line 23
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1210_gen_kw_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1220_trans_kw_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1230_dist_kw_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text1); //23 1-4
                sb.Append("\r\n"); //CR&LF to line 24
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1240_gen_kwh_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1250_trans_kwh_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1260_dist_kwh_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text2); //24 1-4
                sb.Append("\r\n"); //CR&LF to line 25
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadLeft(41, ' '),
                                StringConvert.InsertComma(a4.W_1270_dis_supp_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text3); //25 3
                sb.Append("\r\n"); //CR&LF to line 26
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1280_gen_ft_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1290_trans_ft_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1300_dist_ft_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text4); //26 1-3
                sb.Append("\r\n"); //CR&LF to line 27

                if (!string.IsNullOrEmpty(a4.W_2030_barcode_a4))
                {
                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_A4_Barcode_Start" + a4.W_2030_barcode_a4 + "BLAN_A4_Barcode_Stop";

                    sb.Append("\r\n"); //CR&LF to line 27.5
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(8, ' '),
                                    barcode1); //27 1
                    sb.Append("\r\n"); //CR&LF to line 28
                    sb.Append("\r\n"); //CR&LF to line 29s
                    sb.Append("\r\n"); //CR&LF to line 31
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(22, ' '),
                                    "(" + a4.W_1560_spell_amount + ")"); //31 1
                    sb.Append("\r\n"); //CR&LF to line 32
                    sb.Append("\r\n");
                    //แก้ไข สลับตำแหน่ง 2019FEB26 by Uthen
                    sb.AppendFormat("{0}{1}{2}{3}",
                                    blank.PadRight(25, ' '),
                                    StringConvert.PadRight(FormatStringShortDate(a4.W_1580_payment_due_date), 15)
                                    , blank.PadLeft(1, ' ')
                                    , txt_adjust_a4.PadRight(80, ' ')); //32 1
                    sb.Append("\r\n"); //CR&LF to line 33
                    sb.Append("\r\n");
                    string psText = "โปรดชำระเงินที่สำนักงานการไฟฟ้าเท่านั้น";
                    sb.AppendFormat("{0}{1}", blank.PadRight(12, ' '), psText); //33 1
                    sb.Append("\r\n"); //CR&LF to line 34
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(12, ' '),
                                    a4.W_1850_1851_adjust_amt);
                    sb.Append("\r\n");
                    //แก้ไข สลับตำแหน่ง 2019FEB28 by Uthen
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(16, ' '),
                                    a4.Special1580Text.PadRight(80, ' '));
                    //sb.AppendFormat("{0}{1}",
                    //                blank.PadRight(16, ' '),
                    //                txt_adjust_a4.PadRight(80, ' '));
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auName);
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auPosition);
                    sb.Append("\r\n");

                    //Fix
                    if (a4.BillSeqNo.Contains("Fix") || a4.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(80, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(10, '0'));
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(83, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(7, '0'));
                    }
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    a4.W_1550_case_text5); //27 1
                    sb.Append("\r\n"); //CR&LF to line 28
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    a4.W_1550_case_text6); //28 1
                    sb.Append("\r\n"); //CR&LF to line 29
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    blank); //29 1 Replace W_1550_case_text8 by blank
                    sb.Append("\r\n"); //CR&LF to line 30
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    blank); //30 1 Replace W_1550_case_text8 by blank
                    sb.Append("\r\n"); //CR&LF to line 31
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(22, ' '),
                                    "(" + a4.W_1560_spell_amount + ")"); //31 1
                    sb.Append("\r\n"); //CR&LF to line 32
                    sb.Append("\r\n");
                    //sb.AppendFormat("{0}{1}{2}",
                    //                blank.PadRight(25, ' '),
                    //                StringConvert.PadRight(FormatStringShortDate(a4.W_1580_payment_due_date), 28),
                    //                a4.Special1580Text); //32 1
                    sb.AppendFormat("{0}{1}{2}{3}",
                                   blank.PadRight(25, ' '),
                                   StringConvert.PadRight(FormatStringShortDate(a4.W_1580_payment_due_date), 15)
                                   , blank.PadLeft(1, ' ')
                                   , txt_adjust_a4.PadRight(80, ' ')); //32 1

                    sb.Append("\r\n"); //CR&LF to line 33
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(12, ' '),
                                    a4.W_1850_1851_adjust_amt); //33 1
                    sb.Append("\r\n"); //CR&LF to line 34
                    sb.Append("\r\n"); // CR&LF to line 35 by Uthen 19-5-2015
                    //sb.AppendFormat("{0}{1}",
                    //                blank.PadRight(16, ' '),
                    //                txt_adjust_a4.PadRight(80, ' '));
                    //แก้ไข สลับตำแหน่ง 2019FEB28 by Uthen
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(16, ' '),
                                    a4.Special1580Text.PadRight(80, ' '));
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auName);
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auPosition);
                    sb.Append("\r\n");
                    //Fix
                    if (a4.BillSeqNo.Contains("Fix") || a4.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(80, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(10, '0'));
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(83, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(7, '0'));
                    }
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillId = a4.W_140_reg + "-" + a4.W_150_contract;
                _bill.BillTxt = resultTxt;
                _bills.Add(_bill);
            }

            return _bills;
        }

        private List<Bills> AdjustA4BillLayoutBK(List<A4Bill> _a4Bill, string auName, string auPosition)
        {
            List<Bills> _bills = new List<Bills>();

            foreach (A4Bill a4 in _a4Bill)
            {
                string resultTxt;
                string blank = " ";
                string txt_adjust_a4 = a4.W_1550_case_text7 + a4.W_1550_case_text8;
               
                //A4Bill has very strange line, don't forget to take a look na krub
                StringBuilder sb = new StringBuilder();
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}",
                                blank.PadRight(7, ' '),
                                a4.W_30_invoice_no.PadRight(50, ' '),
                                a4.W_40_sname); //1 1,2
                sb.Append("\r\n"); //CR&LF to line 2
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadRight(67, ' '),
                                a4.W_50_day.PadRight(8, ' '),
                                StringConvert.PadRight(a4.W_60_month, 14),
                                a4.W_70_year); //2 1-3
                sb.Append("\r\n"); //CR&LF to line 3
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}",
                                blank.PadRight(7, ' '),
                                a4.W_80_cust_name1_name2); //3 1
                sb.Append("\r\n"); //CR&LF to line 4
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}",
                                blank.PadRight(44, ' '),
                                a4.W_130_period); //4 1
                sb.Append("\r\n"); //CR&LF to line 5
                sb.Append("\r\n");
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                blank.PadRight(5, ' '),
                                a4.W_140_reg.PadRight(11, ' '),
                                a4.W_150_contract.PadRight(21, ' '),
                                StringConvert.PadRight(a4.W_160_device, 14),
                                a4.W_171_ettat_code.PadRight(11, ' '),
                                a4.W_180_voltage.PadRight(13, ' '),
                                a4.W_190_multi_t.PadRight(8, ' '),
                                a4.W_200_mr_date.PadRight(9, ' ')); //5 1-7
                sb.Append("\r\n"); //CR&LF to line 6_1
                sb.Append("\r\n");
                sb.AppendFormat("{0}", a4.W_500_txt6.PadLeft(11, ' '));
                sb.Append("\r\n"); //CR&LF to line 6_2
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_555_device_6_7, 9),
                                a4.W_550_mr_kw_6_5.PadLeft(2, ' '),
                    //a4.W_510_mr_kw_6_1_txt.PadLeft(12, ' '),
                    //a4.W_520_mr_kw_6_2_txt.PadLeft(12, ' '),
                    //a4.W_530_mr_kw_6_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_510_mr_kw_6_1_txt, 12),
                                StringConvert.PadLeft(a4.W_520_mr_kw_6_2_txt, 12),
                                StringConvert.PadLeft(a4.W_530_mr_kw_6_3_txt, 13),
                                StringConvert.InsertComma(a4.W_540_mr_kw_6_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1350_ftgen_txt, 14).PadLeft(14, ' ')); //6 1-7
                sb.Append("\r\n"); //CR&LF to line 7 
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_600_mr_kw_7_5.PadLeft(11, ' '),
                    //a4.W_560_mr_kw_7_1_txt.PadLeft(12, ' '),
                    //a4.W_570_mr_kw_7_2_txt.PadLeft(12, ' '),
                    //a4.W_580_mr_kw_7_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_560_mr_kw_7_1_txt, 12),
                                StringConvert.PadLeft(a4.W_570_mr_kw_7_2_txt, 12),
                                StringConvert.PadLeft(a4.W_580_mr_kw_7_3_txt, 13),
                                StringConvert.InsertComma(a4.W_590_mr_kw_7_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1360_fttrn_txt, 14).PadLeft(14, ' ')); //7 1-6
                sb.Append("\r\n"); //CR&LF to line 8
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_640_mr_kw_8_5.PadLeft(11, ' '),
                    //a4.W_610_mr_kw_8_1_txt.PadLeft(12, ' '),
                    //a4.W_620_mr_kw_8_2_txt.PadLeft(12, ' '),
                    //a4.W_630_mr_kw_8_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_610_mr_kw_8_1_txt, 12),
                                StringConvert.PadLeft(a4.W_620_mr_kw_8_2_txt, 12),
                                StringConvert.PadLeft(a4.W_630_mr_kw_8_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1370_ftdis_txt, 14).PadLeft(14, ' ')); //8 1-6 no 4
                sb.Append("\r\n"); //CR&LF to line 9
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_695_device_9_7, 9),
                                a4.W_690_mr_kw_9_5.PadLeft(2, ' '),
                    //a4.W_650_mr_kw_9_1_txt.PadLeft(12, ' '),
                    //a4.W_660_mr_kw_9_2_txt.PadLeft(12, ' '),
                    //a4.W_670_mr_kw_9_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_650_mr_kw_9_1_txt, 12),
                                StringConvert.PadLeft(a4.W_660_mr_kw_9_2_txt, 12),
                                StringConvert.PadLeft(a4.W_670_mr_kw_9_3_txt, 13),
                                StringConvert.InsertComma(a4.W_680_mr_kw_9_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1380_fttot_txt, 14).PadLeft(14, ' ')); //9 1-6
                sb.Append("\r\n"); //CR&LF to line 10
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_740_mr_kw_10_5.PadLeft(11, ' '),
                    //a4.W_700_mr_kw_10_1_txt.PadLeft(12, ' '),
                    //a4.W_710_mr_kw_10_2_txt.PadLeft(12, ' '),
                    //a4.W_720_mr_kw_10_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_700_mr_kw_10_1_txt, 12),
                                StringConvert.PadLeft(a4.W_710_mr_kw_10_2_txt, 12),
                                StringConvert.PadLeft(a4.W_720_mr_kw_10_3_txt, 13),
                                StringConvert.InsertComma(a4.W_730_mr_kw_10_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1390_ftunit_txt, 14).PadLeft(14, ' ')); //10 1-6
                sb.Append("\r\n"); //CR&LF to line 11
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_780_mr_kw_11_5.PadLeft(11, ' '),
                    //a4.W_750_mr_kw_11_1_txt.PadLeft(12, ' '),
                    //a4.W_760_mr_kw_11_2_txt.PadLeft(12, ' '),
                    //a4.W_770_mr_kw_11_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_750_mr_kw_11_1_txt, 12),
                                StringConvert.PadLeft(a4.W_760_mr_kw_11_2_txt, 12),
                                StringConvert.PadLeft(a4.W_770_mr_kw_11_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1400_ftchg_txt, 14).PadLeft(14, ' ')); //11 1-6 no 4
                sb.Append("\r\n"); //CR&LF to line 12
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                StringConvert.PadLeft(a4.W_835_device_12_7, 9),
                                a4.W_830_mr_kw_12_5.PadLeft(2, ' '),
                    //a4.W_790_mr_kw_12_1_txt.PadLeft(12, ' '),
                    //a4.W_800_mr_kw_12_2_txt.PadLeft(12, ' '),
                    //a4.W_810_mr_kw_12_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_790_mr_kw_12_1_txt, 12),
                                StringConvert.PadLeft(a4.W_800_mr_kw_12_2_txt, 12),
                                StringConvert.PadLeft(a4.W_810_mr_kw_12_3_txt, 13),
                                StringConvert.InsertComma(a4.W_820_mr_kw_12_4_txt, 14).PadLeft(14, ' ')); //12 1-5
                sb.Append("\r\n"); //CR&LF to line 13
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                a4.W_890_mr_kw_13_5.PadLeft(11, ' '),
                    //a4.W_840_mr_kw_13_1_txt.PadLeft(12, ' '),
                    //a4.W_850_mr_kw_13_2_txt.PadLeft(12, ' '),
                    //a4.W_860_mr_kw_13_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_840_mr_kw_13_1_txt, 12),
                                StringConvert.PadLeft(a4.W_850_mr_kw_13_2_txt, 12),
                                StringConvert.PadLeft(a4.W_860_mr_kw_13_3_txt, 13),
                                StringConvert.InsertComma(a4.W_870_mr_kw_13_4_txt, 14).PadLeft(14, ' ')); //13 1-5
                sb.Append("\r\n"); //CR&LF to line 14
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}{8}",
                                a4.W_930_mr_kw_14_5.PadLeft(11, ' '),
                    //a4.W_900_mr_kw_14_1_txt.PadLeft(12, ' '),
                    //a4.W_910_mr_kw_14_2_txt.PadLeft(12, ' '),
                    //a4.W_920_mr_kw_14_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_900_mr_kw_14_1_txt, 12),
                                StringConvert.PadLeft(a4.W_910_mr_kw_14_2_txt, 12),
                                StringConvert.PadLeft(a4.W_920_mr_kw_14_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                blank.PadRight(2, ' '),
                                StringConvert.PadLeft(a4.W_1420_amin_14_7, 8),
                                blank.PadRight(6, ' '),
                                StringConvert.InsertComma(a4.W_1410_basic_14_6_txt, 14).PadLeft(14, ' ')); //14 1-7 no 4
                sb.Append("\r\n"); //CR&LF to line 15
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}{7}",
                                StringConvert.PadLeft(a4.W_985_device_15_7, 9),
                                a4.W_980_mr_kw_15_5.PadLeft(2, ' '),
                    //a4.W_940_mr_kw_15_1_txt.PadLeft(12, ' '),
                    //a4.W_950_mr_kw_15_2_txt.PadLeft(12, ' '),
                    //a4.W_960_mr_kw_15_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_940_mr_kw_15_1_txt, 12),
                                StringConvert.PadLeft(a4.W_950_mr_kw_15_2_txt, 12),
                                StringConvert.PadLeft(a4.W_960_mr_kw_15_3_txt, 13),
                                StringConvert.InsertComma(a4.W_970_mr_kw_15_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1430_ft_basic_txt, 14).PadLeft(14, ' ')); //15 1-6
                sb.Append("\r\n"); //CR&LF to line 16
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_1030_mr_kw_16_5.PadLeft(11, ' '),
                    //a4.W_990_mr_kw_16_1_txt.PadLeft(12, ' '),
                    //a4.W_1000_mr_kw_16_2_txt.PadLeft(12, ' '),
                    //a4.W_1010_mr_kw_16_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_990_mr_kw_16_1_txt, 12),
                                StringConvert.PadLeft(a4.W_1000_mr_kw_16_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1010_mr_kw_16_3_txt, 13),
                                StringConvert.InsertComma(a4.W_1020_mr_kw_16_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1440_power_txt, 14).PadLeft(14, ' ')); //16 1-6
                sb.Append("\r\n"); //CR&LF to line 17
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}{6}",
                                a4.W_1070_mr_kw_17_5.PadLeft(11, ' '),
                    //a4.W_1040_mr_kw_17_1_txt.PadLeft(12, ' '),
                    //a4.W_1050_mr_kw_17_2_txt.PadLeft(12, ' '),
                    //a4.W_1060_mr_kw_17_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_1040_mr_kw_17_1_txt, 12),
                                StringConvert.PadLeft(a4.W_1050_mr_kw_17_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1060_mr_kw_17_3_txt, 13),
                                blank.PadLeft(14, ' '),
                                StringConvert.PadLeft(a4.W_1460_mr_kw_17_7, 16),
                                StringConvert.InsertComma(a4.W_1450_mr_kw_17_6_txt, 14).PadLeft(14, ' ')); //17 1-7 no 4
                sb.Append("\r\n"); //CR&LF to line 18
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                a4.W_1080_service_txt.PadLeft(26, ' '),
                                StringConvert.InsertComma(a4.W_1090_service_support_txt, 18).PadLeft(18, ' '),
                                StringConvert.InsertComma(a4.W_1100_sum_service_support_txt, 18).PadLeft(18, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1480_net_before_vat_txt, 14).PadLeft(14, ' ')); //18 1-4
                sb.Append("\r\n"); //CR&LF to line 19

                string taxRate = a4.W_1490_tax_rate_txt;
                if (taxRate != string.Empty && taxRate.Contains("."))
                {
                    string[] tmp = taxRate.Split(new char[] { '.' });
                    if (Convert.ToInt16(tmp[1]) == 0)
                        taxRate = tmp[0];
                }

                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                                blank.PadRight(11, ' '),
                                a4.W_1120_description.PadRight(38, ' '),
                                StringConvert.InsertComma(a4.W_1110_basic_19_1_txt, 13).PadLeft(13, ' '),
                                blank.PadRight(10, ' '),
                                taxRate.PadRight(6, ' '),
                                StringConvert.InsertComma(a4.W_1500_tax_amount_txt, 14).PadLeft(14, ' ')); //19 1-4

                sb.Append("\r\n"); //CR&LF to line 20
                sb.AppendFormat("{0}{1}{2}{3}",
                    //a4.W_1130_kvar_20_1_txt.PadLeft(23, ' '),
                    //a4.W_1140_kvar_20_2_txt.PadLeft(12, ' '),
                    //a4.W_1150_kvar_20_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_1130_kvar_20_1_txt, 23),
                                StringConvert.PadLeft(a4.W_1140_kvar_20_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1150_kvar_20_3_txt, 13),
                                StringConvert.InsertComma(a4.W_1160_kvar_20_4_txt, 14).PadLeft(14, ' ')); //20 1-4
                sb.Append("\r\n"); //CR&LF to line 21
                sb.AppendFormat("{0}{1}{2}{3}{4}{5}",
                    //a4.W_1170_kvar_21_1_txt.PadLeft(23, ' '),
                    //a4.W_1180_kvar_21_2_txt.PadLeft(12, ' '),
                    //a4.W_1190_kvar_21_3_txt.PadLeft(13, ' '),
                                StringConvert.PadLeft(a4.W_1170_kvar_21_1_txt, 23),
                                StringConvert.PadLeft(a4.W_1180_kvar_21_2_txt, 12),
                                StringConvert.PadLeft(a4.W_1190_kvar_21_3_txt, 13),
                                StringConvert.InsertComma(a4.W_1200_kvar_21_4_txt, 14).PadLeft(14, ' '),
                                blank.PadRight(16, ' '),
                                StringConvert.InsertComma(a4.W_1510_total_amnt_txt, 14).PadLeft(14, '*')); //21 1-5
                sb.Append("\r\n"); //CR&LF to line 22
                sb.Append("\r\n"); //CR&LF to line 23
                sb.Append("\r\n");
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1210_gen_kw_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1220_trans_kw_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1230_dist_kw_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text1); //23 1-4
                sb.Append("\r\n"); //CR&LF to line 24
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1240_gen_kwh_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1250_trans_kwh_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1260_dist_kwh_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text2); //24 1-4
                sb.Append("\r\n"); //CR&LF to line 25
                sb.AppendFormat("{0}{1}{2}{3}",
                                blank.PadLeft(41, ' '),
                                StringConvert.InsertComma(a4.W_1270_dis_supp_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text3); //25 3
                sb.Append("\r\n"); //CR&LF to line 26
                sb.AppendFormat("{0}{1}{2}{3}{4}",
                                StringConvert.InsertComma(a4.W_1280_gen_ft_amt_txt, 25).PadLeft(25, ' '),
                                StringConvert.InsertComma(a4.W_1290_trans_ft_amt_txt, 16).PadLeft(16, ' '),
                                StringConvert.InsertComma(a4.W_1300_dist_ft_amt_txt, 15).PadLeft(15, ' '),
                                blank.PadRight(2, ' '),
                                a4.W_1550_case_text4); //26 1-3
                sb.Append("\r\n"); //CR&LF to line 27

                if (!string.IsNullOrEmpty(a4.W_2030_barcode_a4))
                {
                    string barcode1 = string.Empty;
                    barcode1 = "BLAN_A4_Barcode_Start" + a4.W_2030_barcode_a4 + "BLAN_A4_Barcode_Stop";

                    sb.Append("\r\n"); //CR&LF to line 27.5
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(8, ' '),
                                    barcode1); //27 1
                    sb.Append("\r\n"); //CR&LF to line 28
                    sb.Append("\r\n"); //CR&LF to line 29s
                    sb.Append("\r\n"); //CR&LF to line 31
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(22, ' '),
                                    "(" + a4.W_1560_spell_amount + ")"); //31 1
                    sb.Append("\r\n"); //CR&LF to line 32
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(25, ' '),
                                    StringConvert.PadRight(FormatStringShortDate(a4.W_1580_payment_due_date), 28),
                                    a4.Special1580Text); //32 1
                    sb.Append("\r\n"); //CR&LF to line 33
                    sb.Append("\r\n");
                    string psText = "โปรดชำระเงินที่สำนักงานการไฟฟ้าเท่านั้น";
                    sb.AppendFormat("{0}{1}", blank.PadRight(12, ' '), psText); //33 1
                    sb.Append("\r\n"); //CR&LF to line 34
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(12, ' '),
                                    a4.W_1850_1851_adjust_amt);
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(16, ' '),
                                    txt_adjust_a4.PadRight(80, ' '));
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auName);
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auPosition);
                    sb.Append("\r\n");

                    //Fix
                    if (a4.BillSeqNo.Contains("Fix") || a4.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(80, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(10, '0'));
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(83, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(7, '0'));
                    }
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }
                else
                {
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    a4.W_1550_case_text5); //27 1
                    sb.Append("\r\n"); //CR&LF to line 28
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    a4.W_1550_case_text6); //28 1
                    sb.Append("\r\n"); //CR&LF to line 29
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    blank); //29 1 Replace W_1550_case_text8 by blank
                    sb.Append("\r\n"); //CR&LF to line 30
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(58, ' '),
                                    blank); //30 1 Replace W_1550_case_text8 by blank
                    sb.Append("\r\n"); //CR&LF to line 31
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(22, ' '),
                                    "(" + a4.W_1560_spell_amount + ")"); //31 1
                    sb.Append("\r\n"); //CR&LF to line 32
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}{2}",
                                    blank.PadRight(25, ' '),
                                    StringConvert.PadRight(FormatStringShortDate(a4.W_1580_payment_due_date), 28),
                                    a4.Special1580Text); //32 1
                    sb.Append("\r\n"); //CR&LF to line 33
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(12, ' '),
                                    a4.W_1850_1851_adjust_amt); //33 1
                    sb.Append("\r\n"); //CR&LF to line 34
                    sb.Append("\r\n"); // CR&LF to line 35 by Uthen 19-5-2015
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(16, ' '),
                                    txt_adjust_a4.PadRight(80, ' '));
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auName);
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                    sb.AppendFormat("{0}{1}",
                                    blank.PadRight(65, ' '),
                                    auPosition);
                    sb.Append("\r\n");
                    //Fix
                    if (a4.BillSeqNo.Contains("Fix") || a4.BillSeqNo.Contains("FIX"))
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(80, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(10, '0'));
                    }
                    else
                    {
                        sb.AppendFormat("{0}{1}",
                                        blank.PadRight(83, ' '),
                                        "A" + a4.BillSeqNo.PadLeft(7, '0'));
                    }
                    sb.Append("\r\n");
                    sb.Append("\r\n");
                }

                resultTxt = sb.ToString();
                //pack into entity
                Bills _bill = new Bills();
                _bill.BillId = a4.W_140_reg + "-" + a4.W_150_contract;
                _bill.BillTxt = resultTxt;
                _bills.Add(_bill);
            }

            return _bills;
        }

        private string FormatStringDate(string txt)
        {
            if (txt.Trim().Length == 8)
                return txt.Substring(6, 2) + "/" + txt.Substring(4, 2) + "/" + txt.Substring(0, 4);
            else
                return string.IsNullOrEmpty(txt) ? " " : txt;
        }

        private string FormatStringShortDate(string txt)
        {
            try
            {
                string[] months = new string[]
                                      {
                                          " ม.ค. ", " ก.พ. ", " มี.ค. ", " เม.ย. ", " พ.ค. ", " มิ.ย. ", " ก.ค. ", " ส.ค. "
                                          , " ก.ย. ", " ต.ค. ", " พ.ย. ", " ธ.ค. ",
                                      };
                string[] tmp1 = txt.Split(new char[] { '/' });

                if (tmp1.Length == 3)
                {
                    int month = Convert.ToInt32(tmp1[1]);
                    return tmp1[0] + months[month - 1] + (tmp1[2].Length == 2 ? "25" + tmp1[2] : tmp1[2]);
                }

                //if (txt.Length == 10)
                //{
                //    string[] months = new string[] { " ม.ค. ", " ก.พ. ", " มี.ค. ", " เม.ย. ", " พ.ค. ", " มิ.ย. ", " ก.ค. ", " ส.ค. ", " ก.ย. ", " ต.ค. ", " พ.ย. ", " ธ.ค. ", };
                //    string[] tmp1 = txt.Split(new char[] { '/' });

                //    int month = Convert.ToInt32(tmp1[1]);

                //    return tmp1[0] + months[month - 1] + tmp1[2];
                //}
                //else if (txt.Length == 8)
                //{
                //    string[] months = new string[] { " ม.ค. ", " ก.พ. ", " มี.ค. ", " เม.ย. ", " พ.ค. ", " มิ.ย. ", " ก.ค. ", " ส.ค. ", " ก.ย. ", " ต.ค. ", " พ.ย. ", " ธ.ค. ", };
                //    string[] tmp1 = txt.Split(new char[] { '/' });

                //    int month = Convert.ToInt32(tmp1[1]);

                //    return tmp1[0] + months[month - 1] + "25" + tmp1[2];
                //}
            }
            catch
            {
                return txt;
            }

            return "";
        }

        #endregion
    }
}
