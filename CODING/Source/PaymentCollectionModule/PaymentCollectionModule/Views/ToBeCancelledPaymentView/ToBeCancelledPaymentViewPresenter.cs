//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.PaymentCollectionModule.Interface.Services;
using System.Collections.Generic;
using PEA.BPM.PaymentCollectionModule.Interface.BusinessEntities;
using PEA.BPM.PaymentCollectionModule.Interface.Constants;
using Microsoft.Practices.CompositeUI.EventBroker;
using PEA.BPM.Architecture.CommonUtilities;
using System.Windows.Forms;

namespace PEA.BPM.PaymentCollectionModule
{
    public class ToBeCancelledPaymentViewPresenter : Presenter<IToBeCancelledPaymentView>
    {
        private IPaidBillService _paidBillingService;

        public ToBeCancelledPaymentViewPresenter([ServiceDependency] IPaidBillService paidBillingService)
        {
            _paidBillingService = paidBillingService;
        }

        private void SearchBillCallback(bool success, List<Bill> billings)
        {
            //List<Bill> _toBeCancelledBills = (List<Bill>)WorkItem.State["ToBeCancelledBills"];
            
            //foreach (Bill b in billings)
            //{
            //    _toBeCancelledBills.Add(b);
            //}

            //View.ToBeCancelledBills = _toBeCancelledBills;
        }
        
        /// <summary>
        /// This method is a placeholder that will be called by the view when it's been loaded <see cref="System.Winforms.Control.OnLoad"/>
        /// </summary>
        public override void OnViewReady()
        {
            base.OnViewReady();

          //  _billingService.SearchBillByCustomerId("", SearchBillCallback);
        }

        /// <summary>
        /// Close the view
        /// </summary>
        public void OnCloseView()
        {
            base.CloseView();
        }

        [EventPublication(EventTopicNames.CancellationClick, PublicationScope.WorkItem)]
        public event EventHandler<EventArgs> OnCancellationClick;
        internal void CancellationClick()
        {
            if (OnCancellationClick != null)
                OnCancellationClick(this, new EventArgs());
        }

        [EventSubscription(EventTopicNames.ReceiptSelect, Thread = ThreadOption.UserInterface)]
        public void PaidBillAddHandler(object sender, EventArgs<Receipt> e)
        {
            Receipt r = e.Data;
            View.Receipt = r;

            ReceiptDetail rd = _paidBillingService.GetReceiptDetail(r.ReceiptId);
            View.ReceiptDetail = rd;
        }

        internal void OnSaveData()
        {
            try
            {
                //_paidBillingService.CancelPaidBill(null, View.Receipt.ReceiptId, View.CancellationReason, Session.Terminal.Id, Session.Branch.Id);

                MessageBox.Show("ระบบได้ทำการยกเลิกการชำระเงินเรียบร้อยแล้ว", "ยกเลิกการชำระเงิน", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString(), "ยกเลิกการชำระเงิน", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}

