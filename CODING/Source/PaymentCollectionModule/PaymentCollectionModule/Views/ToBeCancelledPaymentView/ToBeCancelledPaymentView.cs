//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using System.Collections.Generic;
using PEA.BPM.PaymentCollectionModule.Interface.BusinessEntities;
using System.Drawing;
using PEA.BPM.Architecture.ArchitectureTool;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;

namespace PEA.BPM.PaymentCollectionModule
{
    [SmartPart]
    public partial class ToBeCancelledPaymentView : UserControl, IToBeCancelledPaymentView
    {
        private Receipt _receipt;
        private ReceiptDetail _receiptDetail;

        public ToBeCancelledPaymentView()
        {
            InitializeComponent();

            paidItemGridView.AutoGenerateColumns = false;
            paidMethodGridView.AutoGenerateColumns = false;

            //TODO: Add Cancel Reason
            //List<CancelReason> cancelReasons = new List<CancelReason>(CodeTable.Instant.ListCancelReasons());
            //cancelReasons.Insert(0, new CancelReason("", ""));
            //cancellingReasonComboBox.DataSource = cancelReasons;
            //cancellingReasonComboBox.ValueMember = "Description";
            //cancellingReasonComboBox.DisplayMember = "Description";
            
            ClearData();
        }

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public ToBeCancelledPaymentViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
        }

        #region IToBeCancelledPaymentView Members
        
        public Receipt Receipt
        {
            get
            {
                return _receipt;
            }
            set
            {
                this._receipt = value;
                LoadReceipt();
            }
        }

        public ReceiptDetail ReceiptDetail
        {
            set
            { 
                this._receiptDetail = value;
                LoadReceiptDetail();
            }
        }

        public string CancellationReason
        {
            get
            {
                return cancellingReasonComboBox.Text;
            }
        }

        private void LoadReceipt()
        {
            receiptIdTextBox.Text = _receipt.ReceiptId;
            receiptDateTextBox.Text = _receipt.ReceiptDate.Value.ToShortDateString() + " " + _receipt.ReceiptDate.Value.ToShortTimeString();
            //paymentTypeTextBox.Text = _receipt.PartialPayment == "1" ? "ชำระบางส่วน" : "ชำระเต็มจำนวน";
            posIdTextBox.Text = _receipt.PosId;
            cashierNameTextBox.Text = _receipt.CashierName;

            customerIdTextBox.Text = _receipt.CustomerId;
            customerNameTextBox.Text = _receipt.CustomerName;
            customerAddressTextBox.Text = _receipt.CustomerAddress;

            cancellingReasonComboBox.Enabled = true;
            okButton.Enabled = true;
            cancelButton.Enabled = true;

            cancellingReasonComboBox.Focus();
        }

        private void LoadReceiptDetail()
        {
            paidItemGridView.Enabled = false;
            paidItemGridView.DataSource = _receiptDetail.PaidItems;
            paidItemGridView.Enabled = true;

            totalItemTextBox.Text = _receiptDetail.PaidItems.Count.ToString();
            decimal gAmount = 0;
            foreach (PaidItem item in _receiptDetail.PaidItems)
            {
                gAmount += item.Amount.Value;
            }
            totalPaidItemAmountTextBox.Text = gAmount.ToString("#,##0.00");

            paidMethodGridView.Enabled = false;
            paidMethodGridView.DataSource = _receiptDetail.PaidMethods;
            paidMethodGridView.Enabled = true;
            decimal pAmount = 0;
            foreach (PaidMethod method in _receiptDetail.PaidMethods)
            {
                //pAmount += method.PaidAmount.Value;
            }
            totalPaidTextBox.Text = pAmount.ToString("#,##0.00");
        }

        #endregion

        private void okButton_Click(object sender, EventArgs e)
        {
            CancelReceipt();
        }

        private void CancelReceipt()
        {
            if (IsValidInput())
            {
                if (MessageBox.Show(
                    string.Format("ท่านกำลังจะยกเลิกการชำระเงินสำหรับใบเสร็จเลขที่ '{0}'\n\nกดปุ่ม 'Yes' เพื่อยืนยันการยกเลิก", _receipt.ReceiptId),
                    "ข้อความเตือน",
                    MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
                {
                    try
                    {
                        //_presenter.OnSaveData();
                        ClearData();
                    }
                    catch // TODO: จะไม่ทำอะไรจริงๆ เหรอ ?
                    {
                        //...
                    }
                }
            }
        }

        private bool IsValidInput()
        {
            if (cancellingReasonComboBox.Text.Trim().Length == 0)
            {
                cancellingReasonComboBox.BackColor = Color.Orange;
                MessageBox.Show("โปรดกรอกข้อมูล 'หมายเหตุการยกเลิก' ก่อนการบันทึกข้อมูล",
                    "ข้อความเตือน",
                    MessageBoxButtons.OK, MessageBoxIcon.Warning);

                return false;
            }

            return true;
        }

        private void cancelButton_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show(
                string.Format("ท่านกำลังจะยกเลิกการทำรายการ\n\nกดปุ่ม 'Yes' เพื่อยืนยันการยกเลิก", _receipt.ReceiptId),
                "ข้อความเตือน",
                MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) == DialogResult.Yes)
            {
                ClearData();
                _presenter.CancellationClick();
            }
        }

        private void ClearData()
        {
            receiptIdTextBox.Text = string.Empty;
            receiptDateTextBox.Text = string.Empty;
            customerIdTextBox.Text = string.Empty;
            customerNameTextBox.Text = string.Empty;
            customerAddressTextBox.Text = string.Empty;

            cashierNameTextBox.Text = string.Empty;
            posIdTextBox.Text = string.Empty;
            paymentTypeTextBox.Text = string.Empty;

            paidItemGridView.DataSource = null;
            totalItemTextBox.Text = string.Empty;
            totalPaidItemAmountTextBox.Text = string.Empty;

            paidMethodGridView.DataSource = null;
            totalPaidTextBox.Text = string.Empty;

            cancellingReasonComboBox.Text = string.Empty;
            cancellingReasonComboBox.BackColor = Color.White;

            cancellingReasonComboBox.Enabled = false;
            okButton.Enabled = false;
            cancelButton.Enabled = false;
        }

        private void cancellingReasonComboBox_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)13)
            {
                CancelReceipt();
            }
        }
    }
}

