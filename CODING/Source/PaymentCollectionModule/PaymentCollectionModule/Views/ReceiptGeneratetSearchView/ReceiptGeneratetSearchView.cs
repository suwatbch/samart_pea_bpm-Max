//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.Architecture.ArchitectureTool;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;
using PEA.BPM.PaymentCollectionModule.Interface.BusinessEntities;
using PEA.BPM.PaymentCollectionModule.Interface.Constants;
using System.Collections.Generic;
using PEA.BPM.Architecture.ArchitectureTool.Control;
using System.Drawing;
using System.ComponentModel;
using PEA.BPM.Architecture.CommonUtilities;
using System.Globalization;
using System.Data;
using System.IO;
using System.Text;

namespace PEA.BPM.PaymentCollectionModule
{
    [SmartPart]
    public partial class ReceiptGeneratetSearchView : UserControl, IReceiptGeneratetSearchView
    {

        #region Global Variable

        private PaymentNonReceiptInfo paymentSearch = null;

        #endregion

        #region Init Screen

        public ReceiptGeneratetSearchView()
        {
            InitializeComponent();
        }

        [CreateNew]
        public ReceiptGeneratetSearchViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        #endregion

        #region Event Handler

        protected override void OnLoad(EventArgs e)
        {
            try
            {
                _presenter.OnViewReady();
            }
            catch (Exception ex) // TODO: ไว้ย้อนกลับมาทำ
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            try
            {
                if (ValidatePaymentSearchResult(true))
                {
                    AssignPaymentCriteria(true);
                    WaitingFormHelper.ShowWaitingForm();
                    _presenter.OnSearchPayment(paymentSearch);
                    WaitingFormHelper.HideWaitingForm();
                }
            }
            catch (Exception ex) // TODO: ไว้ย้อนกลับมาทำ
            {
                WaitingFormHelper.HideWaitingForm();
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

  
        private void btnClear_Click(object sender, EventArgs e)
        {
            try
            {
                ResetSearchByCaIdControl();
            }
            catch (Exception ex) // TODO: ไว้ย้อนกลับมาทำ
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }


        private void txtReceiver_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                btnSearch.Focus();
            }
        }

     
        #endregion

        #region Custom Function (Validation)

        private bool ValidatePaymentSearchResult(bool caIdSearch)
        {
            bool result = true;
            if (!caIdSearch)
            {
                if (txtGroupInvoiceNo.Text.Trim() == "")
                {
                    result = false;
                    MessageBox.Show("กรุณาระบุหมายเลข มท. ก่อนการค้นหาข้อมูล", "คำเตือน", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
            return result;
        }

        #endregion

        #region Custom Fucntion

        private void AssignPaymentCriteria(bool caIdSearch)
        {
            paymentSearch = new PaymentNonReceiptInfo();
            if (caIdSearch)
            {
                paymentSearch.GroupInvoiceNo = null;
                paymentSearch.PaymentDt = cmbPaymentDt.Value.Date;
                paymentSearch.CaId = txtCaId.Text.Trim() == "" ? null : txtCaId.Text.Trim().PadLeft(12,'0');
                paymentSearch.BranchId = Session.Branch.Id;
                paymentSearch.Cashier = Session.User.Id;
            }
            else
            {
                paymentSearch.GroupInvoiceNo = txtGroupInvoiceNo.Text.Trim();
                paymentSearch.PaymentDt = DateTime.Now.Date;
                paymentSearch.CaId = null;
                paymentSearch.BranchId = Session.Branch.Id;
                paymentSearch.Cashier = Session.User.Id;
            }
        }

        private void ResetSearchByCaIdControl()
        {
            cmbPaymentDt.ResetText();
            txtCaId.ResetText();
        }

        private void ResetSearchByGroupInvoiceNoControl()
        {
            txtGroupInvoiceNo.ResetText();
        }


       
        #endregion

        private void txtCaId_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                btnSearch.Focus();
            }
        }

        private void btnGroupSearch_Click(object sender, EventArgs e)
        {
            try
            {
                if (ValidatePaymentSearchResult(false))
                {
                    AssignPaymentCriteria(false);
                    WaitingFormHelper.ShowWaitingForm();
                    _presenter.OnSearchPayment(paymentSearch);
                    WaitingFormHelper.HideWaitingForm();
                }
            }
            catch (Exception ex) // TODO: ไว้ย้อนกลับมาทำ
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnGroupSearchClear_Click(object sender, EventArgs e)
        {
            try
            {
                ResetSearchByGroupInvoiceNoControl();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        public void EnablePOSPanel(bool enable)
        {
            if (!enable)
            {
                ResetSearchByCaIdControl();
                ResetSearchByGroupInvoiceNoControl();
                searchPanel.Enabled = false;
            }
            else
            {
                ResetSearchByCaIdControl();
                ResetSearchByGroupInvoiceNoControl();
                btnSearch.Enabled = true;
            }
        }

    }
}

