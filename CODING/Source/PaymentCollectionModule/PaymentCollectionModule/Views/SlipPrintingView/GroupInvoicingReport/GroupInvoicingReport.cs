//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.PaymentCollectionModule.Interface.Services;
using Microsoft.Practices.CompositeUI;
using PEA.BPM.PaymentCollectionModule.Interface.BusinessEntities.Reports;
using Microsoft.Reporting.WinForms;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;
using PEA.BPM.Architecture.ArchitectureTool;
using System.Collections.Generic;
using System.Globalization;
using PEA.BPM.Architecture.CommonUtilities;

namespace PEA.BPM.PaymentCollectionModule
{
    [SmartPart]
    public partial class GroupInvoicingReport : UserControl, IGroupInvoicingReport
    {
        private IReportService _reportService;

        [InjectionConstructor]
        public GroupInvoicingReport([ServiceDependency] IReportService reportService)
        {
            _reportService = reportService;
        }

        public GroupInvoicingReport()
        {
            InitializeComponent();
        }

        private string _groupInvoiceNo;
        private string _receiptId;

        /// <summary>
        /// Sets the presenter. The dependency injection system will automatically
        /// create a new presenter for you.
        /// </summary>
        [CreateNew]
        public GroupInvoicingReportPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();            
        }

        public void ShowReport(string groupInvoiceNo, string receiptId, IReportService reportService)
        {
            this._groupInvoiceNo = groupInvoiceNo;
            this._receiptId = receiptId;
            this._reportService = reportService;

            CAC14Param param = new CAC14Param();
            param.GroupInvoiceNo = _groupInvoiceNo;
            param.ReceiptId = _receiptId;
            List<CAC14Report> reportCAC14Data = _reportService.GetReportCAC14(param);
            ReportDataSource dataSource = new ReportDataSource();
            dataSource.Name = "PEA_BPM_PaymentCollectionModule_Interface_BusinessEntities_Reports_CAC14Report";
            dataSource.Value = reportCAC14Data;

            ReportParameter[] rParam = new ReportParameter[4];
            rParam[0] = new ReportParameter("parCashierId", reportCAC14Data[0].CashierId);
            rParam[1] = new ReportParameter("parPaymentDt", reportCAC14Data[0].PaymentDt.Value.ToString("d MMMM yyyy", new CultureInfo("th-TH")));
            rParam[2] = new ReportParameter("parReceiptId", reportCAC14Data[0].ReceiptId);

            Branch branch = CodeTable.Instant.ListBranches(Session.Branch.Id);
            rParam[3] = new ReportParameter("parBranchDetail", branch.BranchName);

            //CAC14HeaderText
            rParam[4] = new ReportParameter("parCAC14HeaderText", reportCAC14Data[0].GroupInvoiceHeaderText);

            rdlcViewer.Reset();
            rdlcViewer.ProcessingMode = Microsoft.Reporting.WinForms.ProcessingMode.Local;
            rdlcViewer.LocalReport.ReportEmbeddedResource = "PEA.BPM.PaymentCollectionModule.Reports.CAC14Report.rdlc";
            rdlcViewer.LocalReport.DataSources.Add(dataSource);
            rdlcViewer.LocalReport.SetParameters(rParam);
            rdlcViewer.RefreshReport();        
        }
    }
}

