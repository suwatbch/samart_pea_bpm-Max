//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.Architecture.ArchitectureTool;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;
using System.Collections.Generic;
using PEA.BPM.Architecture.ArchitectureTool.Control;
using System.Drawing;
using System.ComponentModel;
using PEA.BPM.Architecture.CommonUtilities;
using PEA.BPM.ePaymentsModule.Utilities;
using PEA.BPM.Architecture.PrintUtilities;
using PEA.BPM.ePaymentsModule.Interface.BusinessEntities;
using PEA.BPM.ePaymentsModule.Interface.BusinessEntities.ReceiptPrinting;
using PEA.BPM.ePaymentsModule.Interface.Constants;
using System.Globalization;
using System.Data;
using System.IO;
using System.Text;

namespace PEA.BPM.ePaymentsModule
{
    [SmartPart]
    public partial class CancelPaymentSearchView : UserControl, ICancelPaymentSearchView
    {

        #region Global Variable

        private CancelPayment paymentParam;

        #endregion

        #region Init Screen

        public CancelPaymentSearchView()
        {
            InitializeComponent();
        }

        [CreateNew]
        public CancelPaymentSearchViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        #endregion

        #region Event Handler

        protected override void OnLoad(EventArgs e)
        {
            try
            {
                _presenter.OnViewReady();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            try
            {
                if (ValidatePaymentSearchResult(true))
                {
                    AssignPaymentCriteria(true);
                    _presenter.OnSearchPayment(paymentParam);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

  
        private void btnClear_Click(object sender, EventArgs e)
        {
            try
            {
                ResetSearchByReceiptControl();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnAgentSearch_Click(object sender, EventArgs e)
        {
            try
            {
                if (ValidatePaymentSearchResult(false))
                {
                    AssignPaymentCriteria(false);
                    _presenter.OnSearchPayment(paymentParam);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);               
            }
        }

        private void btnClearReceiptSearch_Click(object sender, EventArgs e)
        {
            ResetSearchByAgentControl();
        }

        private void txtReceiptId_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                txtReceiver.Focus();
            }
        }

        private void txtReceiver_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                btnSearch.Focus();
            }
        }

        private void txtAgentId_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                txtAgentName.Focus();
            }
        }

        private void txtAgentName_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Enter)
            {
                btnAgentSearch.Focus();
            }
        }

        #endregion

        #region Custom Function (Validation)

        private bool ValidatePaymentSearchResult(bool receiptSearch)
        {
            bool result = true;
            if (receiptSearch)
            {
                if (txtReceiptId.Text.Trim() == "" && txtReceiver.Text.Trim() == "")
                {
                    result = false;
                    MessageBox.Show("กรุณาป้อนเลขที่ใบเสร็จรับเงิน หรือชื่อผู้รับเงิน ก่อนการกดปุ่มแสดงข้อมูล", "คำเตือน", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    txtReceiptId.Focus();              
                }
            }
            else
            {
                if (txtAgentId.Text.Trim() == "" && txtAgentName.Text.Trim() == "")
                {
                    result = false;
                    MessageBox.Show("กรุณาป้อนรหัสตัวแทน หรือชื่อตัวแทน ก่อนกดปุ่มแสดงข้อมูล", "คำเตือน", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    txtAgentId.Focus();
                    txtAgentId.SelectAll();
                }
            }
            return result;
        }

        #endregion

        #region Custom Fucntion

        private void AssignPaymentCriteria(bool receiptSearch)
        {
            paymentParam = new CancelPayment();
            if (receiptSearch)
            {
                paymentParam.ReceiptId = txtReceiptId.Text.Trim() == ""?null:txtReceiptId.Text.Trim();
                paymentParam.ReceiverName = txtReceiver.Text.Trim() == ""?null:txtReceiver.Text.Trim();
                paymentParam.AgentId = null;
                paymentParam.AgentName = null;
            }
            else
            {
                paymentParam.AgentId = txtAgentId.Text.Trim() == ""?null:txtAgentId.Text.Trim();
                paymentParam.AgentName = txtAgentName.Text.Trim() == ""? null:txtAgentName.Text.Trim();
                paymentParam.ReceiptId = null;
                paymentParam.ReceiverName = null;
            }
        }

        private void ResetSearchByReceiptControl()
        {
            txtReceiptId.ResetText();
            txtReceiver.ResetText();
            txtReceiptId.Focus();
        }

        private void ResetSearchByAgentControl()
        {
            txtAgentId.Clear();
            txtAgentName.Clear();
            txtAgentId.Focus();
            txtAgentId.SelectAll();
        }

       
        #endregion

        private void txtAgentId_Click(object sender, EventArgs e)
        {
            txtAgentId.Focus();
            txtAgentId.SelectAll();
        }

    }
}

