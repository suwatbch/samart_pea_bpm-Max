//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using Microsoft.Practices.CompositeUI.SmartParts; 
using Microsoft.Practices.ObjectBuilder;
using PEA.BPM.Infrastructure.Interface;
using PEA.BPM.Architecture.ArchitectureTool;
using PEA.BPM.Infrastructure.Interface.BusinessEntities;
using System.Collections.Generic;
using PEA.BPM.Architecture.ArchitectureTool.Control;
using System.Drawing;
using PEA.BPM.ePaymentsModule.Services;
using PEA.BPM.ePaymentsModule.Interface.BusinessEntities;
using PEA.BPM.Architecture.CommonUtilities;
using System.IO;

namespace PEA.BPM.ePaymentsModule
{
    [SmartPart]
    public partial class VendorSearchView : UserControl, IVendorSearchView
    {

        #region Init Screen

        public VendorSearchView()
        {
            InitializeComponent();
        }

        [CreateNew]
        public VendorSearchViewPresenter Presenter
        {
            set
            {
                _presenter = value;
                _presenter.View = this;
            }
        }

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
        }

        #endregion

        #region Event Handler

        private void btnClear_Click(object sender, EventArgs e)
        {
            ResetConrol();
        }

        private void btnSearch_Click(object sender, EventArgs e)
        {
            try
            {
                SearchAgentPaymentList();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void txtAgentId_KeyUp(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtAgentName.Focus();
            }
        }

        private void txtAgentName_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                cmbUploadDate.Focus();
            }
        }

        private void cmbUploadDate_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                btnSearch.Focus();
            }
        }

        private void txtAgentId_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                txtAgentName.Focus();
            }
        }

        private void btnSearch_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                try
                {
                    SearchAgentPaymentList();
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message, "ข้อผิดพลาด", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        #endregion Event Handler

        #region Custom Function

        private void ResetConrol()
        {
            txtAgentId.ResetText();
            txtAgentName.ResetText();
            cmbUploadDate.Value = Session.BpmDateTime.Now;
            txtAgentId.Focus();
            txtAgentId.SelectAll();
        }

        private bool AgentIdValidate()
        {
            bool result = true;
            if (txtAgentId.Text.Trim() == "" && txtAgentName.Text.Trim() == "")
            {
                MessageBox.Show("กรุณาป้อนข้อมูลรหัส/ชื่อตัวแทนก่อนการค้นหา", "คำเตือน", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                txtAgentId.Focus();
                txtAgentId.SelectAll();
                result = false;
            }
           return result;
        }

        private void SearchAgentPaymentList()
        {
            try
            {
                if (AgentIdValidate())
                {
                    AgentPayment agentPay = new AgentPayment();
                    agentPay.AgentId = txtAgentId.Text.Trim() == "" ? null: txtAgentId.Text.Trim();
                    agentPay.AgentName = txtAgentName.Text.Trim() == "" ? null : txtAgentName.Text.Trim();
                    agentPay.PostDt = cmbUploadDate.Value.Date;
                    _presenter.OnSearchAgentPayment(agentPay);
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        #endregion

        private void txtAgentId_Click(object sender, EventArgs e)
        {
            txtAgentId.Focus();
            txtAgentId.SelectAll();
        }

    }
}

