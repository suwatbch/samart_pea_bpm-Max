//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using PEA.BPM.Infrastructure.Interface;
using Microsoft.Practices.CompositeUI.EventBroker;
using System.Collections.Generic;
using System.Windows.Forms;
using PEA.BPM.ePaymentsModule.Interface.Services;
using PEA.BPM.ePaymentsModule.Interface.Constants;
using PEA.BPM.ePaymentsModule.Interface.BusinessEntities.ReceiptPrinting;
using PEA.BPM.ePaymentsModule.Interface.BusinessEntities;
using PEA.BPM.ePaymentsModule.Services;

namespace PEA.BPM.ePaymentsModule 
{
    public class PrintGreenReceiptViewPresenter : Presenter<IPrintGreenReceiptView>
    {

        private IReceiptPrintingService _receiptPrintingService;
        private ICommonService _commonService;
       
        [InjectionConstructor]
        public PrintGreenReceiptViewPresenter([ServiceDependency] IReceiptPrintingService receiptPrintingService, ICommonService commonService)
		{
            _receiptPrintingService = receiptPrintingService;
            _commonService = commonService;
		}

        public override void OnViewReady()
        {
            base.OnViewReady();
        }

        public void OnCloseView()
        {
            base.CloseView();
        }

        #region Internal Function

        internal List<Bills> GetGreenBill(ReceiptConditionParam param)
        {
            try
            {
                return _receiptPrintingService.PrintGreenBill(param);
            }
            catch (Exception Ex)
            {
                throw;
            }
        }

        internal List<Company> GetCompany(DateTime uploadDt)
        {
            try
            {
                return _commonService.GetCompanyByUploadDtList(uploadDt);
            }
            catch (Exception Ex)
            {
                throw;
            }
        }

        #endregion

    }
}

